{
  "docs": {
    "name": "42 Api",
    "info": "This is the second version of the 42's API.",
    "copyright": "",
    "doc_url": "/apidoc/2.0",
    "api_url": "/api",
    "resources": {
      "attachments": {
        "doc_url": "/apidoc/2.0/attachments",
        "api_url": "/api",
        "name": "Attachments",
        "short_description": "All data which can be linked, like \u003ca href='#videos'\u003evideos\u003c/a\u003e, \u003ca href='#pdfs'\u003epdfs\u003c/a\u003e, or \u003ca href='#links'\u003elinks\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/attachments/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/attachments",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/attachments",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/attachments",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eattachable_id\u003c/code\u003e, \u003ccode\u003eattachable_type\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003edefault\u003c/code\u003e, \u003ccode\u003eup_to_date\u003c/code\u003e, \u003ccode\u003econtainer_id\u003c/code\u003e, \u003ccode\u003econtainer_type\u003c/code\u003e, \u003ccode\u003ebase_id\u003c/code\u003e, \u003ccode\u003euntranslatable\u003c/code\u003e, \u003ccode\u003eattachments_structure_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "attachable_id",
                      "attachable_type",
                      "kind",
                      "created_at",
                      "updated_at",
                      "language_id",
                      "user_id",
                      "default",
                      "up_to_date",
                      "container_id",
                      "container_type",
                      "base_id",
                      "untranslatable",
                      "attachments_structure_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eattachable_id\u003c/code\u003e, \u003ccode\u003eattachable_type\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003edefault\u003c/code\u003e, \u003ccode\u003eup_to_date\u003c/code\u003e, \u003ccode\u003econtainer_id\u003c/code\u003e, \u003ccode\u003econtainer_type\u003c/code\u003e, \u003ccode\u003ebase_id\u003c/code\u003e, \u003ccode\u003euntranslatable\u003c/code\u003e, \u003ccode\u003eattachments_structure_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "attachable_id",
                      "attachable_type",
                      "kind",
                      "created_at",
                      "updated_at",
                      "language_id",
                      "user_id",
                      "default",
                      "up_to_date",
                      "container_id",
                      "container_type",
                      "base_id",
                      "untranslatable",
                      "attachments_structure_id"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eattachable_id\u003c/code\u003e, \u003ccode\u003eattachable_type\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003edefault\u003c/code\u003e, \u003ccode\u003eup_to_date\u003c/code\u003e, \u003ccode\u003econtainer_id\u003c/code\u003e, \u003ccode\u003econtainer_type\u003c/code\u003e, \u003ccode\u003ebase_id\u003c/code\u003e, \u003ccode\u003euntranslatable\u003c/code\u003e, \u003ccode\u003eattachments_structure_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "attachable_id",
                      "attachable_type",
                      "kind",
                      "created_at",
                      "updated_at",
                      "language_id",
                      "user_id",
                      "default",
                      "up_to_date",
                      "container_id",
                      "container_type",
                      "base_id",
                      "untranslatable",
                      "attachments_structure_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/projects/4/attachments",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/attachments/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/attachments/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/attachments/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/attachments/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "name": "New Jersey zombies",
                  "pdf": { "pdf": { "url": null, "thumb": { "url": null } } },
                  "page_count": 1,
                  "created_at": "2017-11-22T13:41:25.981Z",
                  "pdf_processing": true,
                  "slug": "new-jersey-zombies",
                  "url": null,
                  "thumb_url": null,
                  "base_id": 1,
                  "language": {
                    "id": 3,
                    "name": "Romanian",
                    "identifier": "ro"
                  },
                  "type": "Pdf"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/attachments/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/attachments",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "attachment",
                "full_name": "attachment",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "kind",
                    "full_name": "attachment[kind]",
                    "description": "The kind of the attachment",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "attachment[language_id]",
                    "description": "The attachment language",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "untranslatable",
                    "full_name": "attachment[untranslatable]",
                    "description": "Is this attachment untranslatable",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "attachable_attributes",
                    "full_name": "attachment[attachable_attributes]",
                    "description": "The attachment file",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "name",
                        "full_name": "attachment[attachable_attributes][name]",
                        "description": "The name of the attachment",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_type",
                        "full_name": "attachment[attachable_attributes][attachable_type]",
                        "description": "The type of the attachment, need the file linked with the same param (see below)",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "pdf",
                        "full_name": "attachment[attachable_attributes][pdf]",
                        "description": "The attached pdf file",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be File",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "video",
                        "full_name": "attachment[attachable_attributes][video]",
                        "description": "The attached video file",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be File",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/attachments/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/attachments/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/attachments/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "attachment",
                "full_name": "attachment",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "kind",
                    "full_name": "attachment[kind]",
                    "description": "The kind of the attachment",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "attachment[language_id]",
                    "description": "The attachment language",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "untranslatable",
                    "full_name": "attachment[untranslatable]",
                    "description": "Is this attachment untranslatable",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "attachable_attributes",
                    "full_name": "attachment[attachable_attributes]",
                    "description": "The attachment file",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "name",
                        "full_name": "attachment[attachable_attributes][name]",
                        "description": "The name of the attachment",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_type",
                        "full_name": "attachment[attachable_attributes][attachable_type]",
                        "description": "The type of the attachment, need the file linked with the same param (see below)",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "pdf",
                        "full_name": "attachment[attachable_attributes][pdf]",
                        "description": "The attached pdf file",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be File",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "video",
                        "full_name": "attachment[attachable_attributes][video]",
                        "description": "The attached video file",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be File",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/attachments/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/attachments/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/attachments/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "accreditations": {
        "doc_url": "/apidoc/2.0/accreditations",
        "api_url": "/api",
        "name": "Accreditations",
        "short_description": "Accreditations",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/accreditations/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/accreditations",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "user_id",
                      "cursus_id",
                      "difficulty",
                      "validated",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "user_id",
                      "cursus_id",
                      "difficulty",
                      "validated",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "user_id",
                      "cursus_id",
                      "difficulty",
                      "validated",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/accreditations",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Kamino",
                    "user_id": 39,
                    "cursus_id": 2,
                    "validated": false
                  },
                  {
                    "id": 2,
                    "name": "Endor",
                    "user_id": 71,
                    "cursus_id": 2,
                    "validated": false
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/accreditations/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/accreditations/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/accreditations/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "name": "Endor",
                  "user_id": 71,
                  "cursus_id": 2,
                  "validated": false
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/accreditations/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/accreditations",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "accreditation",
                "full_name": "accreditation",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "accreditation[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "accreditation[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "accreditation[cursus_id]",
                    "description": "The cursus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated",
                    "full_name": "accreditation[validated]",
                    "description": "Is it validated ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "difficulty",
                    "full_name": "accreditation[difficulty]",
                    "description": "The difficulty.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "accreditations_skills_attributes",
                    "full_name": "accreditation[accreditations_skills_attributes]",
                    "description": "The accreditations skills attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "skill_id",
                        "full_name": "accreditation[accreditations_skills_attributes][skill_id]",
                        "description": "The skill id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "accreditation[accreditations_skills_attributes][value]",
                        "description": "The value.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Float",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "accreditation[accreditations_skills_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/accreditations",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "accreditation": {
                    "accreditations_skills_attributes": [
                      { "skill_id": "5", "value": "100.0" }
                    ],
                    "cursus_id": "2",
                    "difficulty": "100.0",
                    "name": "DQar",
                    "user_id": "90",
                    "validated": "true"
                  }
                },
                "response_data": {
                  "id": 3,
                  "name": "DQar",
                  "user_id": 90,
                  "cursus_id": 2,
                  "validated": true,
                  "difficulty": 100
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_tutor", "basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/accreditations/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/accreditations/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/accreditations/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "accreditation",
                "full_name": "accreditation",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "accreditation[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "accreditation[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "accreditation[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated",
                    "full_name": "accreditation[validated]",
                    "description": "Is it validated ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "difficulty",
                    "full_name": "accreditation[difficulty]",
                    "description": "The difficulty.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "accreditations_skills_attributes",
                    "full_name": "accreditation[accreditations_skills_attributes]",
                    "description": "The accreditations skills attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "skill_id",
                        "full_name": "accreditation[accreditations_skills_attributes][skill_id]",
                        "description": "The skill id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "accreditation[accreditations_skills_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Float",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "accreditation[accreditations_skills_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/accreditations/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "accreditation": {
                    "accreditations_skills_attributes": [
                      { "skill_id": "2", "value": "0.0" }
                    ],
                    "cursus_id": "2",
                    "difficulty": "100.0",
                    "name": "Kamino",
                    "user_id": "59",
                    "validated": "true"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_tutor", "basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/accreditations/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/accreditations/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/accreditations/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_tutor", "basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "achievements": {
        "doc_url": "/apidoc/2.0/achievements",
        "api_url": "/api",
        "name": "Achievements",
        "short_description": "Meta-goals earned by \u003ca href='#users'\u003eusers\u003c/a\u003e all along their progression.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/achievements/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/achievements",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/achievements",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/achievements",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/titles/:title_id/achievements",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "List all visibles achievements. Invisibles achievements need at least the \u003ccode\u003ebasic_staff\u003c/code\u003e role.",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "title_id",
                "full_name": "title_id",
                "description": "The title id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003etier\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003epedago\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003enbr_of_success\u003c/code\u003e, \u003ccode\u003eparent_id\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ereward\u003c/code\u003e, \u003ccode\u003etitle_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "name",
                      "internal_name",
                      "kind",
                      "tier",
                      "description",
                      "pedago",
                      "visible",
                      "nbr_of_success",
                      "parent_id",
                      "image",
                      "created_at",
                      "updated_at",
                      "slug",
                      "position",
                      "reward",
                      "title_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003etier\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003epedago\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003enbr_of_success\u003c/code\u003e, \u003ccode\u003eparent_id\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ereward\u003c/code\u003e, \u003ccode\u003etitle_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "internal_name",
                      "kind",
                      "tier",
                      "description",
                      "pedago",
                      "visible",
                      "nbr_of_success",
                      "parent_id",
                      "image",
                      "created_at",
                      "updated_at",
                      "slug",
                      "position",
                      "reward",
                      "title_id"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003etier\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003epedago\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003enbr_of_success\u003c/code\u003e, \u003ccode\u003eparent_id\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ereward\u003c/code\u003e, \u003ccode\u003etitle_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "internal_name",
                      "kind",
                      "tier",
                      "description",
                      "pedago",
                      "visible",
                      "nbr_of_success",
                      "parent_id",
                      "image",
                      "created_at",
                      "updated_at",
                      "slug",
                      "position",
                      "reward",
                      "title_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/achievements",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Film buff",
                    "description": "Regarder 1 video sur l'e-learning.",
                    "tier": "none",
                    "kind": "pedagogy",
                    "visible": true,
                    "image": "/uploads/achievement/image/1/logo.svg",
                    "nbr_of_success": 1,
                    "users_url": "https://api.intra.42.fr/v2/achievements/1/users",
                    "achievements": [],
                    "parent": null,
                    "title": null
                  },
                  {
                    "id": 3,
                    "name": "Film buff",
                    "description": "Regarder 21 videos sur l'e-learning.",
                    "tier": "none",
                    "kind": "pedagogy",
                    "visible": true,
                    "image": "/uploads/achievement/image/3/logo.svg",
                    "nbr_of_success": 21,
                    "users_url": "https://api.intra.42.fr/v2/achievements/3/users",
                    "achievements": [],
                    "parent": null,
                    "title": null
                  },
                  {
                    "id": 4,
                    "name": "Film buff",
                    "description": "Regarder 42 videos sur l'e-learning.",
                    "tier": "none",
                    "kind": "pedagogy",
                    "visible": true,
                    "image": "/uploads/achievement/image/4/logo.svg",
                    "nbr_of_success": 42,
                    "users_url": "https://api.intra.42.fr/v2/achievements/4/users",
                    "achievements": [],
                    "parent": null,
                    "title": null
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"],
              "authentication": "user",
              "facultative": true
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/achievements/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return the achievement specified by the \u003ccode\u003e:id\u003c/code\u003e parameter. Invisibles achievements need at least the \u003ccode\u003ebasic_staff\u003c/code\u003e role.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/achievements/8",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 8,
                  "name": "Film buff",
                  "description": "Regarder 10 videos sur l'e-learning.",
                  "tier": "none",
                  "kind": "pedagogy",
                  "visible": true,
                  "image": "/uploads/achievement/image/8/logo.svg",
                  "nbr_of_success": 10,
                  "users_url": "https://api.intra.42.fr/v2/achievements/8/users",
                  "achievements": [],
                  "parent": null,
                  "title": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/achievements",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "achievement",
                "full_name": "achievement",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "achievement[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internal_name",
                    "full_name": "achievement[internal_name]",
                    "description": "The internal name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "achievement[description]",
                    "description": "The description. Maximum length is 140.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pedago",
                    "full_name": "achievement[pedago]",
                    "description": "Is it pedago ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "visible",
                    "full_name": "achievement[visible]",
                    "description": "Is it visible ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nbr_of_success",
                    "full_name": "achievement[nbr_of_success]",
                    "description": "The nbr of success.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "parent_id",
                    "full_name": "achievement[parent_id]",
                    "description": "The parent id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image_cache",
                    "full_name": "achievement[image_cache]",
                    "description": "The image cache.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "achievement[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "achievement[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eproject\u003c/code\u003e, \u003ccode\u003esocial\u003c/code\u003e, \u003ccode\u003escolarity\u003c/code\u003e, \u003ccode\u003epedagogy\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title_id",
                    "full_name": "achievement[title_id]",
                    "description": "The title id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tier",
                    "full_name": "achievement[tier]",
                    "description": "The tier.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003eeasy\u003c/code\u003e, \u003ccode\u003emedium\u003c/code\u003e, \u003ccode\u003ehard\u003c/code\u003e, \u003ccode\u003echallenge\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "lg",
                    "full_name": "achievement[lg]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "position",
                    "full_name": "achievement[position]",
                    "description": "The position.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reward",
                    "full_name": "achievement[reward]",
                    "description": "The reward.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "achievement[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "achievement[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "community_services_attributes",
                    "full_name": "achievement[community_services_attributes]",
                    "description": "The community services attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "duration",
                        "full_name": "achievement[community_services_attributes][duration]",
                        "description": "The duration.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occupation",
                        "full_name": "achievement[community_services_attributes][occupation]",
                        "description": "The occupation. Maximum length is 255. Allow blank length is true.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "achievement[community_services_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "achievement[community_services_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/achievements",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "achievement": {
                    "name": "Be a test of the API",
                    "internal_name": "BeATestAPI",
                    "kind": "social",
                    "tier": "none",
                    "description": "Be used as a test for the api",
                    "image": {
                      "tempfile": [],
                      "original_filename": "logo.svg",
                      "content_type": "image/svg+xml",
                      "headers": "Content-Disposition: form-data; name=\"achievement[image]\"; filename=\"logo.svg\"\r\nContent-Type: image/svg+xml\r\nContent-Length: 2989\r\n"
                    },
                    "title_id": "30",
                    "cursus_ids": ["1"],
                    "campus_ids": ["1"],
                    "lg": "1"
                  }
                },
                "response_data": {
                  "id": 10,
                  "name": "Be a test of the API",
                  "description": "Be used as a test for the api",
                  "tier": "none",
                  "kind": "social",
                  "visible": false,
                  "image": "/uploads/achievement/image/10/logo.svg",
                  "nbr_of_success": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/10/users",
                  "achievements": [],
                  "parent": null,
                  "title": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "achievements_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/achievements/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/achievements/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "achievement",
                "full_name": "achievement",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "achievement[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internal_name",
                    "full_name": "achievement[internal_name]",
                    "description": "The internal name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "achievement[description]",
                    "description": "The description. Maximum length is 140.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pedago",
                    "full_name": "achievement[pedago]",
                    "description": "Is it pedago ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "visible",
                    "full_name": "achievement[visible]",
                    "description": "Is it visible ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nbr_of_success",
                    "full_name": "achievement[nbr_of_success]",
                    "description": "The nbr of success.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "parent_id",
                    "full_name": "achievement[parent_id]",
                    "description": "The parent id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image_cache",
                    "full_name": "achievement[image_cache]",
                    "description": "The image cache.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "achievement[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "achievement[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eproject\u003c/code\u003e, \u003ccode\u003esocial\u003c/code\u003e, \u003ccode\u003escolarity\u003c/code\u003e, \u003ccode\u003epedagogy\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title_id",
                    "full_name": "achievement[title_id]",
                    "description": "The title id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tier",
                    "full_name": "achievement[tier]",
                    "description": "The tier.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003eeasy\u003c/code\u003e, \u003ccode\u003emedium\u003c/code\u003e, \u003ccode\u003ehard\u003c/code\u003e, \u003ccode\u003echallenge\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "lg",
                    "full_name": "achievement[lg]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "position",
                    "full_name": "achievement[position]",
                    "description": "The position.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reward",
                    "full_name": "achievement[reward]",
                    "description": "The reward.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "achievement[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "achievement[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "community_services_attributes",
                    "full_name": "achievement[community_services_attributes]",
                    "description": "The community services attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "duration",
                        "full_name": "achievement[community_services_attributes][duration]",
                        "description": "The duration.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occupation",
                        "full_name": "achievement[community_services_attributes][occupation]",
                        "description": "The occupation. Maximum length is 255. Allow blank length is true.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "achievement[community_services_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "achievement[community_services_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/achievements/8",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "achievement": {
                    "name": "Be a test of the API",
                    "internal_name": "BeATestAPI",
                    "kind": "social",
                    "tier": "none",
                    "description": "Be used as a test for the api",
                    "image": {
                      "tempfile": [],
                      "original_filename": "logo.svg",
                      "content_type": "image/svg+xml",
                      "headers": "Content-Disposition: form-data; name=\"achievement[image]\"; filename=\"logo.svg\"\r\nContent-Type: image/svg+xml\r\nContent-Length: 2989\r\n"
                    },
                    "title_id": "30",
                    "cursus_ids": ["1"],
                    "campus_ids": ["1"],
                    "lg": "1"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "achievements_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/achievements/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/achievements/8",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "achievements_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "achievements_users": {
        "doc_url": "/apidoc/2.0/achievements_users",
        "api_url": "/api",
        "name": "Achievements users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e which earned an \u003ca href='#achievement'\u003eachievement\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/achievements_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/achievements/:achievement_id/achievements_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/achievements_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "achievement_id",
                "full_name": "achievement_id",
                "description": "The achievement id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eachievement_id\u003c/code\u003e, \u003ccode\u003enbr_of_success\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003erewarded\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "achievement_id",
                      "nbr_of_success",
                      "created_at",
                      "updated_at",
                      "rewarded"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eachievement_id\u003c/code\u003e, \u003ccode\u003enbr_of_success\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003erewarded\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "achievement_id",
                      "nbr_of_success",
                      "created_at",
                      "updated_at",
                      "rewarded"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eachievement_id\u003c/code\u003e, \u003ccode\u003enbr_of_success\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003erewarded\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "achievement_id",
                      "nbr_of_success",
                      "created_at",
                      "updated_at",
                      "rewarded"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/achievements_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 126,
                    "user_id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae",
                    "created_at": "2017-11-22T13:41:22.464Z"
                  },
                  {
                    "id": 125,
                    "user_id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb",
                    "created_at": "2017-11-22T13:41:22.453Z"
                  },
                  {
                    "id": 124,
                    "user_id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2",
                    "created_at": "2017-11-22T13:41:22.442Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/achievements_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return the achievement specified by the \u003ccode\u003e:id\u003c/code\u003e parameter",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/achievements_users/105",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 105,
                  "user_id": 105,
                  "login": "yodyoda2",
                  "url": "https://api.intra.42.fr/v2/users/yodyoda2",
                  "created_at": "2017-11-22T13:41:22.217Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/achievements_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "achievements_user",
                "full_name": "achievements_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "achievements_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given achievement.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "achievement_id",
                    "full_name": "achievements_user[achievement_id]",
                    "description": "The achievement id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nbr_of_success",
                    "full_name": "achievements_user[nbr_of_success]",
                    "description": "The nbr of success.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "rewarded",
                    "full_name": "achievements_user[rewarded]",
                    "description": "Is it rewarded ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/achievements_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "achievements_user": {
                    "achievement_id": "1",
                    "user_id": "29"
                  }
                },
                "response_data": {
                  "id": 127,
                  "user_id": 29,
                  "login": "askywalk",
                  "url": "https://api.intra.42.fr/v2/users/askywalk",
                  "created_at": "2017-11-22T13:43:26.572Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/achievements_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/achievements_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "achievements_user",
                "full_name": "achievements_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "achievements_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given achievement.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "achievement_id",
                    "full_name": "achievements_user[achievement_id]",
                    "description": "The achievement id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nbr_of_success",
                    "full_name": "achievements_user[nbr_of_success]",
                    "description": "The nbr of success.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "rewarded",
                    "full_name": "achievements_user[rewarded]",
                    "description": "Is it rewarded ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/achievements_users/105",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "achievements_user": {
                    "achievement_id": "5",
                    "user_id": "30"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/achievements_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/achievements_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/achievements_users/105",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "amendments": {
        "doc_url": "/apidoc/2.0/amendments",
        "api_url": "/api",
        "name": "Amendments",
        "short_description": "Modifications applied to an \u003ca href='#internship'\u003einternship\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/amendments/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/amendments",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/amendments",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/internships/:internship_id/amendments",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "internship_id",
                "full_name": "internship_id",
                "description": "The internship id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "amendment",
                "full_name": "amendment",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "internship_id",
                    "full_name": "amendment[internship_id]",
                    "description": "The internship id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "amendment[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "amendment[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eprolongation\u003c/code\u003e, \u003ccode\u003ebreach\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "origin",
                    "full_name": "amendment[origin]",
                    "description": "The origin.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003ecompany\u003c/code\u003e, \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003eschool\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "amendment[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/amendments/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/amendments/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "amendment",
                "full_name": "amendment",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "internship_id",
                    "full_name": "amendment[internship_id]",
                    "description": "The internship id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "amendment[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "amendment[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eprolongation\u003c/code\u003e, \u003ccode\u003ebreach\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "origin",
                    "full_name": "amendment[origin]",
                    "description": "The origin.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003ecompany\u003c/code\u003e, \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003eschool\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "amendment[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/amendments/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/amendments",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "amendment",
                "full_name": "amendment",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "internship_id",
                    "full_name": "amendment[internship_id]",
                    "description": "The internship id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "amendment[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "amendment[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eprolongation\u003c/code\u003e, \u003ccode\u003ebreach\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "origin",
                    "full_name": "amendment[origin]",
                    "description": "The origin.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003ecompany\u003c/code\u003e, \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003eschool\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "amendment[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/amendments/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/amendments/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "amendment",
                "full_name": "amendment",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "internship_id",
                    "full_name": "amendment[internship_id]",
                    "description": "The internship id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "amendment[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "amendment[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eprolongation\u003c/code\u003e, \u003ccode\u003ebreach\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "origin",
                    "full_name": "amendment[origin]",
                    "description": "The origin.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003ecompany\u003c/code\u003e, \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003eschool\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "amendment[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "announcements": {
        "doc_url": "/apidoc/2.0/announcements",
        "api_url": "/api",
        "name": "Announcements",
        "short_description": "An announcement made to \u003ca href='#users'\u003eusers\u003c/a\u003e in a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e on their homepage.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/announcements/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/announcements/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eexpire_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by expire_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eauthor\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003etext\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eexpire_at\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003enotificable_id\u003c/code\u003e, \u003ccode\u003enotificable_type\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "expire_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "author",
                      "title",
                      "text",
                      "kind",
                      "created_at",
                      "updated_at",
                      "image",
                      "expire_at",
                      "link",
                      "notificable_id",
                      "notificable_type"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eauthor\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003etext\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eexpire_at\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003enotificable_id\u003c/code\u003e, \u003ccode\u003enotificable_type\u003c/code\u003e, \u003ccode\u003eexpire\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "author",
                      "title",
                      "text",
                      "kind",
                      "created_at",
                      "updated_at",
                      "image",
                      "expire_at",
                      "link",
                      "notificable_id",
                      "notificable_type",
                      "expire"
                    ],
                    "additional": {
                      "expire": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only expire announcements"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eauthor\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003etext\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eexpire_at\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003enotificable_id\u003c/code\u003e, \u003ccode\u003enotificable_type\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "author",
                      "title",
                      "text",
                      "kind",
                      "created_at",
                      "updated_at",
                      "image",
                      "expire_at",
                      "link",
                      "notificable_id",
                      "notificable_type"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/announcements/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 4 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/announcements/filtering_keys",
            "name": "filtering_keys",
            "apis": [],
            "formats": null,
            "full_description": "Return all the announcements, globally or # filtered by cursus",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": null,
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/announcements/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/announcements/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return the announcement specified by the \u003ccode\u003e:id\u003c/code\u003e parameter",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/announcements/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 4,
                  "author": "Jerrell Prohaska",
                  "title": "Minnesota frogs",
                  "text": "Pickled aut et repellendus ugh sed a natus. Beatae cliche knausgaard.",
                  "kind": "global",
                  "link": null,
                  "created_at": "2017-11-22T13:41:03.321Z",
                  "updated_at": "2017-11-22T13:41:03.321Z",
                  "expire_at": "2017-11-03T07:42:11.309Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/announcements/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/announcements",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/announcements",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "announcement",
                "full_name": "announcement",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "cursus_ids",
                    "full_name": "announcement[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "announcement[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "author",
                    "full_name": "announcement[author]",
                    "description": "The author.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title",
                    "full_name": "announcement[title]",
                    "description": "The title.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "text",
                    "full_name": "announcement[text]",
                    "description": "The text.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "announcement[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "expire_at",
                    "full_name": "announcement[expire_at]",
                    "description": "The expire at. .",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "announcement[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/announcements",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "announcement": {
                    "author": "42partnerships",
                    "campus_ids": ["1"],
                    "cursus_ids": ["1"],
                    "expire_at": "2017-11-22 14:13:10 UTC",
                    "kind": "global",
                    "text": "42partnerships revient",
                    "title": "Partenariats écoles 2016"
                  }
                },
                "response_data": {
                  "id": 5,
                  "author": "42partnerships",
                  "title": "Partenariats écoles 2016",
                  "text": "42partnerships revient",
                  "kind": "global",
                  "link": null,
                  "created_at": "2017-11-22T13:43:27.259Z",
                  "updated_at": "2017-11-22T13:43:27.259Z",
                  "expire_at": "2017-11-22T14:13:10.000Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["community_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/announcements/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/announcements/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/announcements/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "announcement",
                "full_name": "announcement",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "cursus_ids",
                    "full_name": "announcement[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "announcement[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "author",
                    "full_name": "announcement[author]",
                    "description": "The author.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title",
                    "full_name": "announcement[title]",
                    "description": "The title.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "text",
                    "full_name": "announcement[text]",
                    "description": "The text.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "announcement[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "expire_at",
                    "full_name": "announcement[expire_at]",
                    "description": "The expire at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "announcement[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/announcements/4",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "announcement": {
                    "author": "42partnerships",
                    "campus_ids": ["1"],
                    "cursus_ids": ["1"],
                    "expire_at": "2017-11-22 14:13:10 UTC",
                    "kind": "global",
                    "text": "42partnerships revient",
                    "title": "Partenariats écoles 2016"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["community_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/announcements/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/announcements/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/announcements/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["community_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "anti_grav_units": {
        "doc_url": "/apidoc/2.0/anti_grav_units",
        "api_url": "/api",
        "name": "Anti grav units",
        "short_description": null,
        "full_description": null,
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/anti_grav_units/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/anti_grav_units",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/anti_grav_units/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/anti_grav_units/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": null
      },
      "anti_grav_units_users": {
        "doc_url": "/apidoc/2.0/anti_grav_units_users",
        "api_url": "/api",
        "name": "Anti grav units users",
        "short_description": null,
        "full_description": null,
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/anti_grav_units_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/anti_grav_units_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/anti_grav_units_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/anti_grav_units_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003eis_free\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003eend_date\u003c/code\u003e, \u003ccode\u003eexpected_end_date\u003c/code\u003e, \u003ccode\u003ebegin_date\u003c/code\u003e, \u003ccode\u003eanti_grav_unit_id\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "close_id",
                      "is_free",
                      "reason",
                      "end_date",
                      "expected_end_date",
                      "begin_date",
                      "anti_grav_unit_id",
                      "internship_id",
                      "cursus_id",
                      "active"
                    ],
                    "additional": {
                      "cursus_id": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return agu users with users in the given cursus"
                      },
                      "active": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003eis_free\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003eend_date\u003c/code\u003e, \u003ccode\u003eexpected_end_date\u003c/code\u003e, \u003ccode\u003ebegin_date\u003c/code\u003e, \u003ccode\u003eanti_grav_unit_id\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "close_id",
                      "is_free",
                      "reason",
                      "end_date",
                      "expected_end_date",
                      "begin_date",
                      "anti_grav_unit_id",
                      "internship_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/anti_grav_units_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "anti_grav_units_user": {
                      "id": 64,
                      "expected_end_date": "2020-02-10",
                      "begin_date": "2019-12-09",
                      "user_id": 18763,
                      "is_free": true,
                      "created_at": "2019-12-09T14:17:15.986Z",
                      "updated_at": "2019-12-09T14:17:15.986Z",
                      "anti_grav_unit_id": 1,
                      "reason": "I secured a job/internship",
                      "close_id": 65822
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/anti_grav_units_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/anti_grav_units_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/anti_grav_units_users/64",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "anti_grav_units_user": {
                    "id": 64,
                    "expected_end_date": "2020-02-10",
                    "begin_date": "2019-12-09",
                    "user_id": 18763,
                    "is_free": true,
                    "created_at": "2019-12-09T14:17:15.986Z",
                    "updated_at": "2019-12-09T14:17:15.986Z",
                    "anti_grav_unit_id": 1,
                    "reason": "I secured a job/internship",
                    "close_id": 65822
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/anti_grav_units_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/anti_grav_units_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Create an AntiGravUnitsUser, if is_free is true then the AGU user will not loose an agu or freeze time.This is the api for creating agu that ends in the future. If you are looking for creating agu in the past to delay the blackhole, please go to the following link. \u003ca href=\"/apidoc/2.0/users/free_past_agu.html\"\u003ePOST /v2/users/:user_id/free_past_agu\u003c/a\u003e",
            "errors": [],
            "params": [
              {
                "name": "anti_grav_units_user",
                "full_name": "anti_grav_units_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "anti_grav_units_user[user_id]",
                    "description": "Freezed user id",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Integer",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "anti_grav_unit_id",
                    "full_name": "anti_grav_units_user[anti_grav_unit_id]",
                    "description": "Must refer to the AntiGravUnit related.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Integer",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_date",
                    "full_name": "anti_grav_units_user[begin_date]",
                    "description": "The date when the agu started, defaulted to Today",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Date",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "expected_end_date",
                    "full_name": "anti_grav_units_user[expected_end_date]",
                    "description": "The date when the agu will be automatically stopped",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Date",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "anti_grav_units_user[reason]",
                    "description": "The reason of this freeze",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_free",
                    "full_name": "anti_grav_units_user[is_free]",
                    "description": "If true, the agu will not consume one of 3 user agu, can be overlapped with other agus",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/anti_grav_units_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "anti_grav_units_user": {
                    "begin_date": "2019-12-09",
                    "expected_end_date": "2020-02-10",
                    "user_id": 80962,
                    "is_free": true,
                    "anti_grav_unit_id": 1
                  }
                },
                "response_data": {
                  "anti_grav_units_user": {
                    "id": 64,
                    "user_id": 18763,
                    "anti_grav_unit_id": 1,
                    "begin_date": "2019-12-09",
                    "expected_end_date": "2020-02-10",
                    "reason": "other",
                    "is_free": true,
                    "close_id": 65822,
                    "created_at": "2019-12-09T14:17:15.986Z",
                    "updated_at": "2019-12-09T14:17:15.986Z"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/anti_grav_units_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/anti_grav_units_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/anti_grav_units_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "anti_grav_units_user",
                "full_name": "anti_grav_units_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "anti_grav_units_user[user_id]",
                    "description": "Freezed user id",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Integer",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "anti_grav_unit_id",
                    "full_name": "anti_grav_units_user[anti_grav_unit_id]",
                    "description": "Must refer to the AntiGravUnit related.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Integer",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_date",
                    "full_name": "anti_grav_units_user[begin_date]",
                    "description": "The date when the agu started, defaulted to Today",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Date",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "expected_end_date",
                    "full_name": "anti_grav_units_user[expected_end_date]",
                    "description": "The date when the agu will be automatically stopped",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Date",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "anti_grav_units_user[reason]",
                    "description": "The reason of this freeze",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_free",
                    "full_name": "anti_grav_units_user[is_free]",
                    "description": "If true, the agu will not consume one of 3 user agu, can be overlapped with other agus",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/anti_grav_units_users/64",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "anti_grav_units_user": {
                    "begin_date": "2019-12-09",
                    "expected_end_date": "2020-03-10",
                    "is_free": false
                  }
                },
                "response_data": {
                  "anti_grav_units_user": {
                    "id": 64,
                    "user_id": 18763,
                    "anti_grav_unit_id": 1,
                    "begin_date": "2019-12-09",
                    "expected_end_date": "2020-03-10",
                    "reason": "other",
                    "is_free": false,
                    "close_id": 65822,
                    "created_at": "2019-12-09T14:17:15.986Z",
                    "updated_at": "2019-12-09T14:17:15.986Z"
                  }
                },
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": null
      },
      "apps": {
        "doc_url": "/apidoc/2.0/apps",
        "api_url": "/api",
        "name": "Apps",
        "short_description": "Applications for the API v2",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/apps/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/apps",
                "http_method": "GET",
                "short_description": "Get all the public and owned applications",
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/apps",
                "http_method": "GET",
                "short_description": "Get all the public and owned applications",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return all the \u003cstrong\u003epublic\u003c/strong\u003e created applications working with the APIv2.If there is a resource owner, also returns the resource owner applications, \u003cstrong\u003epublic or not\u003c/strong\u003e.",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eallowed_origins\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "token",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "allowed_origins"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003euid\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003ewebsite\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": ["id", "name", "uid", "owner_id", "website"],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003euid\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003ewebsite\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": ["id", "name", "uid", "owner_id", "website"],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/apps",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 7,
                    "name": "test intrateam staff oauth application",
                    "description": null,
                    "image": null,
                    "website": null,
                    "public": true,
                    "scopes": [],
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "rate_limit": 1800,
                    "roles": [
                      {
                        "id": 16,
                        "name": "Official App",
                        "description": "Approved application without rate limits"
                      },
                      {
                        "id": 7,
                        "name": "Basic Staff",
                        "description": "Member of the staff, can manage community services, closes, exams and access advanced student data"
                      },
                      {
                        "id": 11,
                        "name": "Advanced Staff",
                        "description": "Member of the staff, with higher privileges"
                      },
                      {
                        "id": 1,
                        "name": "Intrateam",
                        "description": "manage all"
                      }
                    ]
                  },
                  {
                    "id": 6,
                    "name": "test pedago oauth application",
                    "description": null,
                    "image": null,
                    "website": null,
                    "public": true,
                    "scopes": [],
                    "created_at": "2017-11-22T13:43:11.315Z",
                    "updated_at": "2017-11-22T13:43:11.369Z",
                    "owner": {},
                    "rate_limit": 1800,
                    "roles": [
                      {
                        "id": 16,
                        "name": "Official App",
                        "description": "Approved application without rate limits"
                      },
                      {
                        "id": 7,
                        "name": "Basic Staff",
                        "description": "Member of the staff, can manage community services, closes, exams and access advanced student data"
                      },
                      {
                        "id": 11,
                        "name": "Advanced Staff",
                        "description": "Member of the staff, with higher privileges"
                      },
                      {
                        "id": 5,
                        "name": "Advanced Tutor",
                        "description": "Manage skills, cursus and all low level pedagogic data"
                      }
                    ]
                  },
                  {
                    "id": 5,
                    "name": "test advanced staff oauth application",
                    "description": null,
                    "image": null,
                    "website": null,
                    "public": true,
                    "scopes": [],
                    "created_at": "2017-11-22T13:43:11.261Z",
                    "updated_at": "2017-11-22T13:43:11.307Z",
                    "owner": {},
                    "rate_limit": 1800,
                    "roles": [
                      {
                        "id": 16,
                        "name": "Official App",
                        "description": "Approved application without rate limits"
                      },
                      {
                        "id": 7,
                        "name": "Basic Staff",
                        "description": "Member of the staff, can manage community services, closes, exams and access advanced student data"
                      },
                      {
                        "id": 11,
                        "name": "Advanced Staff",
                        "description": "Member of the staff, with higher privileges"
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "authentication": "user",
              "facultative": true
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/apps/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/apps/:id",
                "http_method": "GET",
                "short_description": "Get a public or owned application",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/apps/7",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 7,
                  "name": "test intrateam staff oauth application",
                  "description": null,
                  "image": null,
                  "website": null,
                  "public": true,
                  "scopes": [],
                  "created_at": "2017-11-22T13:43:11.377Z",
                  "updated_at": "2017-11-22T13:43:11.434Z",
                  "owner": {
                    "id": 74,
                    "login": "pamidala",
                    "url": "https://api.intra.42.fr/v2/users/pamidala"
                  },
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "id": 16,
                      "name": "Official App",
                      "description": "Approved application without rate limits"
                    },
                    {
                      "id": 7,
                      "name": "Basic Staff",
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data"
                    },
                    {
                      "id": 11,
                      "name": "Advanced Staff",
                      "description": "Member of the staff, with higher privileges"
                    },
                    {
                      "id": 1,
                      "name": "Intrateam",
                      "description": "manage all"
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "balances": {
        "doc_url": "/apidoc/2.0/balances",
        "api_url": "/api",
        "name": "Balances",
        "short_description": "The \u003ca href='#balances'\u003ebalance\u003c/a\u003e of a \u003ca href='#pools'\u003epool\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/balances/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/balances",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/pools/:pool_id/balances",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "pool_id",
                "full_name": "pool_id",
                "description": "The pool id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epool_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "created_at",
                      "updated_at",
                      "pool_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epool_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "created_at",
                      "updated_at",
                      "pool_id",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only balances which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end balances"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "balance",
                "full_name": "balance",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "begin_at",
                    "full_name": "balance[begin_at]",
                    "description": "The begin at. Must be before end at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "balance[end_at]",
                    "description": "The end at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_id",
                    "full_name": "balance[pool_id]",
                    "description": "The pool id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/balances",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 191,
                    "begin_at": "2018-06-16 10:49:28",
                    "end_at": "2018-06-16 14:03:41",
                    "pool_id": 21
                  },
                  {
                    "id": 192,
                    "begin_at": "2018-06-25 22:52:56",
                    "end_at": "2018-07-23 22:52:56",
                    "pool_id": 16
                  },
                  {
                    "id": 193,
                    "begin_at": "2018-06-28 11:56:03",
                    "end_at": "2018-07-26 11:56:03",
                    "pool_id": 18
                  }
                ],
                "show_in_doc": 1
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/balances/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/balances/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/pools/:pool_id/balances/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "pool_id",
                "full_name": "pool_id",
                "description": "The pool id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "balance",
                "full_name": "balance",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "begin_at",
                    "full_name": "balance[begin_at]",
                    "description": "The begin at. Must be before end at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "balance[end_at]",
                    "description": "The end at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_id",
                    "full_name": "balance[pool_id]",
                    "description": "The pool id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/balances/191",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 191,
                  "begin_at": "2018-06-16 10:49:28",
                  "end_at": "2018-06-16 14:03:41",
                  "pool_id": 21
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/balances/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/balances/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/balances/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/pools/:pool_id/balances/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/pools/:pool_id/balances/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "pool_id",
                "full_name": "pool_id",
                "description": "The pool id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "balance",
                "full_name": "balance",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "begin_at",
                    "full_name": "balance[begin_at]",
                    "description": "The begin at. Must be before end at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "balance[end_at]",
                    "description": "The end at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_id",
                    "full_name": "balance[pool_id]",
                    "description": "The pool id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/balances/191",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "balance": {
                    "begin_at": "2018-06-16 10:49:28",
                    "end_at": "2018-06-16 14:03:41"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "bloc_deadlines": {
        "doc_url": "/apidoc/2.0/bloc_deadlines",
        "api_url": "/api",
        "name": "Bloc deadlines",
        "short_description": "A \u003ca href='#bloc_deadlines\u003eBloc Deadlines\u003c/a\u003e is the beginning and the end of a yearly tournament for a \u003ca href='#blocs'\u003ebloc\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/bloc_deadlines/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/bloc_deadlines",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/blocs/:bloc_id/bloc_deadlines",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebloc_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecoalition_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "bloc_id",
                      "begin_at",
                      "end_at",
                      "created_at",
                      "updated_at",
                      "coalition_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/bloc_deadlines/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/bloc_deadlines/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/bloc_deadlines/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "bloc_id": 1,
                  "coalition_id": 1,
                  "begin_at": "2017-11-22T13:41:20.752Z",
                  "end_at": "2018-11-22T13:41:20.752Z",
                  "created_at": "2017-11-22T13:41:20.764Z",
                  "updated_at": "2017-11-22T13:41:20.764Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/bloc_deadlines/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/bloc_deadlines",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_deadline",
                "full_name": "bloc_deadline",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "bloc_deadline[bloc_id]",
                    "description": "The bloc id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "bloc_deadline[begin_at]",
                    "description": "The begin at.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "bloc_deadline[end_at]",
                    "description": "The end at.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "coalition_id",
                    "full_name": "bloc_deadline[coalition_id]",
                    "description": "The coalition id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/bloc_deadlines",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "bloc_deadline": {
                    "begin_at": "2022-11-29",
                    "bloc_id": "1",
                    "coalition_id": "2",
                    "end_at": "2023-11-29"
                  }
                },
                "response_data": {
                  "id": 6,
                  "bloc_id": 1,
                  "coalition_id": 2,
                  "begin_at": "2022-11-29T00:00:00.000Z",
                  "end_at": "2023-11-29T00:00:00.000Z",
                  "created_at": "2017-11-22T13:43:28.263Z",
                  "updated_at": "2017-11-22T13:43:28.263Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/bloc_deadlines/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/bloc_deadlines/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/bloc_deadlines/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "bloc_deadline",
                "full_name": "bloc_deadline",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "bloc_deadline[bloc_id]",
                    "description": "The bloc id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "bloc_deadline[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "bloc_deadline[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "coalition_id",
                    "full_name": "bloc_deadline[coalition_id]",
                    "description": "The coalition id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/bloc_deadlines/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "bloc_deadline": {
                    "begin_at": "2022-11-29",
                    "bloc_id": "1",
                    "coalition_id": "2",
                    "end_at": "2023-11-29"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "blocs": {
        "doc_url": "/apidoc/2.0/blocs",
        "api_url": "/api",
        "name": "Blocs",
        "short_description": "A \u003ca href='#blocs'\u003ebloc\u003c/a\u003e is the managing container of \u003ca href='#coalitions'\u003ecoalitions\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/blocs/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/blocs",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003esquad_size\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecoalition_delay\u003c/code\u003e, \u003ccode\u003erepeat_deadline_delay\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "cursus_id",
                      "campus_id",
                      "squad_size",
                      "created_at",
                      "updated_at",
                      "coalition_delay",
                      "repeat_deadline_delay"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003esquad_size\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecoalition_delay\u003c/code\u003e, \u003ccode\u003erepeat_deadline_delay\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "cursus_id",
                      "campus_id",
                      "squad_size",
                      "created_at",
                      "updated_at",
                      "coalition_delay",
                      "repeat_deadline_delay"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/blocs",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "campus_id": 5,
                    "cursus_id": 1,
                    "squad_size": 80,
                    "created_at": "2017-11-22T13:41:20.665Z",
                    "updated_at": "2017-11-22T13:41:20.665Z",
                    "coalitions": [
                      {
                        "id": 1,
                        "name": "Indiana goblins",
                        "slug": "super-slug",
                        "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                        "color": "#1c7f08",
                        "score": 54,
                        "user_id": 38
                      },
                      {
                        "id": 2,
                        "name": "Kansas giants",
                        "slug": "super-slug",
                        "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                        "color": "#087262",
                        "score": 83,
                        "user_id": 90
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/blocs/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/blocs/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/blocs/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "campus_id": 5,
                  "cursus_id": 1,
                  "squad_size": 80,
                  "created_at": "2017-11-22T13:41:20.665Z",
                  "updated_at": "2017-11-22T13:41:20.665Z",
                  "coalitions": [
                    {
                      "id": 1,
                      "name": "Indiana goblins",
                      "slug": "super-slug",
                      "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                      "color": "#1c7f08",
                      "score": 54,
                      "user_id": 38
                    },
                    {
                      "id": 2,
                      "name": "Kansas giants",
                      "slug": "super-slug",
                      "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                      "color": "#087262",
                      "score": 83,
                      "user_id": 90
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "broadcasts": {
        "doc_url": "/apidoc/2.0/broadcasts",
        "api_url": "/api",
        "name": "Broadcasts",
        "short_description": "Broadcasts publicated on a campus",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/broadcasts/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/campus/:campus_id/broadcasts",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003etag_id\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003epinned_until\u003c/code\u003e, \u003ccode\u003ehidden_at\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003econtent_html\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "campus_id",
                      "tag_id",
                      "content",
                      "pinned_until",
                      "hidden_at",
                      "url",
                      "created_at",
                      "updated_at",
                      "content_html",
                      "position"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003etag_id\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003epinned_until\u003c/code\u003e, \u003ccode\u003ehidden_at\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003econtent_html\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ehidden\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "campus_id",
                      "tag_id",
                      "content",
                      "pinned_until",
                      "hidden_at",
                      "url",
                      "created_at",
                      "updated_at",
                      "content_html",
                      "position",
                      "hidden"
                    ],
                    "additional": {
                      "hidden": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only hidden broadcasts"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "authentication": "user"
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "campus": {
        "doc_url": "/apidoc/2.0/campus",
        "api_url": "/api",
        "name": "Campus",
        "short_description": "Places where 42 \u003ca href='#users'\u003eusers\u003c/a\u003e works",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/campus/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/campus",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003etime_zone\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003emain_email\u003c/code\u003e, \u003ccode\u003eendpoint_id\u003c/code\u003e, \u003ccode\u003evogsphere_id\u003c/code\u003e, \u003ccode\u003econtent_email\u003c/code\u003e, \u003ccode\u003etime_of_community_service_started\u003c/code\u003e, \u003ccode\u003ecompanies_mail\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003epro_needs_validation\u003c/code\u003e, \u003ccode\u003elogo\u003c/code\u003e, \u003ccode\u003ewebsite\u003c/code\u003e, \u003ccode\u003efacebook\u003c/code\u003e, \u003ccode\u003etwitter\u003c/code\u003e, \u003ccode\u003edisplay_name\u003c/code\u003e, \u003ccode\u003eemail_extension\u003c/code\u003e, \u003ccode\u003ehelp_url\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003eopen_to_job_offers\u003c/code\u003e, \u003ccode\u003edefault_hidden_phone\u003c/code\u003e, \u003ccode\u003etig_email\u003c/code\u003e, \u003ccode\u003eminimum_slot_duration\u003c/code\u003e, \u003ccode\u003ealumni_system\u003c/code\u003e, \u003ccode\u003emanual_alumnization_before_first_internship\u003c/code\u003e, \u003ccode\u003epublic\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "time_zone",
                      "language_id",
                      "slug",
                      "main_email",
                      "endpoint_id",
                      "vogsphere_id",
                      "content_email",
                      "time_of_community_service_started",
                      "companies_mail",
                      "address",
                      "zip",
                      "city",
                      "country",
                      "pro_needs_validation",
                      "logo",
                      "website",
                      "facebook",
                      "twitter",
                      "display_name",
                      "email_extension",
                      "help_url",
                      "active",
                      "open_to_job_offers",
                      "default_hidden_phone",
                      "tig_email",
                      "minimum_slot_duration",
                      "alumni_system",
                      "manual_alumnization_before_first_internship",
                      "public"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003etime_zone\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003emain_email\u003c/code\u003e, \u003ccode\u003eendpoint_id\u003c/code\u003e, \u003ccode\u003evogsphere_id\u003c/code\u003e, \u003ccode\u003econtent_email\u003c/code\u003e, \u003ccode\u003etime_of_community_service_started\u003c/code\u003e, \u003ccode\u003ecompanies_mail\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003epro_needs_validation\u003c/code\u003e, \u003ccode\u003elogo\u003c/code\u003e, \u003ccode\u003ewebsite\u003c/code\u003e, \u003ccode\u003efacebook\u003c/code\u003e, \u003ccode\u003etwitter\u003c/code\u003e, \u003ccode\u003edisplay_name\u003c/code\u003e, \u003ccode\u003eemail_extension\u003c/code\u003e, \u003ccode\u003ehelp_url\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003eopen_to_job_offers\u003c/code\u003e, \u003ccode\u003edefault_hidden_phone\u003c/code\u003e, \u003ccode\u003etig_email\u003c/code\u003e, \u003ccode\u003eminimum_slot_duration\u003c/code\u003e, \u003ccode\u003ealumni_system\u003c/code\u003e, \u003ccode\u003emanual_alumnization_before_first_internship\u003c/code\u003e, \u003ccode\u003epublic\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "time_zone",
                      "language_id",
                      "slug",
                      "main_email",
                      "endpoint_id",
                      "vogsphere_id",
                      "content_email",
                      "time_of_community_service_started",
                      "companies_mail",
                      "address",
                      "zip",
                      "city",
                      "country",
                      "pro_needs_validation",
                      "logo",
                      "website",
                      "facebook",
                      "twitter",
                      "display_name",
                      "email_extension",
                      "help_url",
                      "active",
                      "open_to_job_offers",
                      "default_hidden_phone",
                      "tig_email",
                      "minimum_slot_duration",
                      "alumni_system",
                      "manual_alumnization_before_first_internship",
                      "public"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003etime_zone\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003emain_email\u003c/code\u003e, \u003ccode\u003eendpoint_id\u003c/code\u003e, \u003ccode\u003evogsphere_id\u003c/code\u003e, \u003ccode\u003econtent_email\u003c/code\u003e, \u003ccode\u003etime_of_community_service_started\u003c/code\u003e, \u003ccode\u003ecompanies_mail\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003epro_needs_validation\u003c/code\u003e, \u003ccode\u003elogo\u003c/code\u003e, \u003ccode\u003ewebsite\u003c/code\u003e, \u003ccode\u003efacebook\u003c/code\u003e, \u003ccode\u003etwitter\u003c/code\u003e, \u003ccode\u003edisplay_name\u003c/code\u003e, \u003ccode\u003eemail_extension\u003c/code\u003e, \u003ccode\u003ehelp_url\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003eopen_to_job_offers\u003c/code\u003e, \u003ccode\u003edefault_hidden_phone\u003c/code\u003e, \u003ccode\u003etig_email\u003c/code\u003e, \u003ccode\u003eminimum_slot_duration\u003c/code\u003e, \u003ccode\u003ealumni_system\u003c/code\u003e, \u003ccode\u003emanual_alumnization_before_first_internship\u003c/code\u003e, \u003ccode\u003epublic\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "time_zone",
                      "language_id",
                      "slug",
                      "main_email",
                      "endpoint_id",
                      "vogsphere_id",
                      "content_email",
                      "time_of_community_service_started",
                      "companies_mail",
                      "address",
                      "zip",
                      "city",
                      "country",
                      "pro_needs_validation",
                      "logo",
                      "website",
                      "facebook",
                      "twitter",
                      "display_name",
                      "email_extension",
                      "help_url",
                      "active",
                      "open_to_job_offers",
                      "default_hidden_phone",
                      "tig_email",
                      "minimum_slot_duration",
                      "alumni_system",
                      "manual_alumnization_before_first_internship",
                      "public"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/campus",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "language": {
                      "id": 1,
                      "name": "Français",
                      "identifier": "fr"
                    },
                    "users_count": 22997,
                    "vogsphere_id": 1,
                    "country": "France",
                    "address": "96, boulevard Bessières",
                    "zip": "75017",
                    "city": "Paris",
                    "website": "http://www.42.fr/",
                    "facebook": "https://facebook.com/42born2code",
                    "twitter": "https://twitter.com/42born2code",
                    "active": true,
                    "public": true,
                    "email_extension": "42.fr",
                    "default_hidden_phone": false,
                    "endpoint": {
                      "id": 33,
                      "url": "https://endpoint.42paris.fr",
                      "description": "42paris's new ldapkdc endpoint",
                      "created_at": "2021-06-14T07:49:14.872Z",
                      "updated_at": "2021-06-28T15:24:45.089Z"
                    }
                  },
                  {
                    "id": 9,
                    "name": "Lyon",
                    "time_zone": "Europe/Paris",
                    "language": {
                      "id": 1,
                      "name": "Français",
                      "identifier": "fr"
                    },
                    "users_count": 2077,
                    "vogsphere_id": 4,
                    "country": "France",
                    "address": "Campus Région – 78 route de Paris",
                    "zip": "69260",
                    "city": "Charbonnières-les-Bains",
                    "website": "https://www.42lyon.fr/",
                    "facebook": "https://www.facebook.com/42lyon",
                    "twitter": "https://twitter.com/42lyon",
                    "active": true,
                    "public": true,
                    "email_extension": "42lyon.fr",
                    "default_hidden_phone": false,
                    "endpoint": {
                      "id": 19,
                      "url": "https://bigbro.42lyon.fr",
                      "description": "42 Lyon endpoint tmp",
                      "created_at": "2020-07-28T15:21:29.199Z",
                      "updated_at": "2020-07-28T15:21:29.199Z"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/campus/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/campus/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/campus/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "name": "Paris",
                  "time_zone": "Europe/Paris",
                  "language": {
                    "id": 1,
                    "name": "Français",
                    "identifier": "fr"
                  },
                  "users_count": 22997,
                  "vogsphere_id": 1,
                  "country": "France",
                  "address": "96, boulevard Bessières",
                  "zip": "75017",
                  "city": "Paris",
                  "website": "http://www.42.fr/",
                  "facebook": "https://facebook.com/42born2code",
                  "twitter": "https://twitter.com/42born2code",
                  "active": true,
                  "public": true,
                  "email_extension": "42.fr",
                  "default_hidden_phone": false,
                  "endpoint": {
                    "id": 33,
                    "url": "https://endpoint.42paris.fr",
                    "description": "42paris's new ldapkdc endpoint",
                    "created_at": "2021-06-14T07:49:14.872Z",
                    "updated_at": "2021-06-28T15:24:45.089Z"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/campus/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/campus",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "campus",
                "full_name": "campus",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "campus[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "time_zone",
                    "full_name": "campus[time_zone]",
                    "description": "The time zone.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Honolulu\u003c/code\u003e, \u003ccode\u003eAmerica/Juneau\u003c/code\u003e, \u003ccode\u003eAmerica/Los_Angeles\u003c/code\u003e, \u003ccode\u003eAmerica/Tijuana\u003c/code\u003e, \u003ccode\u003eAmerica/Phoenix\u003c/code\u003e, \u003ccode\u003eAmerica/Chihuahua\u003c/code\u003e, \u003ccode\u003eAmerica/Mazatlan\u003c/code\u003e, \u003ccode\u003eAmerica/Denver\u003c/code\u003e, \u003ccode\u003eAmerica/Guatemala\u003c/code\u003e, \u003ccode\u003eAmerica/Chicago\u003c/code\u003e, \u003ccode\u003eAmerica/Mexico_City\u003c/code\u003e, \u003ccode\u003eAmerica/Mexico_City\u003c/code\u003e, \u003ccode\u003eAmerica/Monterrey\u003c/code\u003e, \u003ccode\u003eAmerica/Regina\u003c/code\u003e, \u003ccode\u003eAmerica/Bogota\u003c/code\u003e, \u003ccode\u003eAmerica/New_York\u003c/code\u003e, \u003ccode\u003eAmerica/Indiana/Indianapolis\u003c/code\u003e, \u003ccode\u003eAmerica/Lima\u003c/code\u003e, \u003ccode\u003eAmerica/Lima\u003c/code\u003e, \u003ccode\u003eAmerica/Halifax\u003c/code\u003e, \u003ccode\u003eAmerica/Caracas\u003c/code\u003e, \u003ccode\u003eAmerica/Guyana\u003c/code\u003e, \u003ccode\u003eAmerica/La_Paz\u003c/code\u003e, \u003ccode\u003eAmerica/Santiago\u003c/code\u003e, \u003ccode\u003eAmerica/St_Johns\u003c/code\u003e, \u003ccode\u003eAmerica/Sao_Paulo\u003c/code\u003e, \u003ccode\u003eAmerica/Argentina/Buenos_Aires\u003c/code\u003e, \u003ccode\u003eAmerica/Godthab\u003c/code\u003e, \u003ccode\u003eAmerica/Montevideo\u003c/code\u003e, \u003ccode\u003eAtlantic/South_Georgia\u003c/code\u003e, \u003ccode\u003eAtlantic/Azores\u003c/code\u003e, \u003ccode\u003eAtlantic/Cape_Verde\u003c/code\u003e, \u003ccode\u003eEurope/London\u003c/code\u003e, \u003ccode\u003eEurope/Lisbon\u003c/code\u003e, \u003ccode\u003eEurope/London\u003c/code\u003e, \u003ccode\u003eAfrica/Monrovia\u003c/code\u003e, \u003ccode\u003eEtc/UTC\u003c/code\u003e, \u003ccode\u003eEurope/Amsterdam\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Berlin\u003c/code\u003e, \u003ccode\u003eEurope/Zurich\u003c/code\u003e, \u003ccode\u003eEurope/Prague\u003c/code\u003e, \u003ccode\u003eEurope/Brussels\u003c/code\u003e, \u003ccode\u003eEurope/Budapest\u003c/code\u003e, \u003ccode\u003eAfrica/Casablanca\u003c/code\u003e, \u003ccode\u003eEurope/Copenhagen\u003c/code\u003e, \u003ccode\u003eEurope/Dublin\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Madrid\u003c/code\u003e, \u003ccode\u003eEurope/Paris\u003c/code\u003e, \u003ccode\u003eEurope/Prague\u003c/code\u003e, \u003ccode\u003eEurope/Rome\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Stockholm\u003c/code\u003e, \u003ccode\u003eEurope/Vienna\u003c/code\u003e, \u003ccode\u003eEurope/Warsaw\u003c/code\u003e, \u003ccode\u003eAfrica/Algiers\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Zurich\u003c/code\u003e, \u003ccode\u003eEurope/Athens\u003c/code\u003e, \u003ccode\u003eEurope/Bucharest\u003c/code\u003e, \u003ccode\u003eAfrica/Cairo\u003c/code\u003e, \u003ccode\u003eAfrica/Maputo\u003c/code\u003e, \u003ccode\u003eEurope/Helsinki\u003c/code\u003e, \u003ccode\u003eAsia/Jerusalem\u003c/code\u003e, \u003ccode\u003eEurope/Kaliningrad\u003c/code\u003e, \u003ccode\u003eEurope/Kiev\u003c/code\u003e, \u003ccode\u003eAfrica/Johannesburg\u003c/code\u003e, \u003ccode\u003eEurope/Riga\u003c/code\u003e, \u003ccode\u003eEurope/Sofia\u003c/code\u003e, \u003ccode\u003eEurope/Tallinn\u003c/code\u003e, \u003ccode\u003eEurope/Vilnius\u003c/code\u003e, \u003ccode\u003eAsia/Baghdad\u003c/code\u003e, \u003ccode\u003eEurope/Istanbul\u003c/code\u003e, \u003ccode\u003eAsia/Riyadh\u003c/code\u003e, \u003ccode\u003eEurope/Minsk\u003c/code\u003e, \u003ccode\u003eEurope/Moscow\u003c/code\u003e, \u003ccode\u003eAfrica/Nairobi\u003c/code\u003e, \u003ccode\u003eAsia/Riyadh\u003c/code\u003e, \u003ccode\u003eEurope/Moscow\u003c/code\u003e, \u003ccode\u003eAsia/Tehran\u003c/code\u003e, \u003ccode\u003eAsia/Dubai\u003c/code\u003e, \u003ccode\u003eAsia/Baku\u003c/code\u003e, \u003ccode\u003eAsia/Dubai\u003c/code\u003e, \u003ccode\u003eEurope/Samara\u003c/code\u003e, \u003ccode\u003eAsia/Tbilisi\u003c/code\u003e, \u003ccode\u003eEurope/Volgograd\u003c/code\u003e, \u003ccode\u003eAsia/Yerevan\u003c/code\u003e, \u003ccode\u003eAsia/Kabul\u003c/code\u003e, \u003ccode\u003eAsia/Yekaterinburg\u003c/code\u003e, \u003ccode\u003eAsia/Karachi\u003c/code\u003e, \u003ccode\u003eAsia/Karachi\u003c/code\u003e, \u003ccode\u003eAsia/Tashkent\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Colombo\u003c/code\u003e, \u003ccode\u003eAsia/Kathmandu\u003c/code\u003e, \u003ccode\u003eAsia/Almaty\u003c/code\u003e, \u003ccode\u003eAsia/Dhaka\u003c/code\u003e, \u003ccode\u003eAsia/Dhaka\u003c/code\u003e, \u003ccode\u003eAsia/Urumqi\u003c/code\u003e, \u003ccode\u003eAsia/Yangon\u003c/code\u003e, \u003ccode\u003eAsia/Bangkok\u003c/code\u003e, \u003ccode\u003eAsia/Bangkok\u003c/code\u003e, \u003ccode\u003eAsia/Jakarta\u003c/code\u003e, \u003ccode\u003eAsia/Krasnoyarsk\u003c/code\u003e, \u003ccode\u003eAsia/Novosibirsk\u003c/code\u003e, \u003ccode\u003eAsia/Shanghai\u003c/code\u003e, \u003ccode\u003eAsia/Shanghai\u003c/code\u003e, \u003ccode\u003eAsia/Hong_Kong\u003c/code\u003e, \u003ccode\u003eAsia/Irkutsk\u003c/code\u003e, \u003ccode\u003eAsia/Kuala_Lumpur\u003c/code\u003e, \u003ccode\u003eAustralia/Perth\u003c/code\u003e, \u003ccode\u003eAsia/Singapore\u003c/code\u003e, \u003ccode\u003eAsia/Taipei\u003c/code\u003e, \u003ccode\u003eAsia/Ulaanbaatar\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Seoul\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Yakutsk\u003c/code\u003e, \u003ccode\u003eAustralia/Adelaide\u003c/code\u003e, \u003ccode\u003eAustralia/Darwin\u003c/code\u003e, \u003ccode\u003eAustralia/Brisbane\u003c/code\u003e, \u003ccode\u003eAustralia/Melbourne\u003c/code\u003e, \u003ccode\u003ePacific/Guam\u003c/code\u003e, \u003ccode\u003eAustralia/Hobart\u003c/code\u003e, \u003ccode\u003eAustralia/Melbourne\u003c/code\u003e, \u003ccode\u003ePacific/Port_Moresby\u003c/code\u003e, \u003ccode\u003eAustralia/Sydney\u003c/code\u003e, \u003ccode\u003eAsia/Vladivostok\u003c/code\u003e, \u003ccode\u003eAsia/Magadan\u003c/code\u003e, \u003ccode\u003ePacific/Noumea\u003c/code\u003e, \u003ccode\u003ePacific/Guadalcanal\u003c/code\u003e, \u003ccode\u003eAsia/Srednekolymsk\u003c/code\u003e, \u003ccode\u003ePacific/Auckland\u003c/code\u003e, \u003ccode\u003ePacific/Fiji\u003c/code\u003e, \u003ccode\u003eAsia/Kamchatka\u003c/code\u003e, \u003ccode\u003ePacific/Majuro\u003c/code\u003e, \u003ccode\u003ePacific/Auckland\u003c/code\u003e, \u003ccode\u003ePacific/Chatham\u003c/code\u003e, \u003ccode\u003ePacific/Tongatapu\u003c/code\u003e, \u003ccode\u003ePacific/Apia\u003c/code\u003e, \u003ccode\u003ePacific/Fakaofo\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "campus[language_id]",
                    "description": "The language id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "main_email",
                    "full_name": "campus[main_email]",
                    "description": "The main email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "endpoint_id",
                    "full_name": "campus[endpoint_id]",
                    "description": "The endpoint id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "vogsphere_id",
                    "full_name": "campus[vogsphere_id]",
                    "description": "The vogsphere id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content_email",
                    "full_name": "campus[content_email]",
                    "description": "The content email.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tig_email",
                    "full_name": "campus[tig_email]",
                    "description": "The tig email. Default to hi, \u003cstrong\u003eyour account has been closed\u003c/strong\u003e for the following reason: “ reason ”. to unclose your account, you must choose a date for your community services hererl schedule ). your community services will last ** duration hours\u003cstrong\u003e. warning: do not set your community services on national holiday, otherwise your community services duration will be doubled. meet the bocal at\u003c/strong\u003e start at \u003cstrong\u003e. if you are late or missing, your community services duration will be doubled. .\u003c/strong\u003e",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "time_of_community_service_started",
                    "full_name": "campus[time_of_community_service_started]",
                    "description": "The time of community service started.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "companies_mail",
                    "full_name": "campus[companies_mail]",
                    "description": "The companies mail.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "address",
                    "full_name": "campus[address]",
                    "description": "The address.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip",
                    "full_name": "campus[zip]",
                    "description": "The zip.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "city",
                    "full_name": "campus[city]",
                    "description": "The city.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "campus[country]",
                    "description": "The country.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pro_needs_validation",
                    "full_name": "campus[pro_needs_validation]",
                    "description": "Is it pro needs validation ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "open_to_job_offers",
                    "full_name": "campus[open_to_job_offers]",
                    "description": "Is it open to job offers ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "logo",
                    "full_name": "campus[logo]",
                    "description": "The logo.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "website",
                    "full_name": "campus[website]",
                    "description": "The website.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "facebook",
                    "full_name": "campus[facebook]",
                    "description": "The facebook.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "twitter",
                    "full_name": "campus[twitter]",
                    "description": "The twitter.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "display_name",
                    "full_name": "campus[display_name]",
                    "description": "The display name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email_extension",
                    "full_name": "campus[email_extension]",
                    "description": "The email extension.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "help_url",
                    "full_name": "campus[help_url]",
                    "description": "The help url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "logo_cache",
                    "full_name": "campus[logo_cache]",
                    "description": "The logo cache.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "default_hidden_phone",
                    "full_name": "campus[default_hidden_phone]",
                    "description": "Is it default hidden phone ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "minimum_slot_duration",
                    "full_name": "campus[minimum_slot_duration]",
                    "description": "The minimum slot duration. Default to 30.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "manual_alumnization_before_first_internship",
                    "full_name": "campus[manual_alumnization_before_first_internship]",
                    "description": "Is it manual alumnization before first internship ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "public",
                    "full_name": "campus[public]",
                    "description": "Is it public ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/campus",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "campus": {
                    "address": "42007 Mossie Forest",
                    "city": "Danielton",
                    "content_email": "Hi __first_name__",
                    "country": "Bonaire, Sint Eustatius and Saba",
                    "display_name": "42 Paris",
                    "language_id": "1",
                    "logo": "#\u003cFile:0x007fa9e8b2c048\u003e",
                    "name": "Argentina1",
                    "time_of_community_service_started": "2017-11-22 14:00:00 +0100",
                    "time_zone": "Pacific/Pago_Pago",
                    "website": "http://cruickshankwehner.org/pinkie_reynolds",
                    "zip": "19751-7157"
                  }
                },
                "response_data": {
                  "id": 7,
                  "name": "Argentina1",
                  "time_zone": "Pacific/Pago_Pago",
                  "language": {
                    "id": 1,
                    "name": "Français",
                    "identifier": "fr"
                  },
                  "users_count": 0,
                  "vogsphere_id": null,
                  "endpoint": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/campus/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/campus/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus",
                "full_name": "campus",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "campus[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "time_zone",
                    "full_name": "campus[time_zone]",
                    "description": "The time zone.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Honolulu\u003c/code\u003e, \u003ccode\u003eAmerica/Juneau\u003c/code\u003e, \u003ccode\u003eAmerica/Los_Angeles\u003c/code\u003e, \u003ccode\u003eAmerica/Tijuana\u003c/code\u003e, \u003ccode\u003eAmerica/Phoenix\u003c/code\u003e, \u003ccode\u003eAmerica/Chihuahua\u003c/code\u003e, \u003ccode\u003eAmerica/Mazatlan\u003c/code\u003e, \u003ccode\u003eAmerica/Denver\u003c/code\u003e, \u003ccode\u003eAmerica/Guatemala\u003c/code\u003e, \u003ccode\u003eAmerica/Chicago\u003c/code\u003e, \u003ccode\u003eAmerica/Mexico_City\u003c/code\u003e, \u003ccode\u003eAmerica/Mexico_City\u003c/code\u003e, \u003ccode\u003eAmerica/Monterrey\u003c/code\u003e, \u003ccode\u003eAmerica/Regina\u003c/code\u003e, \u003ccode\u003eAmerica/Bogota\u003c/code\u003e, \u003ccode\u003eAmerica/New_York\u003c/code\u003e, \u003ccode\u003eAmerica/Indiana/Indianapolis\u003c/code\u003e, \u003ccode\u003eAmerica/Lima\u003c/code\u003e, \u003ccode\u003eAmerica/Lima\u003c/code\u003e, \u003ccode\u003eAmerica/Halifax\u003c/code\u003e, \u003ccode\u003eAmerica/Caracas\u003c/code\u003e, \u003ccode\u003eAmerica/Guyana\u003c/code\u003e, \u003ccode\u003eAmerica/La_Paz\u003c/code\u003e, \u003ccode\u003eAmerica/Santiago\u003c/code\u003e, \u003ccode\u003eAmerica/St_Johns\u003c/code\u003e, \u003ccode\u003eAmerica/Sao_Paulo\u003c/code\u003e, \u003ccode\u003eAmerica/Argentina/Buenos_Aires\u003c/code\u003e, \u003ccode\u003eAmerica/Godthab\u003c/code\u003e, \u003ccode\u003eAmerica/Montevideo\u003c/code\u003e, \u003ccode\u003eAtlantic/South_Georgia\u003c/code\u003e, \u003ccode\u003eAtlantic/Azores\u003c/code\u003e, \u003ccode\u003eAtlantic/Cape_Verde\u003c/code\u003e, \u003ccode\u003eEurope/London\u003c/code\u003e, \u003ccode\u003eEurope/Lisbon\u003c/code\u003e, \u003ccode\u003eEurope/London\u003c/code\u003e, \u003ccode\u003eAfrica/Monrovia\u003c/code\u003e, \u003ccode\u003eEtc/UTC\u003c/code\u003e, \u003ccode\u003eEurope/Amsterdam\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Berlin\u003c/code\u003e, \u003ccode\u003eEurope/Zurich\u003c/code\u003e, \u003ccode\u003eEurope/Prague\u003c/code\u003e, \u003ccode\u003eEurope/Brussels\u003c/code\u003e, \u003ccode\u003eEurope/Budapest\u003c/code\u003e, \u003ccode\u003eAfrica/Casablanca\u003c/code\u003e, \u003ccode\u003eEurope/Copenhagen\u003c/code\u003e, \u003ccode\u003eEurope/Dublin\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Madrid\u003c/code\u003e, \u003ccode\u003eEurope/Paris\u003c/code\u003e, \u003ccode\u003eEurope/Prague\u003c/code\u003e, \u003ccode\u003eEurope/Rome\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Stockholm\u003c/code\u003e, \u003ccode\u003eEurope/Vienna\u003c/code\u003e, \u003ccode\u003eEurope/Warsaw\u003c/code\u003e, \u003ccode\u003eAfrica/Algiers\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Zurich\u003c/code\u003e, \u003ccode\u003eEurope/Athens\u003c/code\u003e, \u003ccode\u003eEurope/Bucharest\u003c/code\u003e, \u003ccode\u003eAfrica/Cairo\u003c/code\u003e, \u003ccode\u003eAfrica/Maputo\u003c/code\u003e, \u003ccode\u003eEurope/Helsinki\u003c/code\u003e, \u003ccode\u003eAsia/Jerusalem\u003c/code\u003e, \u003ccode\u003eEurope/Kaliningrad\u003c/code\u003e, \u003ccode\u003eEurope/Kiev\u003c/code\u003e, \u003ccode\u003eAfrica/Johannesburg\u003c/code\u003e, \u003ccode\u003eEurope/Riga\u003c/code\u003e, \u003ccode\u003eEurope/Sofia\u003c/code\u003e, \u003ccode\u003eEurope/Tallinn\u003c/code\u003e, \u003ccode\u003eEurope/Vilnius\u003c/code\u003e, \u003ccode\u003eAsia/Baghdad\u003c/code\u003e, \u003ccode\u003eEurope/Istanbul\u003c/code\u003e, \u003ccode\u003eAsia/Riyadh\u003c/code\u003e, \u003ccode\u003eEurope/Minsk\u003c/code\u003e, \u003ccode\u003eEurope/Moscow\u003c/code\u003e, \u003ccode\u003eAfrica/Nairobi\u003c/code\u003e, \u003ccode\u003eAsia/Riyadh\u003c/code\u003e, \u003ccode\u003eEurope/Moscow\u003c/code\u003e, \u003ccode\u003eAsia/Tehran\u003c/code\u003e, \u003ccode\u003eAsia/Dubai\u003c/code\u003e, \u003ccode\u003eAsia/Baku\u003c/code\u003e, \u003ccode\u003eAsia/Dubai\u003c/code\u003e, \u003ccode\u003eEurope/Samara\u003c/code\u003e, \u003ccode\u003eAsia/Tbilisi\u003c/code\u003e, \u003ccode\u003eEurope/Volgograd\u003c/code\u003e, \u003ccode\u003eAsia/Yerevan\u003c/code\u003e, \u003ccode\u003eAsia/Kabul\u003c/code\u003e, \u003ccode\u003eAsia/Yekaterinburg\u003c/code\u003e, \u003ccode\u003eAsia/Karachi\u003c/code\u003e, \u003ccode\u003eAsia/Karachi\u003c/code\u003e, \u003ccode\u003eAsia/Tashkent\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Colombo\u003c/code\u003e, \u003ccode\u003eAsia/Kathmandu\u003c/code\u003e, \u003ccode\u003eAsia/Almaty\u003c/code\u003e, \u003ccode\u003eAsia/Dhaka\u003c/code\u003e, \u003ccode\u003eAsia/Dhaka\u003c/code\u003e, \u003ccode\u003eAsia/Urumqi\u003c/code\u003e, \u003ccode\u003eAsia/Yangon\u003c/code\u003e, \u003ccode\u003eAsia/Bangkok\u003c/code\u003e, \u003ccode\u003eAsia/Bangkok\u003c/code\u003e, \u003ccode\u003eAsia/Jakarta\u003c/code\u003e, \u003ccode\u003eAsia/Krasnoyarsk\u003c/code\u003e, \u003ccode\u003eAsia/Novosibirsk\u003c/code\u003e, \u003ccode\u003eAsia/Shanghai\u003c/code\u003e, \u003ccode\u003eAsia/Shanghai\u003c/code\u003e, \u003ccode\u003eAsia/Hong_Kong\u003c/code\u003e, \u003ccode\u003eAsia/Irkutsk\u003c/code\u003e, \u003ccode\u003eAsia/Kuala_Lumpur\u003c/code\u003e, \u003ccode\u003eAustralia/Perth\u003c/code\u003e, \u003ccode\u003eAsia/Singapore\u003c/code\u003e, \u003ccode\u003eAsia/Taipei\u003c/code\u003e, \u003ccode\u003eAsia/Ulaanbaatar\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Seoul\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Yakutsk\u003c/code\u003e, \u003ccode\u003eAustralia/Adelaide\u003c/code\u003e, \u003ccode\u003eAustralia/Darwin\u003c/code\u003e, \u003ccode\u003eAustralia/Brisbane\u003c/code\u003e, \u003ccode\u003eAustralia/Melbourne\u003c/code\u003e, \u003ccode\u003ePacific/Guam\u003c/code\u003e, \u003ccode\u003eAustralia/Hobart\u003c/code\u003e, \u003ccode\u003eAustralia/Melbourne\u003c/code\u003e, \u003ccode\u003ePacific/Port_Moresby\u003c/code\u003e, \u003ccode\u003eAustralia/Sydney\u003c/code\u003e, \u003ccode\u003eAsia/Vladivostok\u003c/code\u003e, \u003ccode\u003eAsia/Magadan\u003c/code\u003e, \u003ccode\u003ePacific/Noumea\u003c/code\u003e, \u003ccode\u003ePacific/Guadalcanal\u003c/code\u003e, \u003ccode\u003eAsia/Srednekolymsk\u003c/code\u003e, \u003ccode\u003ePacific/Auckland\u003c/code\u003e, \u003ccode\u003ePacific/Fiji\u003c/code\u003e, \u003ccode\u003eAsia/Kamchatka\u003c/code\u003e, \u003ccode\u003ePacific/Majuro\u003c/code\u003e, \u003ccode\u003ePacific/Auckland\u003c/code\u003e, \u003ccode\u003ePacific/Chatham\u003c/code\u003e, \u003ccode\u003ePacific/Tongatapu\u003c/code\u003e, \u003ccode\u003ePacific/Apia\u003c/code\u003e, \u003ccode\u003ePacific/Fakaofo\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "campus[language_id]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "main_email",
                    "full_name": "campus[main_email]",
                    "description": "The main email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "endpoint_id",
                    "full_name": "campus[endpoint_id]",
                    "description": "The endpoint id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "vogsphere_id",
                    "full_name": "campus[vogsphere_id]",
                    "description": "The vogsphere id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content_email",
                    "full_name": "campus[content_email]",
                    "description": "The content email.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tig_email",
                    "full_name": "campus[tig_email]",
                    "description": "The tig email. Default to hi, \u003cstrong\u003eyour account has been closed\u003c/strong\u003e for the following reason: “ reason ”. to unclose your account, you must choose a date for your community services hererl schedule ). your community services will last ** duration hours\u003cstrong\u003e. warning: do not set your community services on national holiday, otherwise your community services duration will be doubled. meet the bocal at\u003c/strong\u003e start at \u003cstrong\u003e. if you are late or missing, your community services duration will be doubled. .\u003c/strong\u003e",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "time_of_community_service_started",
                    "full_name": "campus[time_of_community_service_started]",
                    "description": "The time of community service started.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "companies_mail",
                    "full_name": "campus[companies_mail]",
                    "description": "The companies mail.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "address",
                    "full_name": "campus[address]",
                    "description": "The address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip",
                    "full_name": "campus[zip]",
                    "description": "The zip.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "city",
                    "full_name": "campus[city]",
                    "description": "The city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "campus[country]",
                    "description": "The country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pro_needs_validation",
                    "full_name": "campus[pro_needs_validation]",
                    "description": "Is it pro needs validation ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "open_to_job_offers",
                    "full_name": "campus[open_to_job_offers]",
                    "description": "Is it open to job offers ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "logo",
                    "full_name": "campus[logo]",
                    "description": "The logo.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "website",
                    "full_name": "campus[website]",
                    "description": "The website.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "facebook",
                    "full_name": "campus[facebook]",
                    "description": "The facebook.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "twitter",
                    "full_name": "campus[twitter]",
                    "description": "The twitter.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "display_name",
                    "full_name": "campus[display_name]",
                    "description": "The display name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email_extension",
                    "full_name": "campus[email_extension]",
                    "description": "The email extension.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "help_url",
                    "full_name": "campus[help_url]",
                    "description": "The help url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "logo_cache",
                    "full_name": "campus[logo_cache]",
                    "description": "The logo cache.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "default_hidden_phone",
                    "full_name": "campus[default_hidden_phone]",
                    "description": "Is it default hidden phone ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "minimum_slot_duration",
                    "full_name": "campus[minimum_slot_duration]",
                    "description": "The minimum slot duration. Default to 30.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "manual_alumnization_before_first_internship",
                    "full_name": "campus[manual_alumnization_before_first_internship]",
                    "description": "Is it manual alumnization before first internship ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "public",
                    "full_name": "campus[public]",
                    "description": "Is it public ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/campus/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "campus": {
                    "address": "42007 Mossie Forest",
                    "city": "Danielton",
                    "content_email": "Hi __first_name__",
                    "country": "Bonaire, Sint Eustatius and Saba",
                    "display_name": "42 Paris",
                    "language_id": "3",
                    "logo": "#\u003cFile:0x007fa9e98c3288\u003e",
                    "name": "Jamaica2",
                    "time_of_community_service_started": "2017-11-22 14:00:00 +0100",
                    "time_zone": "Asia/Kathmandu",
                    "website": "http://cruickshankwehner.org/pinkie_reynolds",
                    "zip": "19751-7157"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/campus/stats",
            "name": "stats",
            "apis": [
              {
                "api_url": "/v2/campus/:campus_id/stats",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "This endpoint is only for \u003ccode\u003e42Network\u003c/code\u003e app.",
            "errors": [],
            "params": [
              {
                "name": "campus",
                "full_name": "campus",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "campus[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "time_zone",
                    "full_name": "campus[time_zone]",
                    "description": "The time zone.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Pago_Pago\u003c/code\u003e, \u003ccode\u003ePacific/Honolulu\u003c/code\u003e, \u003ccode\u003eAmerica/Juneau\u003c/code\u003e, \u003ccode\u003eAmerica/Los_Angeles\u003c/code\u003e, \u003ccode\u003eAmerica/Tijuana\u003c/code\u003e, \u003ccode\u003eAmerica/Phoenix\u003c/code\u003e, \u003ccode\u003eAmerica/Chihuahua\u003c/code\u003e, \u003ccode\u003eAmerica/Mazatlan\u003c/code\u003e, \u003ccode\u003eAmerica/Denver\u003c/code\u003e, \u003ccode\u003eAmerica/Guatemala\u003c/code\u003e, \u003ccode\u003eAmerica/Chicago\u003c/code\u003e, \u003ccode\u003eAmerica/Mexico_City\u003c/code\u003e, \u003ccode\u003eAmerica/Mexico_City\u003c/code\u003e, \u003ccode\u003eAmerica/Monterrey\u003c/code\u003e, \u003ccode\u003eAmerica/Regina\u003c/code\u003e, \u003ccode\u003eAmerica/Bogota\u003c/code\u003e, \u003ccode\u003eAmerica/New_York\u003c/code\u003e, \u003ccode\u003eAmerica/Indiana/Indianapolis\u003c/code\u003e, \u003ccode\u003eAmerica/Lima\u003c/code\u003e, \u003ccode\u003eAmerica/Lima\u003c/code\u003e, \u003ccode\u003eAmerica/Halifax\u003c/code\u003e, \u003ccode\u003eAmerica/Caracas\u003c/code\u003e, \u003ccode\u003eAmerica/Guyana\u003c/code\u003e, \u003ccode\u003eAmerica/La_Paz\u003c/code\u003e, \u003ccode\u003eAmerica/Santiago\u003c/code\u003e, \u003ccode\u003eAmerica/St_Johns\u003c/code\u003e, \u003ccode\u003eAmerica/Sao_Paulo\u003c/code\u003e, \u003ccode\u003eAmerica/Argentina/Buenos_Aires\u003c/code\u003e, \u003ccode\u003eAmerica/Godthab\u003c/code\u003e, \u003ccode\u003eAmerica/Montevideo\u003c/code\u003e, \u003ccode\u003eAtlantic/South_Georgia\u003c/code\u003e, \u003ccode\u003eAtlantic/Azores\u003c/code\u003e, \u003ccode\u003eAtlantic/Cape_Verde\u003c/code\u003e, \u003ccode\u003eEurope/London\u003c/code\u003e, \u003ccode\u003eEurope/Lisbon\u003c/code\u003e, \u003ccode\u003eEurope/London\u003c/code\u003e, \u003ccode\u003eAfrica/Monrovia\u003c/code\u003e, \u003ccode\u003eEtc/UTC\u003c/code\u003e, \u003ccode\u003eEurope/Amsterdam\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Berlin\u003c/code\u003e, \u003ccode\u003eEurope/Zurich\u003c/code\u003e, \u003ccode\u003eEurope/Prague\u003c/code\u003e, \u003ccode\u003eEurope/Brussels\u003c/code\u003e, \u003ccode\u003eEurope/Budapest\u003c/code\u003e, \u003ccode\u003eAfrica/Casablanca\u003c/code\u003e, \u003ccode\u003eEurope/Copenhagen\u003c/code\u003e, \u003ccode\u003eEurope/Dublin\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Madrid\u003c/code\u003e, \u003ccode\u003eEurope/Paris\u003c/code\u003e, \u003ccode\u003eEurope/Prague\u003c/code\u003e, \u003ccode\u003eEurope/Rome\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Stockholm\u003c/code\u003e, \u003ccode\u003eEurope/Vienna\u003c/code\u003e, \u003ccode\u003eEurope/Warsaw\u003c/code\u003e, \u003ccode\u003eAfrica/Algiers\u003c/code\u003e, \u003ccode\u003eEurope/Belgrade\u003c/code\u003e, \u003ccode\u003eEurope/Zurich\u003c/code\u003e, \u003ccode\u003eEurope/Athens\u003c/code\u003e, \u003ccode\u003eEurope/Bucharest\u003c/code\u003e, \u003ccode\u003eAfrica/Cairo\u003c/code\u003e, \u003ccode\u003eAfrica/Maputo\u003c/code\u003e, \u003ccode\u003eEurope/Helsinki\u003c/code\u003e, \u003ccode\u003eAsia/Jerusalem\u003c/code\u003e, \u003ccode\u003eEurope/Kaliningrad\u003c/code\u003e, \u003ccode\u003eEurope/Kiev\u003c/code\u003e, \u003ccode\u003eAfrica/Johannesburg\u003c/code\u003e, \u003ccode\u003eEurope/Riga\u003c/code\u003e, \u003ccode\u003eEurope/Sofia\u003c/code\u003e, \u003ccode\u003eEurope/Tallinn\u003c/code\u003e, \u003ccode\u003eEurope/Vilnius\u003c/code\u003e, \u003ccode\u003eAsia/Baghdad\u003c/code\u003e, \u003ccode\u003eEurope/Istanbul\u003c/code\u003e, \u003ccode\u003eAsia/Riyadh\u003c/code\u003e, \u003ccode\u003eEurope/Minsk\u003c/code\u003e, \u003ccode\u003eEurope/Moscow\u003c/code\u003e, \u003ccode\u003eAfrica/Nairobi\u003c/code\u003e, \u003ccode\u003eAsia/Riyadh\u003c/code\u003e, \u003ccode\u003eEurope/Moscow\u003c/code\u003e, \u003ccode\u003eAsia/Tehran\u003c/code\u003e, \u003ccode\u003eAsia/Dubai\u003c/code\u003e, \u003ccode\u003eAsia/Baku\u003c/code\u003e, \u003ccode\u003eAsia/Dubai\u003c/code\u003e, \u003ccode\u003eEurope/Samara\u003c/code\u003e, \u003ccode\u003eAsia/Tbilisi\u003c/code\u003e, \u003ccode\u003eEurope/Volgograd\u003c/code\u003e, \u003ccode\u003eAsia/Yerevan\u003c/code\u003e, \u003ccode\u003eAsia/Kabul\u003c/code\u003e, \u003ccode\u003eAsia/Yekaterinburg\u003c/code\u003e, \u003ccode\u003eAsia/Karachi\u003c/code\u003e, \u003ccode\u003eAsia/Karachi\u003c/code\u003e, \u003ccode\u003eAsia/Tashkent\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Kolkata\u003c/code\u003e, \u003ccode\u003eAsia/Colombo\u003c/code\u003e, \u003ccode\u003eAsia/Kathmandu\u003c/code\u003e, \u003ccode\u003eAsia/Almaty\u003c/code\u003e, \u003ccode\u003eAsia/Dhaka\u003c/code\u003e, \u003ccode\u003eAsia/Dhaka\u003c/code\u003e, \u003ccode\u003eAsia/Urumqi\u003c/code\u003e, \u003ccode\u003eAsia/Yangon\u003c/code\u003e, \u003ccode\u003eAsia/Bangkok\u003c/code\u003e, \u003ccode\u003eAsia/Bangkok\u003c/code\u003e, \u003ccode\u003eAsia/Jakarta\u003c/code\u003e, \u003ccode\u003eAsia/Krasnoyarsk\u003c/code\u003e, \u003ccode\u003eAsia/Novosibirsk\u003c/code\u003e, \u003ccode\u003eAsia/Shanghai\u003c/code\u003e, \u003ccode\u003eAsia/Shanghai\u003c/code\u003e, \u003ccode\u003eAsia/Hong_Kong\u003c/code\u003e, \u003ccode\u003eAsia/Irkutsk\u003c/code\u003e, \u003ccode\u003eAsia/Kuala_Lumpur\u003c/code\u003e, \u003ccode\u003eAustralia/Perth\u003c/code\u003e, \u003ccode\u003eAsia/Singapore\u003c/code\u003e, \u003ccode\u003eAsia/Taipei\u003c/code\u003e, \u003ccode\u003eAsia/Ulaanbaatar\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Seoul\u003c/code\u003e, \u003ccode\u003eAsia/Tokyo\u003c/code\u003e, \u003ccode\u003eAsia/Yakutsk\u003c/code\u003e, \u003ccode\u003eAustralia/Adelaide\u003c/code\u003e, \u003ccode\u003eAustralia/Darwin\u003c/code\u003e, \u003ccode\u003eAustralia/Brisbane\u003c/code\u003e, \u003ccode\u003eAustralia/Melbourne\u003c/code\u003e, \u003ccode\u003ePacific/Guam\u003c/code\u003e, \u003ccode\u003eAustralia/Hobart\u003c/code\u003e, \u003ccode\u003eAustralia/Melbourne\u003c/code\u003e, \u003ccode\u003ePacific/Port_Moresby\u003c/code\u003e, \u003ccode\u003eAustralia/Sydney\u003c/code\u003e, \u003ccode\u003eAsia/Vladivostok\u003c/code\u003e, \u003ccode\u003eAsia/Magadan\u003c/code\u003e, \u003ccode\u003ePacific/Noumea\u003c/code\u003e, \u003ccode\u003ePacific/Guadalcanal\u003c/code\u003e, \u003ccode\u003eAsia/Srednekolymsk\u003c/code\u003e, \u003ccode\u003ePacific/Auckland\u003c/code\u003e, \u003ccode\u003ePacific/Fiji\u003c/code\u003e, \u003ccode\u003eAsia/Kamchatka\u003c/code\u003e, \u003ccode\u003ePacific/Majuro\u003c/code\u003e, \u003ccode\u003ePacific/Auckland\u003c/code\u003e, \u003ccode\u003ePacific/Chatham\u003c/code\u003e, \u003ccode\u003ePacific/Tongatapu\u003c/code\u003e, \u003ccode\u003ePacific/Apia\u003c/code\u003e, \u003ccode\u003ePacific/Fakaofo\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "campus[language_id]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "main_email",
                    "full_name": "campus[main_email]",
                    "description": "The main email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "endpoint_id",
                    "full_name": "campus[endpoint_id]",
                    "description": "The endpoint id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "vogsphere_id",
                    "full_name": "campus[vogsphere_id]",
                    "description": "The vogsphere id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content_email",
                    "full_name": "campus[content_email]",
                    "description": "The content email.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tig_email",
                    "full_name": "campus[tig_email]",
                    "description": "The tig email. Default to hi, \u003cstrong\u003eyour account has been closed\u003c/strong\u003e for the following reason: “ reason ”. to unclose your account, you must choose a date for your community services hererl schedule ). your community services will last ** duration hours\u003cstrong\u003e. warning: do not set your community services on national holiday, otherwise your community services duration will be doubled. meet the bocal at\u003c/strong\u003e start at \u003cstrong\u003e. if you are late or missing, your community services duration will be doubled. .\u003c/strong\u003e",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "time_of_community_service_started",
                    "full_name": "campus[time_of_community_service_started]",
                    "description": "The time of community service started.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "companies_mail",
                    "full_name": "campus[companies_mail]",
                    "description": "The companies mail.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "address",
                    "full_name": "campus[address]",
                    "description": "The address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip",
                    "full_name": "campus[zip]",
                    "description": "The zip.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "city",
                    "full_name": "campus[city]",
                    "description": "The city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "campus[country]",
                    "description": "The country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pro_needs_validation",
                    "full_name": "campus[pro_needs_validation]",
                    "description": "Is it pro needs validation ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "open_to_job_offers",
                    "full_name": "campus[open_to_job_offers]",
                    "description": "Is it open to job offers ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "logo",
                    "full_name": "campus[logo]",
                    "description": "The logo.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "website",
                    "full_name": "campus[website]",
                    "description": "The website.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "facebook",
                    "full_name": "campus[facebook]",
                    "description": "The facebook.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "twitter",
                    "full_name": "campus[twitter]",
                    "description": "The twitter.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "display_name",
                    "full_name": "campus[display_name]",
                    "description": "The display name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email_extension",
                    "full_name": "campus[email_extension]",
                    "description": "The email extension.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "help_url",
                    "full_name": "campus[help_url]",
                    "description": "The help url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "logo_cache",
                    "full_name": "campus[logo_cache]",
                    "description": "The logo cache.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "default_hidden_phone",
                    "full_name": "campus[default_hidden_phone]",
                    "description": "Is it default hidden phone ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "minimum_slot_duration",
                    "full_name": "campus[minimum_slot_duration]",
                    "description": "The minimum slot duration. Default to 30.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "manual_alumnization_before_first_internship",
                    "full_name": "campus[manual_alumnization_before_first_internship]",
                    "description": "Is it manual alumnization before first internship ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "public",
                    "full_name": "campus[public]",
                    "description": "Is it public ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": null,
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "campus_users": {
        "doc_url": "/apidoc/2.0/campus_users",
        "api_url": "/api",
        "name": "Campus users",
        "short_description": "The \u003ca href='#users'\u003eusers\u003c/a\u003e wich are in a \u003ca href='#campus'\u003ecampus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/campus_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/campus_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/campus_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eis_primary\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "campus_id",
                      "is_primary",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eis_primary\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "campus_id",
                      "is_primary",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eis_primary\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "campus_id",
                      "is_primary",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/campus_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/campus_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/campus_users/126",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 126,
                  "user_id": 126,
                  "campus_id": 1,
                  "is_primary": true
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/campus_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/campus_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/campus_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_user",
                "full_name": "campus_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "campus_id",
                    "full_name": "campus_user[campus_id]",
                    "description": "The campus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "campus_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given campus.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_primary",
                    "full_name": "campus_user[is_primary]",
                    "description": "Is it is primary ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/campus_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "campus_user": { "campus_id": "6", "user_id": "1" }
                },
                "response_data": {
                  "id": 127,
                  "user_id": 1,
                  "campus_id": 6,
                  "is_primary": false
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "certificates": {
        "doc_url": "/apidoc/2.0/certificates",
        "api_url": "/api",
        "name": "Certificates",
        "short_description": "\u003ca href='#certificates'\u003ecertificates\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/certificates/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/certificates",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "certificate",
                "full_name": "certificate",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "certificate[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content",
                    "full_name": "certificate[content]",
                    "description": "The content.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "total_certificate_number",
                    "full_name": "certificate[total_certificate_number]",
                    "description": "The total certificate number.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "certificate[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "certificate[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/certificates/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/certificates/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "certificate",
                "full_name": "certificate",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "certificate[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content",
                    "full_name": "certificate[content]",
                    "description": "The content.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "total_certificate_number",
                    "full_name": "certificate[total_certificate_number]",
                    "description": "The total certificate number.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "certificate[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "certificate[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "certificates_users": {
        "doc_url": "/apidoc/2.0/certificates_users",
        "api_url": "/api",
        "name": "Certificates users",
        "short_description": "\u003ca href='#users'\u003eUser\u003c/a\u003e belonging to a \u003ca href='#certificates'\u003ecertificate\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/certificates_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/certificates_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/certificates/:certificate_id/certificates_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/certificates_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "certificate_id",
                "full_name": "certificate_id",
                "description": "The certificate id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "certificates_user",
                "full_name": "certificates_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "certificate_id",
                    "full_name": "certificates_user[certificate_id]",
                    "description": "The certificate id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "certificates_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "certificate_number",
                    "full_name": "certificates_user[certificate_number]",
                    "description": "The certificate number.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "qrcode",
                    "full_name": "certificates_user[qrcode]",
                    "description": "The qrcode.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pdf",
                    "full_name": "certificates_user[pdf]",
                    "description": "The pdf.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/certificates_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/certificates_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "certificates_user",
                "full_name": "certificates_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "certificate_id",
                    "full_name": "certificates_user[certificate_id]",
                    "description": "The certificate id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "certificates_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "certificate_number",
                    "full_name": "certificates_user[certificate_number]",
                    "description": "The certificate number.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "qrcode",
                    "full_name": "certificates_user[qrcode]",
                    "description": "The qrcode.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pdf",
                    "full_name": "certificates_user[pdf]",
                    "description": "The pdf.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/certificates_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/certificates_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "certificates_user",
                "full_name": "certificates_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "certificate_id",
                    "full_name": "certificates_user[certificate_id]",
                    "description": "The certificate id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "certificates_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "certificate_number",
                    "full_name": "certificates_user[certificate_number]",
                    "description": "The certificate number.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "qrcode",
                    "full_name": "certificates_user[qrcode]",
                    "description": "The qrcode.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pdf",
                    "full_name": "certificates_user[pdf]",
                    "description": "The pdf.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "closes": {
        "doc_url": "/apidoc/2.0/closes",
        "api_url": "/api",
        "name": "Closes",
        "short_description": "The closing of a 42 account",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/closes/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/closes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/closes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecloser_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ejid\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "closer_id",
                      "reason",
                      "state",
                      "created_at",
                      "updated_at",
                      "kind",
                      "end_at",
                      "jid"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecloser_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ejid\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "closer_id",
                      "reason",
                      "state",
                      "created_at",
                      "updated_at",
                      "kind",
                      "end_at",
                      "jid",
                      "campus_id",
                      "end"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end closes"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecloser_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ejid\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "closer_id",
                      "reason",
                      "state",
                      "created_at",
                      "updated_at",
                      "kind",
                      "end_at",
                      "jid"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/closes",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 3,
                    "reason": "Connecticut giants",
                    "state": "unclose",
                    "created_at": "2017-11-22T13:42:20.888Z",
                    "updated_at": "2017-11-22T13:42:20.987Z",
                    "end_at": null,
                    "community_services": [
                      {
                        "id": 2,
                        "duration": 14400,
                        "schedule_at": "2017-11-28T06:00:00.000Z",
                        "occupation": "West Virginia lions",
                        "state": "schedule",
                        "created_at": "2017-11-22T13:42:20.944Z",
                        "updated_at": "2017-11-22T13:42:21.007Z"
                      }
                    ],
                    "user": {
                      "id": 82,
                      "login": "kyren",
                      "url": "https://api.intra.42.fr/v2/users/kyren"
                    },
                    "closer": {
                      "id": 2,
                      "login": "andre",
                      "url": "https://api.intra.42.fr/v2/users/andre"
                    }
                  },
                  {
                    "id": 2,
                    "reason": "Florida druids",
                    "state": "unclose",
                    "created_at": "2017-11-22T13:42:20.695Z",
                    "updated_at": "2017-11-22T13:42:20.857Z",
                    "end_at": null,
                    "community_services": [
                      {
                        "id": 1,
                        "duration": 14400,
                        "schedule_at": "2017-11-27T11:00:00.000Z",
                        "occupation": "North Carolina spirits",
                        "state": "schedule",
                        "created_at": "2017-11-22T13:42:20.806Z",
                        "updated_at": "2017-11-22T13:42:20.876Z"
                      }
                    ],
                    "user": {
                      "id": 114,
                      "login": "darmaul",
                      "url": "https://api.intra.42.fr/v2/users/darmaul"
                    },
                    "closer": {
                      "id": 3,
                      "login": "gargamel",
                      "url": "https://api.intra.42.fr/v2/users/gargamel"
                    }
                  },
                  {
                    "id": 1,
                    "reason": "Florida druids",
                    "state": "unclose",
                    "created_at": "2017-11-22T13:42:20.695Z",
                    "updated_at": "2017-11-22T13:42:20.857Z",
                    "end_at": "2017-11-24T13:42:20.857Z",
                    "community_services": [],
                    "user": {
                      "id": 114,
                      "login": "darmaul",
                      "url": "https://api.intra.42.fr/v2/users/darmaul"
                    },
                    "closer": {
                      "id": 3,
                      "login": "gargamel",
                      "url": "https://api.intra.42.fr/v2/users/gargamel"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/closes/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/closes/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/closes/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "reason": "Connecticut giants",
                  "state": "unclose",
                  "created_at": "2017-11-22T13:42:20.888Z",
                  "updated_at": "2017-11-22T13:42:20.987Z",
                  "end_at": null,
                  "community_services": [
                    {
                      "id": 2,
                      "duration": 14400,
                      "schedule_at": "2017-11-28T06:00:00.000Z",
                      "occupation": "West Virginia lions",
                      "state": "schedule",
                      "created_at": "2017-11-22T13:42:20.944Z",
                      "updated_at": "2017-11-22T13:42:21.007Z"
                    }
                  ],
                  "user": {
                    "id": 82,
                    "login": "kyren",
                    "url": "https://api.intra.42.fr/v2/users/kyren"
                  },
                  "closer": {
                    "id": 2,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/closes/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/closes",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/closes",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "If you want to link a community service with this close, pass it trough the \u003ccode\u003ecommunity_services_attributes\u003c/code\u003e array attribute. An email is automatically sent to the user when he is assigned to a community service.",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "close",
                "full_name": "close",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "close[user_id]",
                    "description": "The closed user",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "closer_id",
                    "full_name": "close[closer_id]",
                    "description": "The closer, defaults to the token owner if there is one",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "close[kind]",
                    "description": "The close kind",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eagu\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e, \u003ccode\u003edeserter\u003c/code\u003e, \u003ccode\u003eblack_hole\u003c/code\u003e, \u003ccode\u003eserious_misconduct\u003c/code\u003e, \u003ccode\u003esocial_security\u003c/code\u003e, \u003ccode\u003enon_admitted\u003c/code\u003e, \u003ccode\u003epace_unknown\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "close[reason]",
                    "description": "The reason of this close",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "close[end_at]",
                    "description": "When the close will be end",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "community_services_attributes",
                    "full_name": "close[community_services_attributes]",
                    "description": "The linked community service(s)",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "duration",
                        "full_name": "close[community_services_attributes][duration]",
                        "description": "The community service duration \u003cstrong\u003ein seconds\u003c/strong\u003e. Must be 2 hours, 4 hours or 8 hours.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003e7200\u003c/code\u003e, \u003ccode\u003e14400\u003c/code\u003e, \u003ccode\u003e28800\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occupation",
                        "full_name": "close[community_services_attributes][occupation]",
                        "description": "The community service occupation",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/closes",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "close": {
                    "closer_id": "2",
                    "kind": "other",
                    "reason": "Mange des patates douces en cluster 🍠",
                    "state": "close",
                    "user_id": "64",
                    "end_at": "2017-11-23T13:43:29.676Z"
                  }
                },
                "response_data": {
                  "id": 3,
                  "reason": "Mange des patates douces en cluster 🍠",
                  "state": "close",
                  "created_at": "2017-11-22T13:43:29.676Z",
                  "updated_at": "2017-11-22T13:43:29.676Z",
                  "community_services": [],
                  "user": {
                    "id": 64,
                    "login": "shepalpa",
                    "url": "https://api.intra.42.fr/v2/users/shepalpa"
                  },
                  "closer": {
                    "id": 2,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/closes/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/closes/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/closes/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "close",
                "full_name": "close",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "close[user_id]",
                    "description": "The closed user",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "closer_id",
                    "full_name": "close[closer_id]",
                    "description": "The closer, defaults to the token owner if there is one",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "close[kind]",
                    "description": "The close kind",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eagu\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e, \u003ccode\u003edeserter\u003c/code\u003e, \u003ccode\u003eblack_hole\u003c/code\u003e, \u003ccode\u003eserious_misconduct\u003c/code\u003e, \u003ccode\u003esocial_security\u003c/code\u003e, \u003ccode\u003enon_admitted\u003c/code\u003e, \u003ccode\u003epace_unknown\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "close[reason]",
                    "description": "The reason of this close",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "close[end_at]",
                    "description": "When the close will be end",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "community_services_attributes",
                    "full_name": "close[community_services_attributes]",
                    "description": "The linked community service(s)",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "duration",
                        "full_name": "close[community_services_attributes][duration]",
                        "description": "The community service duration \u003cstrong\u003ein seconds\u003c/strong\u003e. Must be 2 hours, 4 hours or 8 hours.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003e7200\u003c/code\u003e, \u003ccode\u003e14400\u003c/code\u003e, \u003ccode\u003e28800\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occupation",
                        "full_name": "close[community_services_attributes][occupation]",
                        "description": "The community service occupation",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/closes/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "close": {
                    "closer_id": "1",
                    "kind": "other",
                    "reason": "Mange des patates douces en cluster 🍠",
                    "state": "close",
                    "user_id": "41"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/closes/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/closes/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "close",
                "full_name": "close",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "close[user_id]",
                    "description": "The closed user",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "closer_id",
                    "full_name": "close[closer_id]",
                    "description": "The closer, defaults to the token owner if there is one",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "close[kind]",
                    "description": "The close kind",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eagu\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e, \u003ccode\u003edeserter\u003c/code\u003e, \u003ccode\u003eblack_hole\u003c/code\u003e, \u003ccode\u003eserious_misconduct\u003c/code\u003e, \u003ccode\u003esocial_security\u003c/code\u003e, \u003ccode\u003enon_admitted\u003c/code\u003e, \u003ccode\u003epace_unknown\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "close[reason]",
                    "description": "The reason of this close",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "close[end_at]",
                    "description": "When the close will be end",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "community_services_attributes",
                    "full_name": "close[community_services_attributes]",
                    "description": "The linked community service(s)",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "duration",
                        "full_name": "close[community_services_attributes][duration]",
                        "description": "The community service duration \u003cstrong\u003ein seconds\u003c/strong\u003e. Must be 2 hours, 4 hours or 8 hours.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003e7200\u003c/code\u003e, \u003ccode\u003e14400\u003c/code\u003e, \u003ccode\u003e28800\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occupation",
                        "full_name": "close[community_services_attributes][occupation]",
                        "description": "The community service occupation",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/closes/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/closes/unclose",
            "name": "unclose",
            "apis": [
              {
                "api_url": "/v2/closes/:id/unclose",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/closes/:id/unclose",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Change the close state from \u003ccode\u003eclose\u003c/code\u003e to \u003ccode\u003eunclose\u003c/code\u003e.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/closes/close",
            "name": "close",
            "apis": [
              {
                "api_url": "/v2/closes/:id/close",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/closes/:id/close",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Change the close state from \u003ccode\u003eunclose\u003c/code\u003e to \u003ccode\u003eclose\u003c/code\u003e.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "coalitions": {
        "doc_url": "/apidoc/2.0/coalitions",
        "api_url": "/api",
        "name": "Coalitions",
        "short_description": "A \u003ca href='#coalitions\u003ecoalition\u003c/a\u003e is group of \u003ca href='#users'\u003eusers\u003c/a\u003e competing inside of a \u003ca href='#blocs'\u003ebloc\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/coalitions/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/coalitions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/coalitions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/blocs/:bloc_id/coalitions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebloc_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecolor\u003c/code\u003e, \u003ccode\u003ecover\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "bloc_id",
                      "user_id",
                      "name",
                      "image",
                      "slug",
                      "created_at",
                      "updated_at",
                      "color",
                      "cover"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "coalition",
                "full_name": "coalition",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "coalition[bloc_id]",
                    "description": "The bloc id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalition[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "coalition[name]",
                    "description": "The name. Must be unique in the scope of a given bloc.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "coalition[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "coalition[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "color",
                    "full_name": "coalition[color]",
                    "description": "The color.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cover",
                    "full_name": "coalition[cover]",
                    "description": "The cover.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/coalitions",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 2,
                    "name": "Kansas giants",
                    "slug": "super-slug",
                    "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                    "color": "#087262",
                    "score": 83,
                    "user_id": 90
                  },
                  {
                    "id": 1,
                    "name": "Indiana goblins",
                    "slug": "super-slug",
                    "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                    "color": "#1c7f08",
                    "score": 54,
                    "user_id": 38
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/coalitions/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalition",
                "full_name": "coalition",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "coalition[bloc_id]",
                    "description": "The bloc id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalition[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "coalition[name]",
                    "description": "The name. Must be unique in the scope of a given bloc.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "coalition[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "coalition[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "color",
                    "full_name": "coalition[color]",
                    "description": "The color.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cover",
                    "full_name": "coalition[cover]",
                    "description": "The cover.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/coalitions/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "name": "Kansas giants",
                  "slug": "super-slug",
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                  "color": "#087262",
                  "score": 83,
                  "user_id": 90
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/coalitions",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalition",
                "full_name": "coalition",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "coalition[bloc_id]",
                    "description": "The bloc id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalition[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "coalition[name]",
                    "description": "The name. Must be unique in the scope of a given bloc.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "coalition[image]",
                    "description": "The image.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "coalition[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "color",
                    "full_name": "coalition[color]",
                    "description": "The color.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cover",
                    "full_name": "coalition[cover]",
                    "description": "The cover.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/coalitions",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "coalition": {
                    "name": "rabbits",
                    "bloc_id": "1",
                    "user_id": "35",
                    "image": {
                      "tempfile": [],
                      "original_filename": "logo.svg",
                      "content_type": "image/svg+xml",
                      "headers": "Content-Disposition: form-data; name=\"coalition[image]\"; filename=\"logo.svg\"\r\nContent-Type: image/svg+xml\r\nContent-Length: 2989\r\n"
                    },
                    "color": "#4231d7"
                  }
                },
                "response_data": {
                  "id": 3,
                  "name": "rabbits",
                  "slug": "rabbits",
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/3/logo.svg",
                  "color": "#4231d7",
                  "score": 0,
                  "user_id": 35
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/coalitions/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalition",
                "full_name": "coalition",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "coalition[bloc_id]",
                    "description": "The bloc id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalition[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "coalition[name]",
                    "description": "The name. Must be unique in the scope of a given bloc.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "coalition[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "coalition[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "color",
                    "full_name": "coalition[color]",
                    "description": "The color.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cover",
                    "full_name": "coalition[cover]",
                    "description": "The cover.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/coalitions/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "coalition": {
                    "name": "monkeys",
                    "bloc_id": "1",
                    "user_id": "34",
                    "image": {
                      "tempfile": [],
                      "original_filename": "logo.svg",
                      "content_type": "image/svg+xml",
                      "headers": "Content-Disposition: form-data; name=\"coalition[image]\"; filename=\"logo.svg\"\r\nContent-Type: image/svg+xml\r\nContent-Length: 2989\r\n"
                    },
                    "color": "#f8f45d"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "coalitions_users": {
        "doc_url": "/apidoc/2.0/coalitions_users",
        "api_url": "/api",
        "name": "Coalitions users",
        "short_description": "\u003ca href='#users\u003eUsers\u003c/a\u003e belonging to a \u003ca href='#coalitions'\u003ecoalition\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/coalitions_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/coalitions/:coalition_id/coalitions_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/coalitions_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalition_id",
                "full_name": "coalition_id",
                "description": "The coalition id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecoalition_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ethis_year_score\u003c/code\u003e, \u003ccode\u003ethis_year_score_updated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "coalition_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "this_year_score",
                      "this_year_score_updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecoalition_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ethis_year_score\u003c/code\u003e, \u003ccode\u003ethis_year_score_updated_at\u003c/code\u003e, \u003ccode\u003ethis_year_score_updated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "coalition_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "this_year_score",
                      "this_year_score_updated_at",
                      "this_year_score_updated"
                    ],
                    "additional": {
                      "this_year_score_updated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only this_year_score_updated coalitions users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecoalition_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ethis_year_score\u003c/code\u003e, \u003ccode\u003ethis_year_score_updated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "coalition_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "this_year_score",
                      "this_year_score_updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "coalitions_user",
                "full_name": "coalitions_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "coalition_id",
                    "full_name": "coalitions_user[coalition_id]",
                    "description": "The coalition id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalitions_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given coalition.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score",
                    "full_name": "coalitions_user[this_year_score]",
                    "description": "The this year score.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score_updated_at",
                    "full_name": "coalitions_user[this_year_score_updated_at]",
                    "description": "The this year score updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/coalitions_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 4,
                    "coalition_id": 1,
                    "user_id": 67,
                    "created_at": "2017-11-22T13:42:09.775Z",
                    "updated_at": "2017-11-22T13:42:09.775Z"
                  },
                  {
                    "id": 3,
                    "coalition_id": 1,
                    "user_id": 25,
                    "created_at": "2017-11-22T13:42:09.750Z",
                    "updated_at": "2017-11-22T13:42:09.750Z"
                  },
                  {
                    "id": 2,
                    "coalition_id": 2,
                    "user_id": 23,
                    "created_at": "2017-11-22T13:42:09.723Z",
                    "updated_at": "2017-11-22T13:42:09.723Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/coalitions_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalitions_user",
                "full_name": "coalitions_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "coalition_id",
                    "full_name": "coalitions_user[coalition_id]",
                    "description": "The coalition id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalitions_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given coalition.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score",
                    "full_name": "coalitions_user[this_year_score]",
                    "description": "The this year score.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score_updated_at",
                    "full_name": "coalitions_user[this_year_score_updated_at]",
                    "description": "The this year score updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/coalitions_users/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 4,
                  "coalition_id": 1,
                  "user_id": 67,
                  "created_at": "2017-11-22T13:42:09.775Z",
                  "updated_at": "2017-11-22T13:42:09.775Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/coalitions_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalitions_user",
                "full_name": "coalitions_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "coalition_id",
                    "full_name": "coalitions_user[coalition_id]",
                    "description": "The coalition id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalitions_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given coalition.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score",
                    "full_name": "coalitions_user[this_year_score]",
                    "description": "The this year score.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score_updated_at",
                    "full_name": "coalitions_user[this_year_score_updated_at]",
                    "description": "The this year score updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/coalitions_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "coalitions_user": { "coalition_id": "2", "user_id": "60" }
                },
                "response_data": {
                  "id": 5,
                  "coalition_id": 2,
                  "user_id": 60,
                  "created_at": "2017-11-22T13:43:31.350Z",
                  "updated_at": "2017-11-22T13:43:31.350Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/coalitions_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalitions_user",
                "full_name": "coalitions_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "coalition_id",
                    "full_name": "coalitions_user[coalition_id]",
                    "description": "The coalition id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalitions_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given coalition.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score",
                    "full_name": "coalitions_user[this_year_score]",
                    "description": "The this year score.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score_updated_at",
                    "full_name": "coalitions_user[this_year_score_updated_at]",
                    "description": "The this year score updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/coalitions_users/4",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "coalitions_user": { "coalition_id": "2", "user_id": "24" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/coalitions_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/coalitions_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalitions_user",
                "full_name": "coalitions_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "coalition_id",
                    "full_name": "coalitions_user[coalition_id]",
                    "description": "The coalition id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "coalitions_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given coalition.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score",
                    "full_name": "coalitions_user[this_year_score]",
                    "description": "The this year score.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "this_year_score_updated_at",
                    "full_name": "coalitions_user[this_year_score_updated_at]",
                    "description": "The this year score updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/coalitions_users/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "commands": {
        "doc_url": "/apidoc/2.0/commands",
        "api_url": "/api",
        "name": "Commands",
        "short_description": "Products are sold on the intranet shop, here are commands",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/commands/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/products/:product_id/commands",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products/:product_id/commands",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "product_id",
                "full_name": "product_id",
                "description": "The product id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eproduct_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003eused\u003c/code\u003e, \u003ccode\u003evalidator_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "created_at",
                      "updated_at",
                      "product_id",
                      "user_id",
                      "owner_id",
                      "used",
                      "validator_id",
                      "validated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eproduct_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003eused\u003c/code\u003e, \u003ccode\u003evalidator_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "created_at",
                      "updated_at",
                      "product_id",
                      "user_id",
                      "owner_id",
                      "used",
                      "validator_id",
                      "validated_at",
                      "validated"
                    ],
                    "additional": {
                      "validated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only validated commands"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eproduct_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003eused\u003c/code\u003e, \u003ccode\u003evalidator_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "created_at",
                      "updated_at",
                      "product_id",
                      "user_id",
                      "owner_id",
                      "used",
                      "validator_id",
                      "validated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/commands/show",
            "name": "show",
            "apis": [],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/commands/create",
            "name": "create",
            "apis": [],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "command",
                "full_name": "command",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "command[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "product_id",
                    "full_name": "command[product_id]",
                    "description": "The product id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "command[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_id",
                    "full_name": "command[owner_id]",
                    "description": "The owner id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "used",
                    "full_name": "command[used]",
                    "description": "Is it used ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/commands/update",
            "name": "update",
            "apis": [],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "command",
                "full_name": "command",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "command[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "product_id",
                    "full_name": "command[product_id]",
                    "description": "The product id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "command[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_id",
                    "full_name": "command[owner_id]",
                    "description": "The owner id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "used",
                    "full_name": "command[used]",
                    "description": "Is it used ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/commands/destroy",
            "name": "destroy",
            "apis": [],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "command",
                "full_name": "command",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "command[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "product_id",
                    "full_name": "command[product_id]",
                    "description": "The product id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "command[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_id",
                    "full_name": "command[owner_id]",
                    "description": "The owner id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "used",
                    "full_name": "command[used]",
                    "description": "Is it used ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "community_services": {
        "doc_url": "/apidoc/2.0/community_services",
        "api_url": "/api",
        "name": "Community services",
        "short_description": "A task that an \u003ca href='#users'\u003euser\u003c/a\u003e have to do for the community. Usually linked with a \u003ca href='#closes'\u003eclose\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/community_services/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/community_services/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003etiger_id\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e, \u003ccode\u003eoccupation\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "close_id",
                      "tiger_id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "token",
                      "state",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003etiger_id\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e, \u003ccode\u003eoccupation\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eschedule\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "close_id",
                      "tiger_id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "token",
                      "state",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "schedule"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "schedule": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only schedule community services"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003etiger_id\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e, \u003ccode\u003eoccupation\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "close_id",
                      "tiger_id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "token",
                      "state",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/community_services/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 2 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/closes/:close_id/community_services",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/community_services",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "close_id",
                "full_name": "close_id",
                "description": "The close id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003etiger_id\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e, \u003ccode\u003eoccupation\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "close_id",
                      "tiger_id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "token",
                      "state",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003etiger_id\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e, \u003ccode\u003eoccupation\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eschedule\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "close_id",
                      "tiger_id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "token",
                      "state",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "schedule"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "schedule": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only schedule community services"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eclose_id\u003c/code\u003e, \u003ccode\u003etiger_id\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eschedule_at\u003c/code\u003e, \u003ccode\u003eoccupation\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "close_id",
                      "tiger_id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "token",
                      "state",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/community_services.json",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 2,
                    "duration": 14400,
                    "schedule_at": "2017-11-28T06:00:00.000Z",
                    "occupation": "West Virginia lions",
                    "state": "schedule",
                    "created_at": "2017-11-22T13:42:20.944Z",
                    "updated_at": "2017-11-22T13:42:21.007Z",
                    "close": {
                      "id": 2,
                      "reason": "Connecticut giants",
                      "state": "unclose",
                      "created_at": "2017-11-22T13:42:20.888Z",
                      "updated_at": "2017-11-22T13:42:20.987Z"
                    }
                  },
                  {
                    "id": 1,
                    "duration": 14400,
                    "schedule_at": "2017-11-27T11:00:00.000Z",
                    "occupation": "North Carolina spirits",
                    "state": "schedule",
                    "created_at": "2017-11-22T13:42:20.806Z",
                    "updated_at": "2017-11-22T13:42:20.876Z",
                    "close": {
                      "id": 1,
                      "reason": "Florida druids",
                      "state": "unclose",
                      "created_at": "2017-11-22T13:42:20.695Z",
                      "updated_at": "2017-11-22T13:42:20.857Z"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/community_services/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/community_services/1.json",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "duration": 14400,
                  "schedule_at": "2017-11-27T11:00:00.000Z",
                  "occupation": "North Carolina spirits",
                  "state": "schedule",
                  "created_at": "2017-11-22T13:42:20.806Z",
                  "updated_at": "2017-11-22T13:42:20.876Z",
                  "close": {
                    "id": 1,
                    "reason": "Florida druids",
                    "state": "unclose",
                    "created_at": "2017-11-22T13:42:20.695Z",
                    "updated_at": "2017-11-22T13:42:20.857Z"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/validate",
            "name": "validate",
            "apis": [
              {
                "api_url": "/v2/community_services/:id/validate",
                "http_method": "PUT",
                "short_description": "Validate the given community service",
                "deprecated": null
              },
              {
                "api_url": "/v2/community_services/:id/validate",
                "http_method": "PATCH",
                "short_description": "Validate the given community service",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Set the given community service state to \u003ccode\u003evalidated\u003c/code\u003e",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/invalidate",
            "name": "invalidate",
            "apis": [
              {
                "api_url": "/v2/community_services/:id/invalidate",
                "http_method": "PUT",
                "short_description": "Invalidate the given community service",
                "deprecated": null
              },
              {
                "api_url": "/v2/community_services/:id/invalidate",
                "http_method": "PATCH",
                "short_description": "Invalidate the given community service",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Set the given community service state to \u003ccode\u003einvalidated\u003c/code\u003e",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/community_services",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\u003cem\u003eWarning\u003c/em\u003e: When you use this call, we suggest that you know what you do. If you want to link a community service with this community_service, pass it trough the \u003cem\u003ecloses#index\u003c/em\u003e API call, with his \u003ccode\u003ecommunity_services_attributes\u003c/code\u003e array attribute. An email is automatically sent to the user when he is assigned to a community service.",
            "errors": [],
            "params": [
              {
                "name": "community_service",
                "full_name": "community_service",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "duration",
                    "full_name": "community_service[duration]",
                    "description": "The duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occupation",
                    "full_name": "community_service[occupation]",
                    "description": "The occupation. Maximum length is 255. Allow blank length is true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "schedule_at",
                    "full_name": "community_service[schedule_at]",
                    "description": "The schedule at. Must be after today. Must be before 2 weeks from now.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "close_id",
                    "full_name": "community_service[close_id]",
                    "description": "The close id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tiger_id",
                    "full_name": "community_service[tiger_id]",
                    "description": "The tiger id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/community_services.json",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "community_service": {
                    "close_id": "2",
                    "duration": "14400",
                    "occupation": "Regarder Shrek, en entier, avec Mathieu Trentin",
                    "schedule_at": "2017-11-27 09:00:00 UTC",
                    "tiger_id": "2"
                  }
                },
                "response_data": {
                  "id": 3,
                  "duration": 14400,
                  "schedule_at": "2017-11-27T06:00:00.000Z",
                  "occupation": "Regarder Shrek, en entier, avec Mathieu Trentin",
                  "state": "schedule",
                  "created_at": "2017-11-22T13:43:32.216Z",
                  "updated_at": "2017-11-22T13:43:32.216Z",
                  "close": {
                    "id": 2,
                    "reason": "Connecticut giants",
                    "state": "unclose",
                    "created_at": "2017-11-22T13:42:20.888Z",
                    "updated_at": "2017-11-22T13:42:20.987Z"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/community_services/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/community_services/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\u003cem\u003eWarning\u003c/em\u003e: When you use this call, we suggest that you know what you do.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "community_service",
                "full_name": "community_service",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "duration",
                    "full_name": "community_service[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occupation",
                    "full_name": "community_service[occupation]",
                    "description": "The occupation. Maximum length is 255. Allow blank length is true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "schedule_at",
                    "full_name": "community_service[schedule_at]",
                    "description": "The schedule at. Must be after today. Must be before 2 weeks from now.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "close_id",
                    "full_name": "community_service[close_id]",
                    "description": "The close id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tiger_id",
                    "full_name": "community_service[tiger_id]",
                    "description": "The tiger id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/community_services/1.json",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "community_service": {
                    "close_id": "2",
                    "duration": "14400",
                    "occupation": "Regarder Shrek, en entier, avec Mathieu Trentin",
                    "schedule_at": "2017-11-27 09:00:00 UTC",
                    "tiger_id": "2"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/community_services/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/community_services/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\u003cem\u003eWarning\u003c/em\u003e: When you use this call, we suggest that you know what you do.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "community_service",
                "full_name": "community_service",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "duration",
                    "full_name": "community_service[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occupation",
                    "full_name": "community_service[occupation]",
                    "description": "The occupation. Maximum length is 255. Allow blank length is true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "schedule_at",
                    "full_name": "community_service[schedule_at]",
                    "description": "The schedule at. Must be after today. Must be before 2 weeks from now.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "close_id",
                    "full_name": "community_service[close_id]",
                    "description": "The close id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tiger_id",
                    "full_name": "community_service[tiger_id]",
                    "description": "The tiger id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/community_services/1.json",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["tig"],
              "roles": ["advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "companies": {
        "doc_url": "/apidoc/2.0/companies",
        "api_url": "/api",
        "name": "Companies",
        "short_description": " Companies from companies website",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/companies/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/companies",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003esector\u003c/code\u003e, \u003ccode\u003eother_sector\u003c/code\u003e, \u003ccode\u003esize\u003c/code\u003e, \u003ccode\u003ephone\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003ewebsite_url\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elatitude\u003c/code\u003e, \u003ccode\u003elongitude\u003c/code\u003e, \u003ccode\u003esiret\u003c/code\u003e, \u003ccode\u003epro_id\u003c/code\u003e, \u003ccode\u003eowner_type\u003c/code\u003e, \u003ccode\u003eadministrative_email\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "sector",
                      "other_sector",
                      "size",
                      "phone",
                      "address",
                      "zip",
                      "city",
                      "country",
                      "website_url",
                      "owner_id",
                      "created_at",
                      "updated_at",
                      "latitude",
                      "longitude",
                      "siret",
                      "pro_id",
                      "owner_type",
                      "administrative_email"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003esector\u003c/code\u003e, \u003ccode\u003eother_sector\u003c/code\u003e, \u003ccode\u003esize\u003c/code\u003e, \u003ccode\u003ephone\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003ewebsite_url\u003c/code\u003e, \u003ccode\u003eowner_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elatitude\u003c/code\u003e, \u003ccode\u003elongitude\u003c/code\u003e, \u003ccode\u003esiret\u003c/code\u003e, \u003ccode\u003epro_id\u003c/code\u003e, \u003ccode\u003eowner_type\u003c/code\u003e, \u003ccode\u003eadministrative_email\u003c/code\u003e, \u003ccode\u003eoffer_id\u003c/code\u003e, \u003ccode\u003eexpertise_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "sector",
                      "other_sector",
                      "size",
                      "phone",
                      "address",
                      "zip",
                      "city",
                      "country",
                      "website_url",
                      "owner_id",
                      "created_at",
                      "updated_at",
                      "latitude",
                      "longitude",
                      "siret",
                      "pro_id",
                      "owner_type",
                      "administrative_email",
                      "offer_id",
                      "expertise_id"
                    ],
                    "additional": {
                      "offer_id": {
                        "proc": {},
                        "all": [],
                        "description": "Company that posted this offer"
                      },
                      "expertise_id": {
                        "proc": {},
                        "all": [],
                        "description": "Find a company by expertise id"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["companies_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/companies/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/companies/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/companies/subscribed_users",
            "name": "subscribed_users",
            "apis": [
              {
                "api_url": "/v2/companies/:company_id/subscribed_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "company_id",
                "full_name": "company_id",
                "description": "The company id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "company",
                "full_name": "company",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "company[name]",
                    "description": "The name. Maximum length is 255. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "company[slug]",
                    "description": "The slug. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "sector",
                    "full_name": "company[sector]",
                    "description": "The sector.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eagro\u003c/code\u003e, \u003ccode\u003eaudit\u003c/code\u003e, \u003ccode\u003ebanque\u003c/code\u003e, \u003ccode\u003ecommerce\u003c/code\u003e, \u003ccode\u003ecomm\u003c/code\u003e, \u003ccode\u003eedition\u003c/code\u003e, \u003ccode\u003eindustrie\u003c/code\u003e, \u003ccode\u003einfo\u003c/code\u003e, \u003ccode\u003eluxe\u003c/code\u003e, \u003ccode\u003epharma\u003c/code\u003e, \u003ccode\u003eservices\u003c/code\u003e, \u003ccode\u003eculture\u003c/code\u003e, \u003ccode\u003eimmobilier\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "other_sector",
                    "full_name": "company[other_sector]",
                    "description": "The other sector. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "company[size]",
                    "description": "The size.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003esmall\u003c/code\u003e, \u003ccode\u003emedium\u003c/code\u003e, \u003ccode\u003elarge\u003c/code\u003e, \u003ccode\u003exlarge\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "phone",
                    "full_name": "company[phone]",
                    "description": "The phone. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "address",
                    "full_name": "company[address]",
                    "description": "The address. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip",
                    "full_name": "company[zip]",
                    "description": "The zip. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "city",
                    "full_name": "company[city]",
                    "description": "The city. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "company[country]",
                    "description": "The country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "website_url",
                    "full_name": "company[website_url]",
                    "description": "The website url. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_id",
                    "full_name": "company[owner_id]",
                    "description": "The owner id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "latitude",
                    "full_name": "company[latitude]",
                    "description": "The latitude.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Float",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "longitude",
                    "full_name": "company[longitude]",
                    "description": "The longitude.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Float",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "siret",
                    "full_name": "company[siret]",
                    "description": "The siret.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pro_id",
                    "full_name": "company[pro_id]",
                    "description": "The pro id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_type",
                    "full_name": "company[owner_type]",
                    "description": "The owner type.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "administrative_email",
                    "full_name": "company[administrative_email]",
                    "description": "The administrative email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/companies/internships_users",
            "name": "internships_users",
            "apis": [
              {
                "api_url": "/v2/companies/:company_id/internships_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "company_id",
                "full_name": "company_id",
                "description": "The company id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "company",
                "full_name": "company",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "company[name]",
                    "description": "The name. Maximum length is 255. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "company[slug]",
                    "description": "The slug. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "sector",
                    "full_name": "company[sector]",
                    "description": "The sector.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eagro\u003c/code\u003e, \u003ccode\u003eaudit\u003c/code\u003e, \u003ccode\u003ebanque\u003c/code\u003e, \u003ccode\u003ecommerce\u003c/code\u003e, \u003ccode\u003ecomm\u003c/code\u003e, \u003ccode\u003eedition\u003c/code\u003e, \u003ccode\u003eindustrie\u003c/code\u003e, \u003ccode\u003einfo\u003c/code\u003e, \u003ccode\u003eluxe\u003c/code\u003e, \u003ccode\u003epharma\u003c/code\u003e, \u003ccode\u003eservices\u003c/code\u003e, \u003ccode\u003eculture\u003c/code\u003e, \u003ccode\u003eimmobilier\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "other_sector",
                    "full_name": "company[other_sector]",
                    "description": "The other sector. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "company[size]",
                    "description": "The size.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003esmall\u003c/code\u003e, \u003ccode\u003emedium\u003c/code\u003e, \u003ccode\u003elarge\u003c/code\u003e, \u003ccode\u003exlarge\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "phone",
                    "full_name": "company[phone]",
                    "description": "The phone. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "address",
                    "full_name": "company[address]",
                    "description": "The address. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip",
                    "full_name": "company[zip]",
                    "description": "The zip. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "city",
                    "full_name": "company[city]",
                    "description": "The city. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "company[country]",
                    "description": "The country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "website_url",
                    "full_name": "company[website_url]",
                    "description": "The website url. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_id",
                    "full_name": "company[owner_id]",
                    "description": "The owner id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "latitude",
                    "full_name": "company[latitude]",
                    "description": "The latitude.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Float",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "longitude",
                    "full_name": "company[longitude]",
                    "description": "The longitude.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Float",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "siret",
                    "full_name": "company[siret]",
                    "description": "The siret.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pro_id",
                    "full_name": "company[pro_id]",
                    "description": "The pro id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "owner_type",
                    "full_name": "company[owner_type]",
                    "description": "The owner type.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "administrative_email",
                    "full_name": "company[administrative_email]",
                    "description": "The administrative email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "correction_point_historics": {
        "doc_url": "/apidoc/2.0/correction_point_historics",
        "api_url": "/api",
        "name": "Correction point historics",
        "short_description": null,
        "full_description": null,
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/correction_point_historics/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/correction_point_historics",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_data_id\u003c/code\u003e, \u003ccode\u003escale_team_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003etotal\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "user_data_id",
                      "scale_team_id",
                      "reason",
                      "sum",
                      "created_at",
                      "updated_at",
                      "total"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_data_id\u003c/code\u003e, \u003ccode\u003escale_team_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003etotal\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_data_id",
                      "scale_team_id",
                      "reason",
                      "sum",
                      "created_at",
                      "updated_at",
                      "total"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_data_id\u003c/code\u003e, \u003ccode\u003escale_team_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003esum\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003etotal\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_data_id",
                      "scale_team_id",
                      "reason",
                      "sum",
                      "created_at",
                      "updated_at",
                      "total"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": null
      },
      "cursus": {
        "doc_url": "/apidoc/2.0/cursus",
        "api_url": "/api",
        "name": "Cursus",
        "short_description": "An educational cycle in 42",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/cursus/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003erestricted\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "slug",
                      "kind",
                      "restricted",
                      "is_subscriptable"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003erestricted\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "slug",
                      "kind",
                      "restricted",
                      "is_subscriptable"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003erestricted\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "slug",
                      "kind",
                      "restricted",
                      "is_subscriptable"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/cursus",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 2,
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "name": "42",
                    "slug": "42"
                  },
                  {
                    "id": 1,
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/cursus/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/cursus/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "created_at": "2017-11-22T13:41:00.825Z",
                  "name": "42",
                  "slug": "42"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/cursus",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus",
                "full_name": "cursus",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "cursus[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "cursus[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003emain\u003c/code\u003e, \u003ccode\u003emain_deprecated\u003c/code\u003e, \u003ccode\u003episcine\u003c/code\u003e, \u003ccode\u003episcine_deprecated\u003c/code\u003e, \u003ccode\u003episcine_community\u003c/code\u003e, \u003ccode\u003etest\u003c/code\u003e, \u003ccode\u003eexternal\u003c/code\u003e, \u003ccode\u003eexternal_deprecated\u003c/code\u003e, \u003ccode\u003eprofessional_training\u003c/code\u003e, \u003ccode\u003eprofessional_training_deprecated\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skill_ids",
                    "full_name": "cursus[skill_ids]",
                    "description": "The skill ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/cursus",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "cursus": {
                    "name": "Oregon tigers",
                    "skill_ids": ["11", "12"]
                  }
                },
                "response_data": {
                  "id": 3,
                  "created_at": "2017-11-22T13:43:33.469Z",
                  "name": "Oregon tigers",
                  "slug": "oregon-tigers"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/cursus/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus",
                "full_name": "cursus",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "cursus[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "cursus[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003emain\u003c/code\u003e, \u003ccode\u003emain_deprecated\u003c/code\u003e, \u003ccode\u003episcine\u003c/code\u003e, \u003ccode\u003episcine_deprecated\u003c/code\u003e, \u003ccode\u003episcine_community\u003c/code\u003e, \u003ccode\u003etest\u003c/code\u003e, \u003ccode\u003eexternal\u003c/code\u003e, \u003ccode\u003eexternal_deprecated\u003c/code\u003e, \u003ccode\u003eprofessional_training\u003c/code\u003e, \u003ccode\u003eprofessional_training_deprecated\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skill_ids",
                    "full_name": "cursus[skill_ids]",
                    "description": "The skill ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/cursus/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "cursus": {
                    "name": "Oregon kangaroos",
                    "skill_ids": ["13", "14"]
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/cursus/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "cursus_users": {
        "doc_url": "/apidoc/2.0/cursus_users",
        "api_url": "/api",
        "name": "Cursus users",
        "short_description": "The \u003ca href='#users'\u003eusers\u003c/a\u003e wich are in a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/cursus_users/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/cursus_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ehas_coalition\u003c/code\u003e, \u003ccode\u003eblackholed_at\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "cursus_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "begin_at",
                      "has_coalition",
                      "blackholed_at",
                      "level"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ehas_coalition\u003c/code\u003e, \u003ccode\u003eblackholed_at\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eblackholed\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "cursus_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "begin_at",
                      "has_coalition",
                      "blackholed_at",
                      "level",
                      "active",
                      "campus_id",
                      "end",
                      "future",
                      "blackholed"
                    ],
                    "additional": {
                      "active": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Only return active cursus_users"
                      },
                      "campus_id": {
                        "proc": {},
                        "all": [],
                        "description": "Return cursus_users with primary campus of user equal to him"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end cursus users"
                      },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only cursus users which begins in the future"
                      },
                      "blackholed": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only blackholed cursus users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ehas_coalition\u003c/code\u003e, \u003ccode\u003eblackholed_at\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "cursus_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "begin_at",
                      "has_coalition",
                      "blackholed_at",
                      "level",
                      "level"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/cursus_users/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 126 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/cursus_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/cursus_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ehas_coalition\u003c/code\u003e, \u003ccode\u003eblackholed_at\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "cursus_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "begin_at",
                      "has_coalition",
                      "blackholed_at",
                      "level"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ehas_coalition\u003c/code\u003e, \u003ccode\u003eblackholed_at\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eblackholed\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "cursus_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "begin_at",
                      "has_coalition",
                      "blackholed_at",
                      "level",
                      "active",
                      "campus_id",
                      "end",
                      "future",
                      "blackholed"
                    ],
                    "additional": {
                      "active": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Only return active cursus_users"
                      },
                      "campus_id": {
                        "proc": {},
                        "all": [],
                        "description": "Return cursus_users with primary campus of user equal to him"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end cursus users"
                      },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only cursus users which begins in the future"
                      },
                      "blackholed": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only blackholed cursus users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ehas_coalition\u003c/code\u003e, \u003ccode\u003eblackholed_at\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e, \u003ccode\u003elevel\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "cursus_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "begin_at",
                      "has_coalition",
                      "blackholed_at",
                      "level",
                      "level"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/cursus_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 126,
                    "begin_at": "2016-12-16T07:41:39.516Z",
                    "end_at": null,
                    "grade": "Cadet",
                    "level": 0.0,
                    "skills": [],
                    "cursus_id": 2,
                    "has_coalition": true,
                    "user": {
                      "id": 126,
                      "login": "darthcae",
                      "url": "https://api.intra.42.fr/v2/users/darthcae"
                    },
                    "cursus": {
                      "id": 2,
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "name": "42",
                      "slug": "42"
                    }
                  },
                  {
                    "id": 125,
                    "begin_at": "2017-11-10T21:38:19.158Z",
                    "end_at": null,
                    "grade": "Cadet",
                    "level": 0.0,
                    "skills": [],
                    "cursus_id": 1,
                    "has_coalition": true,
                    "user": {
                      "id": 125,
                      "login": "sebulseb",
                      "url": "https://api.intra.42.fr/v2/users/sebulseb"
                    },
                    "cursus": {
                      "id": 1,
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  },
                  {
                    "id": 124,
                    "begin_at": "2017-07-22T03:48:20.016Z",
                    "end_at": null,
                    "grade": "Cadet",
                    "level": 0.0,
                    "skills": [],
                    "cursus_id": 2,
                    "has_coalition": true,
                    "user": {
                      "id": 124,
                      "login": "hsolo2",
                      "url": "https://api.intra.42.fr/v2/users/hsolo2"
                    },
                    "cursus": {
                      "id": 2,
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "name": "42",
                      "slug": "42"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/cursus_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/cursus_users/7",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 7,
                  "begin_at": "2017-06-13T03:05:07.756Z",
                  "end_at": null,
                  "grade": "Cadet",
                  "level": 0.0,
                  "skills": [],
                  "cursus_id": 1,
                  "has_coalition": true,
                  "user": {
                    "id": 7,
                    "login": "jbinks",
                    "url": "https://api.intra.42.fr/v2/users/jbinks"
                  },
                  "cursus": {
                    "id": 1,
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/cursus_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/cursus_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus_user",
                "full_name": "cursus_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "cursus_id",
                    "full_name": "cursus_user[cursus_id]",
                    "description": "The cursus id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "cursus_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "cursus_user[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "cursus_user[begin_at]",
                    "description": "The begin at.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "has_coalition",
                    "full_name": "cursus_user[has_coalition]",
                    "description": "Is it has coalition ? Default to true.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skip_begin_validation",
                    "full_name": "cursus_user[skip_begin_validation]",
                    "description": "The skip begin validation.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/cursus_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "cursus_user": {
                    "begin_at": "2017-07-22 13:43:10 UTC",
                    "cursus_id": "2",
                    "end_at": "2018-03-22 13:43:10 UTC",
                    "user_id": "1"
                  }
                },
                "response_data": {
                  "id": 127,
                  "begin_at": "2017-07-22T13:43:10.000Z",
                  "end_at": "2018-03-22T13:43:10.000Z",
                  "grade": null,
                  "level": 0.0,
                  "skills": [],
                  "cursus_id": 2,
                  "has_coalition": true,
                  "user": {
                    "id": 1,
                    "login": "jeanne",
                    "url": "https://api.intra.42.fr/v2/users/jeanne"
                  },
                  "cursus": {
                    "id": 2,
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "name": "42",
                    "slug": "42"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/cursus_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus_user",
                "full_name": "cursus_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "cursus_id",
                    "full_name": "cursus_user[cursus_id]",
                    "description": "The cursus id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "cursus_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "cursus_user[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "cursus_user[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "has_coalition",
                    "full_name": "cursus_user[has_coalition]",
                    "description": "Is it has coalition ? Default to true.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skip_begin_validation",
                    "full_name": "cursus_user[skip_begin_validation]",
                    "description": "The skip begin validation.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/cursus_users/7",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "cursus_user": {
                    "begin_at": "2017-07-22 13:43:10 UTC",
                    "cursus_id": "2",
                    "end_at": "2018-03-22 13:43:10 UTC",
                    "user_id": "1"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/cursus_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/cursus_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/cursus_users/7",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "dashes": {
        "doc_url": "/apidoc/2.0/dashes",
        "api_url": "/api",
        "name": "Dashes",
        "short_description": "The \u003ca href='#dashs'\u003eDash\u003c/a\u003e is a short-time \u003ca href='#projects'\u003eproject\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/dashes/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/dashes/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003enbr_xp\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "cursus_id",
                      "skill_id",
                      "nbr_xp",
                      "slug",
                      "begin_at",
                      "duration",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003enbr_xp\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "cursus_id",
                      "skill_id",
                      "nbr_xp",
                      "slug",
                      "begin_at",
                      "duration",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "future"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only dashes which begins in the future"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003enbr_xp\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "cursus_id",
                      "skill_id",
                      "nbr_xp",
                      "slug",
                      "begin_at",
                      "duration",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/dashes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003enbr_xp\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "cursus_id",
                      "skill_id",
                      "nbr_xp",
                      "slug",
                      "begin_at",
                      "duration",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003enbr_xp\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "cursus_id",
                      "skill_id",
                      "nbr_xp",
                      "slug",
                      "begin_at",
                      "duration",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "future"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only dashes which begins in the future"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003enbr_xp\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "cursus_id",
                      "skill_id",
                      "nbr_xp",
                      "slug",
                      "begin_at",
                      "duration",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/dashes/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/dashes",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "dash",
                "full_name": "dash",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "dash[name]",
                    "description": "The name. Must be unique in the scope of a given cursus.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "dash[description]",
                    "description": "The description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "dash[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "dash[cursus_id]",
                    "description": "The cursus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "dash[campus_id]",
                    "description": "The campus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skill_id",
                    "full_name": "dash[skill_id]",
                    "description": "The skill id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nbr_xp",
                    "full_name": "dash[nbr_xp]",
                    "description": "The nbr xp.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "dash[begin_at]",
                    "description": "The begin at. Must be after today.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "dash[duration]",
                    "description": "The duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/dashes",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "dash": {
                    "begin_at": "2017-11-25 13:43:35 UTC",
                    "campus_id": "2",
                    "cursus_id": "1",
                    "description": "Le sujet dbon courage!",
                    "duration": "20",
                    "name": "Dashname",
                    "nbr_xp": "20",
                    "skill_id": "3",
                    "slug": "dashname"
                  }
                },
                "response_data": {
                  "id": 2,
                  "name": "Dashname",
                  "description": "Le sujet dbon courage!",
                  "slug": "dashname",
                  "cursus_id": 1,
                  "campus_id": 2,
                  "skill_id": 3,
                  "nbr_xp": "20",
                  "begin_at": "2017-11-25T13:43:35.000Z",
                  "end_at": "2017-11-25T14:03:35.000Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/dashes/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/dashes/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "dash",
                "full_name": "dash",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "dash[name]",
                    "description": "The name. Must be unique in the scope of a given cursus.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "dash[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "dash[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "dash[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "dash[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skill_id",
                    "full_name": "dash[skill_id]",
                    "description": "The skill id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nbr_xp",
                    "full_name": "dash[nbr_xp]",
                    "description": "The nbr xp.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "dash[begin_at]",
                    "description": "The begin at. Must be after today.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "dash[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/dashes/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "dash": {
                    "begin_at": "2017-11-25 13:43:35 UTC",
                    "campus_id": "1",
                    "cursus_id": "2",
                    "description": "Le sujet dbon courage!",
                    "duration": "20",
                    "name": "Dashname",
                    "nbr_xp": "20",
                    "skill_id": "2",
                    "slug": "dashname"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/dashes/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/dashes/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "dashes_users": {
        "doc_url": "/apidoc/2.0/dashes_users",
        "api_url": "/api",
        "name": "Dashes users",
        "short_description": "The \u003ca href='#dashes'\u003edash\u003c/a\u003e of a \u003ca href='#users'\u003euser\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/dashes_users/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/dashes_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edash_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "dash_id",
                      "user_id",
                      "repo_uuid",
                      "repo_url",
                      "final_mark",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edash_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "dash_id",
                      "user_id",
                      "repo_uuid",
                      "repo_url",
                      "final_mark",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edash_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "dash_id",
                      "user_id",
                      "repo_uuid",
                      "repo_url",
                      "final_mark",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/dashes_users/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 1 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/dashes_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/dashes/:dash_id/dashes_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "dash_id",
                "full_name": "dash_id",
                "description": "The dash id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edash_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "dash_id",
                      "user_id",
                      "repo_uuid",
                      "repo_url",
                      "final_mark",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edash_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "dash_id",
                      "user_id",
                      "repo_uuid",
                      "repo_url",
                      "final_mark",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003edash_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "dash_id",
                      "user_id",
                      "repo_uuid",
                      "repo_url",
                      "final_mark",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/dashes_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "dash_id": 1,
                    "user_id": 6,
                    "repo_url": null,
                    "repo_uuid": null,
                    "final_mark": null
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/dashes_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/dashes_users/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "dash_id": 1,
                  "user_id": 6,
                  "repo_url": null,
                  "repo_uuid": null,
                  "final_mark": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/dashes_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "dashes_user",
                "full_name": "dashes_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "dash_id",
                    "full_name": "dashes_user[dash_id]",
                    "description": "The dash id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "dashes_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_url",
                    "full_name": "dashes_user[repo_url]",
                    "description": "The repo url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_uuid",
                    "full_name": "dashes_user[repo_uuid]",
                    "description": "The repo uuid.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "dashes_user[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/dashes_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "dashes_user": { "dash_id": "1", "user_id": "1" }
                },
                "response_data": {
                  "id": 2,
                  "dash_id": 1,
                  "user_id": 1,
                  "repo_url": null,
                  "repo_uuid": null,
                  "final_mark": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/dashes_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/dashes_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "dashes_user",
                "full_name": "dashes_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "dash_id",
                    "full_name": "dashes_user[dash_id]",
                    "description": "The dash id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "dashes_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_url",
                    "full_name": "dashes_user[repo_url]",
                    "description": "The repo url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_uuid",
                    "full_name": "dashes_user[repo_uuid]",
                    "description": "The repo uuid.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "dashes_user[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/dashes_users/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "dashes_user": { "dash_id": "1", "user_id": "1" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/dashes_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/dashes_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/dashes_users/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "endpoints": {
        "doc_url": "/apidoc/2.0/endpoints",
        "api_url": "/api",
        "name": "Endpoints",
        "short_description": "A endpoint for a \u003ca href='#campus'\u003ecampus\u003c/a\u003e",
        "full_description": "\n\u003ch2 id=\"tldr\"\u003eTL,DR\u003c/h2\u003e\n\n\u003cblockquote\u003eIn order to synchronize all users between the intranet and the local storage system user for authentification (like LDAP) set on a campus, each campus must set a webservice which will be called by the intranet on a user creation / update / close / unclose. A short implementation \u003ca href=\"https://gist.github.com/lambda2/2061ee935c6170f9e748\"\u003eis available here\u003c/a\u003e.\u003c/blockquote\u003e\n\n\u003ch2 id=\"endpoints\"\u003eEndpoints\u003c/h2\u003e\nThe following endpoints will be called on actions on users, depending on his campus, and are:\n\u003ch3 id=\"close\"\u003eClose\u003c/h3\u003e\nCalled when a user is closed.\u003ccode\u003ePOST /users/%user/close\u003c/code\u003eParameters:\n\u003cpre\u003e\u003ccode\u003e{\n  \u0026quot;id\u0026quot;:5696,\n  \u0026quot;user_id\u0026quot;:16814,\n  \u0026quot;closer_id\u0026quot;:109,\n  \u0026quot;reason\u0026quot;:\u0026quot;La raison du close\u0026quot;,\n  \u0026quot;state\u0026quot;:\u0026quot;close\u0026quot;,\n  \u0026quot;created_at\u0026quot;:\u0026quot;2016-01-23T14:59:22.789Z\u0026quot;,\n  \u0026quot;updated_at\u0026quot;:\u0026quot;2016-01-23T14:59:22.789Z\u0026quot;,\n  \u0026quot;key\u0026quot;=\u0026gt;\u0026quot;a_secret_for_your_webservice\u0026quot;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"unclose\"\u003eUnclose\u003c/h3\u003e\nCalled when a user is unclosed.\u003ccode\u003ePOST /users/%user/unclose\u003c/code\u003eParameters:\n\u003cpre\u003e\u003ccode\u003e{\n  \u0026quot;key\u0026quot;=\u0026gt;\u0026quot;a_secret_for_your_webservice\u0026quot;\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"update\"\u003eUpdate\u003c/h3\u003e\nCalled when a user is updated.\u003ccode\u003ePOST /users/%user/update\u003c/code\u003eParameters:\n\u003cpre\u003e\u003ccode\u003e# All the user fields. If the password is changed, the new password is displayed, uncrypted.\n{\n  \u0026quot;uid\u0026quot;:\u0026quot;andre\u0026quot;,\n  \u0026quot;login\u0026quot;:\u0026quot;andre\u0026quot;,\n  \u0026quot;key\u0026quot;:\u0026quot;a_secret_for_your_webservice\u0026quot;,\n  \u0026quot;id\u0026quot;:74,\n  \u0026quot;email\u0026quot;:\u0026quot;andre@staff.42.fr\u0026quot;,\n  \u0026quot;password\u0026quot;:\u0026quot;the_new_password\u0026quot;,\n  \u0026quot;created_at\u0026quot;:\u0026quot;2016-01-20T00:32:50.226Z\u0026quot;,\n  \u0026quot;updated_at\u0026quot;:\u0026quot;2016-09-16T23:36:59.971Z\u0026quot;,\n  \u0026quot;image_url\u0026quot;:\u0026quot;/uploads/users/andre.jpg\u0026quot;,\n  \u0026quot;first_name\u0026quot;:\u0026quot;Andre\u0026quot;,\n  \u0026quot;last_name\u0026quot;:\u0026quot;AUBIN\u0026quot;,\n  \u0026quot;phone\u0026quot;:null,\n  \u0026quot;pool_year\u0026quot;:null,\n  \u0026quot;pool_month\u0026quot;:null,\n  \u0026quot;kind\u0026quot;:\u0026quot;admin\u0026quot;,\n  \u0026quot;status\u0026quot;:null,\n  \u0026quot;campus\u0026quot;:[\n    {\n      \u0026quot;id\u0026quot;:1,\n      \u0026quot;name\u0026quot;:\u0026quot;Paris\u0026quot;,\n      \u0026quot;created_at\u0026quot;:\u0026quot;2015-05-19T10:53:31.459Z\u0026quot;,\n      \u0026quot;updated_at\u0026quot;:\u0026quot;2016-09-22T09:11:25.476Z\u0026quot;,\n      \u0026quot;time_zone\u0026quot;:\u0026quot;Europe/Paris\u0026quot;,\n      \u0026quot;language_id\u0026quot;:1,\n      \u0026quot;slug\u0026quot;:\u0026quot;paris\u0026quot;,\n      \u0026quot;main_email\u0026quot;:\u0026quot;general@staff.42.fr\u0026quot;,\n      \u0026quot;endpoint_id\u0026quot;:1,\n      \u0026quot;vogsphere_id\u0026quot;:1\n    }\n  ],\n  \u0026quot;primary_campus\u0026quot;:{\n    \u0026quot;id\u0026quot;:1,\n    \u0026quot;name\u0026quot;:\u0026quot;Paris\u0026quot;,\n    \u0026quot;created_at\u0026quot;:\u0026quot;2015-05-19T10:53:31.459Z\u0026quot;,\n    \u0026quot;updated_at\u0026quot;:\u0026quot;2016-09-22T09:11:25.476Z\u0026quot;,\n    \u0026quot;time_zone\u0026quot;:\u0026quot;Europe/Paris\u0026quot;,\n    \u0026quot;language_id\u0026quot;:1,\n    \u0026quot;slug\u0026quot;:\u0026quot;paris\u0026quot;,\n    \u0026quot;main_email\u0026quot;:\u0026quot;general@staff.42.fr\u0026quot;,\n    \u0026quot;endpoint_id\u0026quot;:1,\n    \u0026quot;vogsphere_id\u0026quot;:1\n  },\n  \u0026quot;meta\u0026quot;:{\n    \u0026quot;additional\u0026quot;:\u0026quot;informations\u0026quot;,\n    \u0026quot;can_be\u0026quot;:\u0026quot;set here\u0026quot;\n  }\n}\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch3 id=\"create\"\u003eCreate\u003c/h3\u003e\nCalled when a user is created.\u003ccode\u003ePOST /users/new\u003c/code\u003eParameters:\n\u003cpre\u003e\u003ccode\u003e# All the fields of the new user.\n{\n  \u0026quot;uid\u0026quot;:\u0026quot;andre\u0026quot;,\n  \u0026quot;login\u0026quot;:\u0026quot;andre\u0026quot;,\n  \u0026quot;key\u0026quot;:\u0026quot;a_secret_for_your_webservice\u0026quot;,\n  \u0026quot;id\u0026quot;:74,\n  \u0026quot;email\u0026quot;:\u0026quot;andre@staff.42.fr\u0026quot;,\n  \u0026quot;password\u0026quot;:\u0026quot;the_new_password\u0026quot;,\n  \u0026quot;created_at\u0026quot;:\u0026quot;2016-01-20T00:32:50.226Z\u0026quot;,\n  \u0026quot;updated_at\u0026quot;:\u0026quot;2016-09-16T23:36:59.971Z\u0026quot;,\n  \u0026quot;image_url\u0026quot;:\u0026quot;/uploads/users/andre.jpg\u0026quot;,\n  \u0026quot;first_name\u0026quot;:\u0026quot;Andre\u0026quot;,\n  \u0026quot;last_name\u0026quot;:\u0026quot;AUBIN\u0026quot;,\n  \u0026quot;phone\u0026quot;:null,\n  \u0026quot;pool_year\u0026quot;:null,\n  \u0026quot;pool_month\u0026quot;:null,\n  \u0026quot;kind\u0026quot;:\u0026quot;admin\u0026quot;,\n  \u0026quot;status\u0026quot;:null,\n  \u0026quot;campus\u0026quot;:[\n    {\n      \u0026quot;id\u0026quot;:1,\n      \u0026quot;name\u0026quot;:\u0026quot;Paris\u0026quot;,\n      \u0026quot;created_at\u0026quot;:\u0026quot;2015-05-19T10:53:31.459Z\u0026quot;,\n      \u0026quot;updated_at\u0026quot;:\u0026quot;2016-09-22T09:11:25.476Z\u0026quot;,\n      \u0026quot;time_zone\u0026quot;:\u0026quot;Europe/Paris\u0026quot;,\n      \u0026quot;language_id\u0026quot;:1,\n      \u0026quot;slug\u0026quot;:\u0026quot;paris\u0026quot;,\n      \u0026quot;main_email\u0026quot;:\u0026quot;general@staff.42.fr\u0026quot;,\n      \u0026quot;endpoint_id\u0026quot;:1,\n      \u0026quot;vogsphere_id\u0026quot;:1\n    }\n  ],\n  \u0026quot;primary_campus\u0026quot;:{\n    \u0026quot;id\u0026quot;:1,\n    \u0026quot;name\u0026quot;:\u0026quot;Paris\u0026quot;,\n    \u0026quot;created_at\u0026quot;:\u0026quot;2015-05-19T10:53:31.459Z\u0026quot;,\n    \u0026quot;updated_at\u0026quot;:\u0026quot;2016-09-22T09:11:25.476Z\u0026quot;,\n    \u0026quot;time_zone\u0026quot;:\u0026quot;Europe/Paris\u0026quot;,\n    \u0026quot;language_id\u0026quot;:1,\n    \u0026quot;slug\u0026quot;:\u0026quot;paris\u0026quot;,\n    \u0026quot;main_email\u0026quot;:\u0026quot;general@staff.42.fr\u0026quot;,\n    \u0026quot;endpoint_id\u0026quot;:1,\n    \u0026quot;vogsphere_id\u0026quot;:1\n  },\n  \u0026quot;meta\u0026quot;:{\n    \u0026quot;additional\u0026quot;:\u0026quot;informations\u0026quot;,\n    \u0026quot;can_be\u0026quot;:\u0026quot;set here\u0026quot;\n  }\n}\u003c/code\u003e\u003c/pre\u003e\nThe \u003ccode\u003emeta\u003c/code\u003e user field contain additional information which can be added trough the API, like, for example, a \u003ccode\u003egroup_id\u003c/code\u003e, and which will not be saved in the database. The uncrypted password is shown, but will not be saved in the database. So it’s the only time it will be available on user creation.\u003chr /\u003e\n\u003ch2 id=\"error_handling\"\u003eError handling\u003c/h2\u003e\nThe implemented webserice have to handle errors correctly, and return the good HTTP response code.\u003ctable\u003e\u003cthead\u003e\u003ctr\u003e\u003cth\u003eHttp Code\u003c/th\u003e\u003cth\u003eMeaning\u003c/th\u003e\u003c/tr\u003e\u003c/thead\u003e\u003ctbody\u003e\u003ctr\u003e\u003ctd style=\"text-align: left;\"\u003e404 (Not found)\u003c/td\u003e\u003ctd style=\"text-align: right;\"\u003eThe user can’t be found\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd style=\"text-align: left;\"\u003e422 (Unprocessable entity)\u003c/td\u003e\u003ctd style=\"text-align: right;\"\u003eParameters are unprocessable or missing\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd style=\"text-align: left;\"\u003e500 (Internal server error)\u003c/td\u003e\u003ctd style=\"text-align: right;\"\u003eError on the webservice\u003c/td\u003e\u003c/tr\u003e\n\u003ctr\u003e\u003ctd style=\"text-align: left;\"\u003e200 (Ok) (or 200, 201, 204)\u003c/td\u003e\u003ctd style=\"text-align: right;\"\u003eOk\u003c/td\u003e\u003c/tr\u003e\n\u003c/tbody\u003e\u003c/table\u003eIt’s optional, but we encourage you to respond \u003cstrong\u003e200\u003c/strong\u003e, \u003cstrong\u003e201\u003c/strong\u003e and \u003cstrong\u003e204\u003c/strong\u003e for actions.\u003chr /\u003e\n\u003ch2 id=\"security_and_format\"\u003eSecurity and format\u003c/h2\u003e\nExchanges \u003cstrong\u003eMUST\u003c/strong\u003e be done over a SSL tunnel (e.g. https).If the endpoint requires a secret token, it will be sent with the data under the \u003ccode\u003ekey\u003c/code\u003e key.If datas are sent, they will always be in JSON format.\u003chr /\u003e\n\u003ch2 id=\"additional_data\"\u003eAdditional data\u003c/h2\u003e\nThe \u003ccode\u003emeta\u003c/code\u003e user field contain additional information which can be added trough the API, like, for example, a \u003ccode\u003egroup_id\u003c/code\u003e, and which will not be saved in the database.\u003chr /\u003e\n\u003ch2 id=\"example_of_implementation\"\u003eExample of implementation\u003c/h2\u003e\n\u003ca href=\"https://gist.github.com/lambda2/2061ee935c6170f9e748\"\u003eavailable here\u003c/a\u003e",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/endpoints/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/endpoints",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003esecret\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "url",
                      "secret",
                      "description",
                      "created_at",
                      "updated_at",
                      "active"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003esecret\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "url",
                      "secret",
                      "description",
                      "created_at",
                      "updated_at",
                      "active"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003esecret\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "url",
                      "secret",
                      "description",
                      "created_at",
                      "updated_at",
                      "active"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/endpoints",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "url": "http://evil.machine.ai",
                    "description": "The endpoint for the evil machine",
                    "created_at": "2016-05-06T08:45:06.194Z",
                    "updated_at": "2016-05-06T08:45:06.194Z",
                    "campus": []
                  },
                  {
                    "id": 2,
                    "url": "http://burning.endpoint.io",
                    "description": "Another endpoint",
                    "created_at": "2016-05-06T08:45:06.194Z",
                    "updated_at": "2016-05-06T08:45:06.194Z",
                    "campus": []
                  },
                  {
                    "id": 3,
                    "url": "https://intra.42.jp",
                    "description": "The tokyo endpoint",
                    "created_at": "2016-05-06T08:45:06.194Z",
                    "updated_at": "2016-05-06T08:49:40.574Z",
                    "campus": [
                      {
                        "id": 9,
                        "name": "Tokyo",
                        "time_zone": "Asia/Tokyo",
                        "language": {
                          "id": 2,
                          "name": "English",
                          "identifier": "en",
                          "created_at": "2015-04-14T16:07:38.122Z",
                          "updated_at": "2015-04-14T16:07:38.122Z"
                        },
                        "users_count": 1
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/endpoints/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/endpoints/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/endpoints/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "url": "https://intra.42.jp",
                  "description": "The tokyo endpoint",
                  "created_at": "2016-05-06T08:45:06.194Z",
                  "updated_at": "2016-05-06T08:49:40.574Z",
                  "campus": [
                    {
                      "id": 9,
                      "name": "Tokyo",
                      "time_zone": "Asia/Tokyo",
                      "language": {
                        "id": 2,
                        "name": "English",
                        "identifier": "en",
                        "created_at": "2015-04-14T16:07:38.122Z",
                        "updated_at": "2015-04-14T16:07:38.122Z"
                      },
                      "users_count": 1
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/endpoints/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/endpoints",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "endpoint",
                "full_name": "endpoint",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "endpoint[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "url",
                    "full_name": "endpoint[url]",
                    "description": "The url.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "secret",
                    "full_name": "endpoint[secret]",
                    "description": "The secret.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "endpoint[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "endpoint[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "endpoint[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/endpoints/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/endpoints/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/endpoints/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "endpoint",
                "full_name": "endpoint",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "endpoint[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "url",
                    "full_name": "endpoint[url]",
                    "description": "The url.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "secret",
                    "full_name": "endpoint[secret]",
                    "description": "The secret.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "endpoint[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "endpoint[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "endpoint[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/endpoints/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/endpoints/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "evaluations": {
        "doc_url": "/apidoc/2.0/evaluations",
        "api_url": "/api",
        "name": "Evaluations",
        "short_description": "The \u003ca href='#dashs'\u003eEvaluation\u003c/a\u003e of a \u003ca href='#projects'\u003eproject\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/evaluations/graph",
            "name": "graph",
            "apis": [],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "position",
                      "kind",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "position",
                      "kind",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "position",
                      "kind",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/evaluations/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/evaluations",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "position",
                      "kind",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "position",
                      "kind",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "position",
                      "kind",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/evaluations/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/evaluations/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/evaluations/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/evaluations",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "evaluation",
                "full_name": "evaluation",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "kind",
                    "full_name": "evaluation[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003escale\u003c/code\u003e, \u003ccode\u003eupload\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/evaluations/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/evaluations/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/evaluations/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "evaluation",
                "full_name": "evaluation",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "kind",
                    "full_name": "evaluation[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003escale\u003c/code\u003e, \u003ccode\u003eupload\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/evaluations/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/evaluations/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "events": {
        "doc_url": "/apidoc/2.0/events",
        "api_url": "/api",
        "name": "Events",
        "short_description": "The events in a \u003ca href='#campus'\u003ecampus\u003c/a\u003e or a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/events/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/events/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eprohibition_of_cancellation\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003eremote\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "name",
                      "description",
                      "location",
                      "kind",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "prohibition_of_cancellation",
                      "difficulty",
                      "remote"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eprohibition_of_cancellation\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003eremote\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "name",
                      "description",
                      "location",
                      "kind",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "prohibition_of_cancellation",
                      "difficulty",
                      "remote",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only events which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end events"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eprohibition_of_cancellation\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003eremote\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "name",
                      "description",
                      "location",
                      "kind",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "prohibition_of_cancellation",
                      "difficulty",
                      "remote"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/events/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 4 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus/:cursus_id/events",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/events",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/cursus/:cursus_id/events",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/events",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eprohibition_of_cancellation\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003eremote\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "name",
                      "description",
                      "location",
                      "kind",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "prohibition_of_cancellation",
                      "difficulty",
                      "remote"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eprohibition_of_cancellation\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003eremote\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "name",
                      "description",
                      "location",
                      "kind",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "prohibition_of_cancellation",
                      "difficulty",
                      "remote",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only events which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end events"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eprohibition_of_cancellation\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003eremote\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "name",
                      "description",
                      "location",
                      "kind",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "prohibition_of_cancellation",
                      "difficulty",
                      "remote"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/events",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 4,
                    "name": "Oklahoma whales",
                    "description": "Et selfies beard williamsburg quisquam ramps. Molestiae craft beer consectetur asperiores dolor. Small batch placeat banjo vhs mollitia aut vero. Distinctio est readymade offal tote bag +1.",
                    "location": "West Wisozk",
                    "kind": "rush",
                    "max_people": 112,
                    "nbr_subscribers": 0,
                    "begin_at": "2017-11-25T13:42:10.090Z",
                    "end_at": "2017-11-25T15:42:10.090Z",
                    "campus_ids": [3],
                    "cursus_ids": [1],
                    "themes": [
                      {
                        "created_at": "2019-01-09T17:18:54.779Z",
                        "id": 36,
                        "name": "AI",
                        "updated_at": "2019-01-09T17:18:54.779Z"
                      },
                      {
                        "created_at": "2019-01-09T17:18:54.819Z",
                        "id": 37,
                        "name": "Entrepreneurship",
                        "updated_at": "2019-01-09T17:18:54.819Z"
                      }
                    ],
                    "waitlist": null,
                    "prohibition_of_cancellation": 15,
                    "created_at": "2017-11-22T13:42:10.110Z",
                    "updated_at": "2017-11-22T13:42:10.127Z"
                  },
                  {
                    "id": 3,
                    "name": "Wyoming cattle",
                    "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                    "location": "Southern Bauch",
                    "kind": "other",
                    "max_people": 39,
                    "nbr_subscribers": 0,
                    "begin_at": "2017-11-24T13:42:10.014Z",
                    "end_at": "2017-11-24T15:42:10.015Z",
                    "campus_ids": [6],
                    "cursus_ids": [1],
                    "themes": [
                      {
                        "created_at": "2019-01-09T17:18:54.779Z",
                        "id": 10,
                        "name": "Meeting",
                        "updated_at": "2019-01-09T17:18:54.779Z"
                      },
                      {
                        "created_at": "2019-01-09T17:18:54.819Z",
                        "id": 15,
                        "name": "Association",
                        "updated_at": "2019-01-09T17:18:54.819Z"
                      }
                    ],
                    "waitlist": {
                      "created_at": "2019-01-14T16:25:05.941Z",
                      "id": 392,
                      "updated_at": "2019-01-14T16:25:05.941Z",
                      "waitlistable_id": 3,
                      "waitlistable_type": "Event"
                    },
                    "prohibition_of_cancellation": 2,
                    "created_at": "2017-11-22T13:42:10.037Z",
                    "updated_at": "2017-11-22T13:42:10.082Z"
                  },
                  {
                    "id": 2,
                    "name": "Nevada sheep",
                    "description": "Et tousled small batch street voluptas +1. Nisi small batch shoreditch est bicycle rights similique sed. Pbr\u0026b sit exercitationem etsy ea. Cumque et forage reprehenderit officia quas. Chartreuse ad tacos commodi.",
                    "location": "South Wisconsin Academy",
                    "kind": "association",
                    "max_people": 94,
                    "nbr_subscribers": 0,
                    "begin_at": "2017-11-23T13:42:09.970Z",
                    "end_at": "2017-11-23T15:42:09.970Z",
                    "campus_ids": [4],
                    "cursus_ids": [1],
                    "themes": [
                      {
                        "created_at": "2019-01-09T17:18:54.779Z",
                        "id": 12,
                        "name": "Security",
                        "updated_at": "2019-01-09T17:18:54.779Z"
                      },
                      {
                        "created_at": "2019-01-09T17:18:54.819Z",
                        "id": 42,
                        "name": "Recrutement",
                        "updated_at": "2019-01-09T17:18:54.819Z"
                      }
                    ],
                    "waitlist": {
                      "created_at": "2019-01-14T16:25:05.941Z",
                      "id": 33,
                      "updated_at": "2019-01-14T16:25:05.941Z",
                      "waitlistable_id": 2,
                      "waitlistable_type": "Event"
                    },
                    "prohibition_of_cancellation": 10,
                    "created_at": "2017-11-22T13:42:09.991Z",
                    "updated_at": "2017-11-22T13:42:10.009Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/events/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return the event specified by the \u003ccode\u003e:id\u003c/code\u003e parameter. Invisibles event need at least the \u003ccode\u003ebasic_staff\u003c/code\u003e role.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/events/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "name": "Wyoming cattle",
                  "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                  "location": "Southern Bauch",
                  "kind": "other",
                  "max_people": 39,
                  "nbr_subscribers": 0,
                  "begin_at": "2017-11-24T13:42:10.014Z",
                  "end_at": "2017-11-24T15:42:10.015Z",
                  "campus_ids": [6],
                  "cursus_ids": [1],
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 36,
                      "name": "AI",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 37,
                      "name": "Entrepreneurship",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 391,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 3,
                    "waitlistable_type": "Event"
                  },
                  "prohibition_of_cancellation": 10,
                  "created_at": "2017-11-22T13:42:10.037Z",
                  "updated_at": "2017-11-22T13:42:10.082Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/events",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event",
                "full_name": "event",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "event[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "event[begin_at]",
                    "description": "The begin at. .",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "event[end_at]",
                    "description": "The end at. . Beginning must be after ending.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "event[description]",
                    "description": "The description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "location",
                    "full_name": "event[location]",
                    "description": "The location. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "event[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003epedago\u003c/code\u003e, \u003ccode\u003erush\u003c/code\u003e, \u003ccode\u003episcine\u003c/code\u003e, \u003ccode\u003epartnership\u003c/code\u003e, \u003ccode\u003emeet\u003c/code\u003e, \u003ccode\u003econference\u003c/code\u003e, \u003ccode\u003emeet_up\u003c/code\u003e, \u003ccode\u003eevent\u003c/code\u003e, \u003ccode\u003eassociation\u003c/code\u003e, \u003ccode\u003espeed_working\u003c/code\u003e, \u003ccode\u003ehackathon\u003c/code\u003e, \u003ccode\u003eworkshop\u003c/code\u003e, \u003ccode\u003echallenge\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e, \u003ccode\u003eextern\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_people",
                    "full_name": "event[max_people]",
                    "description": "The max people.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "prohibition_of_cancellation",
                    "full_name": "event[prohibition_of_cancellation]",
                    "description": "The prohibition of cancellation.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "activate_waitlist",
                    "full_name": "event[activate_waitlist]",
                    "description": "The activate waitlist.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "events_themes_attributes",
                    "full_name": "event[events_themes_attributes]",
                    "description": "The events themes attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "event[events_themes_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "theme_id",
                        "full_name": "event[events_themes_attributes][theme_id]",
                        "description": "The theme id. Must be unique in the scope of a given event.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "event[events_themes_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "theme_attributes",
                        "full_name": "event[events_themes_attributes][theme_attributes]",
                        "description": "The theme attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": [
                          {
                            "name": "id",
                            "full_name": "event[events_themes_attributes][theme_attributes][id]",
                            "description": "The id.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "name",
                            "full_name": "event[events_themes_attributes][theme_attributes][name]",
                            "description": "The name. Must be unique.",
                            "required": true,
                            "allow_nil": false,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "event[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "event[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/events",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "event": {
                    "begin_at": "2017-11-25 13:43:10 UTC",
                    "campus_ids": ["1"],
                    "cursus_ids": ["1"],
                    "events_themes_attributes": [
                      { "theme_id": 11 },
                      {
                        "theme_attributes": { "name": "My awesome new theme" }
                      },
                      {
                        "theme_attributes": { "name": "My awesome new theme 2" }
                      }
                    ],
                    "activate_waitlist": "true",
                    "description": "A fucking great event",
                    "end_at": "2017-11-29 13:43:10 UTC",
                    "kind": "workshop",
                    "location": "Holodeck",
                    "max_people": "120",
                    "prohibition_of_cancellation": 10,
                    "name": "Rainbowcat festival 🌈"
                  }
                },
                "response_data": {
                  "id": 5,
                  "name": "Rainbowcat festival 🌈",
                  "description": "A fucking great event",
                  "location": "Holodeck",
                  "kind": "workshop",
                  "max_people": 120,
                  "nbr_subscribers": 0,
                  "begin_at": "2017-11-25T13:43:10.000Z",
                  "end_at": "2017-11-29T13:43:10.000Z",
                  "campus_ids": [1],
                  "cursus_ids": [1],
                  "themes": [
                    {
                      "created_at": "2018-10-21T16:35:38.782Z",
                      "id": 11,
                      "name": "Security",
                      "updated_at": "2018-10-21T16:35:38.782Z"
                    },
                    {
                      "created_at": "2019-01-14T15:06:56.968Z",
                      "id": 42,
                      "name": "My awesome new theme",
                      "updated_at": "2019-01-14T15:06:56.968Z"
                    },
                    {
                      "created_at": "2019-01-14T15:06:56.968Z",
                      "id": 43,
                      "name": "My awesome new theme 2",
                      "updated_at": "2019-01-14T15:06:56.968Z"
                    }
                  ],
                  "waitlist": {
                    "created_at": "2019-01-14T16:20:43.412Z",
                    "id": 389,
                    "updated_at": "2019-01-14T16:20:43.412Z",
                    "waitlistable_id": 5,
                    "waitlistable_type": "Event"
                  },
                  "prohibition_of_cancellation": 10,
                  "created_at": "2017-11-22T13:43:37.609Z",
                  "updated_at": "2017-11-22T13:43:37.633Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "events_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/events/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "event",
                "full_name": "event",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "event[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "event[begin_at]",
                    "description": "The begin at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "event[end_at]",
                    "description": "The end at. . Beginning must be after ending.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "event[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "location",
                    "full_name": "event[location]",
                    "description": "The location. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "event[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003epedago\u003c/code\u003e, \u003ccode\u003erush\u003c/code\u003e, \u003ccode\u003episcine\u003c/code\u003e, \u003ccode\u003epartnership\u003c/code\u003e, \u003ccode\u003emeet\u003c/code\u003e, \u003ccode\u003econference\u003c/code\u003e, \u003ccode\u003emeet_up\u003c/code\u003e, \u003ccode\u003eevent\u003c/code\u003e, \u003ccode\u003eassociation\u003c/code\u003e, \u003ccode\u003espeed_working\u003c/code\u003e, \u003ccode\u003ehackathon\u003c/code\u003e, \u003ccode\u003eworkshop\u003c/code\u003e, \u003ccode\u003echallenge\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e, \u003ccode\u003eextern\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_people",
                    "full_name": "event[max_people]",
                    "description": "The max people.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "prohibition_of_cancellation",
                    "full_name": "event[prohibition_of_cancellation]",
                    "description": "The prohibition of cancellation.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "activate_waitlist",
                    "full_name": "event[activate_waitlist]",
                    "description": "The activate waitlist.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "events_themes_attributes",
                    "full_name": "event[events_themes_attributes]",
                    "description": "The events themes attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "event[events_themes_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "theme_id",
                        "full_name": "event[events_themes_attributes][theme_id]",
                        "description": "The theme id. Must be unique in the scope of a given event.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "event[events_themes_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "theme_attributes",
                        "full_name": "event[events_themes_attributes][theme_attributes]",
                        "description": "The theme attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": [
                          {
                            "name": "id",
                            "full_name": "event[events_themes_attributes][theme_attributes][id]",
                            "description": "The id.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "name",
                            "full_name": "event[events_themes_attributes][theme_attributes][name]",
                            "description": "The name. Must be unique.",
                            "required": false,
                            "allow_nil": false,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "event[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "event[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/events/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "event": {
                    "begin_at": "2017-11-25 13:43:10 UTC",
                    "campus_ids": ["1"],
                    "cursus_ids": ["1"],
                    "events_themes_attributes": [
                      { "theme_attributes": { "name": "Association" } },
                      { "id": 58, "_destroy": "true" }
                    ],
                    "description": "A fucking great event",
                    "end_at": "2017-11-29 13:43:10 UTC",
                    "kind": "workshop",
                    "location": "Holodeck",
                    "max_people": "120",
                    "prohibition_of_cancellation": 10,
                    "name": "Rainbowcat festival 🌈"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "events_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/events/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/events/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "events_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "events_users": {
        "doc_url": "/apidoc/2.0/events_users",
        "api_url": "/api",
        "name": "Events users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e registered to an \u003ca href='#events'\u003eevent\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/events_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/events_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events/:event_id/events_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eevent_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "event_id",
                      "user_id",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eevent_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "event_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eevent_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "event_id",
                      "user_id",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/events_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/events_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "events_user",
                "full_name": "events_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "event_id",
                    "full_name": "events_user[event_id]",
                    "description": "The event id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "events_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given event.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["profile"],
              "roles": ["advanced_staff", "events_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/events_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "events_user",
                "full_name": "events_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "event_id",
                    "full_name": "events_user[event_id]",
                    "description": "The event id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "events_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given event.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["profile"],
              "roles": ["advanced_staff", "events_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/events_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/events_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["profile"],
              "roles": ["advanced_staff", "events_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "exams": {
        "doc_url": "/apidoc/2.0/exams",
        "api_url": "/api",
        "name": "Exams",
        "short_description": "The exam in a \u003ca href='#campus'\u003ecampus\u003c/a\u003e or a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/exams/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/exams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003eip_range\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "location",
                      "ip_range",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "visible",
                      "name",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003eip_range\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "location",
                      "ip_range",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "visible",
                      "name",
                      "campus_id",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only exams which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end exams"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003eip_range\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "location",
                      "ip_range",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "visible",
                      "name",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/exams/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 2 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus/:cursus_id/exams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/exams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/cursus/:cursus_id/exams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/exams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/exams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/exams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "List all visibles exams. Invisibles exams need at least the \u003ccode\u003ebasic_staff\u003c/code\u003e role.",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003eip_range\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "location",
                      "ip_range",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "visible",
                      "name",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003eip_range\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "location",
                      "ip_range",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "visible",
                      "name",
                      "campus_id",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only exams which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end exams"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003elocation\u003c/code\u003e, \u003ccode\u003eip_range\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "location",
                      "ip_range",
                      "max_people",
                      "created_at",
                      "updated_at",
                      "visible",
                      "name",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/exams",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 42,
                    "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                    "begin_at": "2015-07-17T15:00:00.000Z",
                    "end_at": "2015-07-17T19:00:00.000Z",
                    "location": "e1, e2, e3",
                    "max_people": 780,
                    "nbr_subscribers": 594,
                    "name": "Piscine C - Exam 01",
                    "created_at": "2015-07-15T13:05:26.006Z",
                    "updated_at": "2018-08-27T16:56:15.032Z",
                    "campus": {
                      "id": 1,
                      "name": "Paris",
                      "time_zone": "Europe/Paris",
                      "language": {
                        "id": 1,
                        "name": "Français",
                        "identifier": "fr",
                        "created_at": "2014-11-02T16:43:38.466Z",
                        "updated_at": "2021-10-08T16:28:44.040Z"
                      },
                      "users_count": 22319,
                      "vogsphere_id": 1,
                      "country": "France",
                      "address": "96, boulevard Bessières",
                      "zip": "75017",
                      "city": "Paris",
                      "website": "http://www.42.fr/",
                      "facebook": "https://facebook.com/42born2code",
                      "twitter": "https://twitter.com/42born2code",
                      "active": true,
                      "email_extension": "42.fr",
                      "default_hidden_phone": false
                    },
                    "cursus": [
                      {
                        "id": 4,
                        "created_at": "2015-05-01T17:46:08.433Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      },
                      {
                        "id": 6,
                        "created_at": "2015-09-21T12:36:09.128Z",
                        "name": "Piscine C décloisonnée",
                        "slug": "piscine-c-decloisonnee"
                      },
                      {
                        "id": 13,
                        "created_at": "2017-02-01T14:25:42.300Z",
                        "name": "42 Labs",
                        "slug": "42-labs"
                      }
                    ],
                    "projects": [
                      {
                        "id": 405,
                        "name": "Exam01",
                        "slug": "piscine-c-exam01",
                        "parent": null,
                        "children": [],
                        "attachments": [],
                        "created_at": "2015-06-29T13:14:31.702Z",
                        "updated_at": "2021-09-01T08:35:01.074Z",
                        "exam": true,
                        "git_id": null,
                        "repository": null
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"],
              "authentication": "user",
              "facultative": true
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/exams/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return the exam specified by the \u003ccode\u003e:id\u003c/code\u003e parameter. Invisibles exams need at least the \u003ccode\u003ebasic_staff\u003c/code\u003e role.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/exams/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "location": "e1,e2,e3",
                  "max_people": 780,
                  "nbr_subscribers": 594,
                  "name": "Piscine C - Exam 01",
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "updated_at": "2018-08-27T16:56:15.032Z",
                  "campus": {
                    "id": 1,
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "language": {
                      "id": 1,
                      "name": "Français",
                      "identifier": "fr",
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "country": "France",
                    "address": "96, boulevard Bessières",
                    "zip": "75017",
                    "city": "Paris",
                    "website": "http://www.42.fr/",
                    "facebook": "https://facebook.com/42born2code",
                    "twitter": "https://twitter.com/42born2code",
                    "active": true,
                    "email_extension": "42.fr",
                    "default_hidden_phone": false
                  },
                  "cursus": [
                    {
                      "id": 4,
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "id": 6,
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "id": 13,
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "projects": [
                    {
                      "id": 405,
                      "name": "Exam01",
                      "slug": "piscine-c-exam01",
                      "parent": null,
                      "children": [],
                      "attachments": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "updated_at": "2021-09-01T08:35:01.074Z",
                      "exam": true,
                      "git_id": null,
                      "repository": null
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/exams",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "exam",
                "full_name": "exam",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "exam[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "exam[begin_at]",
                    "description": "The begin at. .",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "exam[end_at]",
                    "description": "The end at. . Beginning must be after ending.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "location",
                    "full_name": "exam[location]",
                    "description": "The location.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "ip_range",
                    "full_name": "exam[ip_range]",
                    "description": "The ip range. Maximum length is 255.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "visible",
                    "full_name": "exam[visible]",
                    "description": "Is it visible ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_people",
                    "full_name": "exam[max_people]",
                    "description": "The max people.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "exam[campus_id]",
                    "description": "The campus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_ids",
                    "full_name": "exam[project_ids]",
                    "description": "The project ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/exams",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "exam": {
                    "begin_at": "2015-07-17T15:00:00.000Z",
                    "campus_ids": 1,
                    "end_at": "2015-07-17T19:00:00.000Z",
                    "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                    "location": "e1,e2,e3",
                    "max_people": 780,
                    "name": "Piscine C - Exam 01",
                    "project_ids": [405],
                    "visible": "true"
                  }
                },
                "response_data": {
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "location": "e1,e2,e3",
                  "max_people": 780,
                  "nbr_subscribers": 594,
                  "name": "Piscine C - Exam 01",
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "updated_at": "2018-08-27T16:56:15.032Z",
                  "campus": {
                    "id": 1,
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "language": {
                      "id": 1,
                      "name": "Français",
                      "identifier": "fr",
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "country": "France",
                    "address": "96, boulevard Bessières",
                    "zip": "75017",
                    "city": "Paris",
                    "website": "http://www.42.fr/",
                    "facebook": "https://facebook.com/42born2code",
                    "twitter": "https://twitter.com/42born2code",
                    "active": true,
                    "email_extension": "42.fr",
                    "default_hidden_phone": false
                  },
                  "cursus": [
                    {
                      "id": 4,
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "id": 6,
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "id": 13,
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "projects": [
                    {
                      "id": 405,
                      "name": "Exam01",
                      "slug": "piscine-c-exam01",
                      "parent": null,
                      "children": [],
                      "attachments": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "updated_at": "2021-09-01T08:35:01.074Z",
                      "exam": true,
                      "git_id": null,
                      "repository": null
                    }
                  ]
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/exams/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/exams/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "exam",
                "full_name": "exam",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "exam[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "exam[begin_at]",
                    "description": "The begin at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "exam[end_at]",
                    "description": "The end at. . Beginning must be after ending.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "location",
                    "full_name": "exam[location]",
                    "description": "The location.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "ip_range",
                    "full_name": "exam[ip_range]",
                    "description": "The ip range. Maximum length is 255.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "visible",
                    "full_name": "exam[visible]",
                    "description": "Is it visible ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_people",
                    "full_name": "exam[max_people]",
                    "description": "The max people.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "exam[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_ids",
                    "full_name": "exam[project_ids]",
                    "description": "The project ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/exams/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "exam": {
                    "begin_at": "2017-11-25 13:43:10 UTC",
                    "campus_ids": 4,
                    "end_at": "2017-11-29 13:43:10 UTC",
                    "ip_range": "10.20.0.0/16",
                    "location": "Cluj",
                    "max_people": 70,
                    "name": "Rainbowcat Exam 🌈",
                    "project_ids": ["3"],
                    "visible": "true"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/exams/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/exams/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "exams_users": {
        "doc_url": "/apidoc/2.0/exams_users",
        "api_url": "/api",
        "name": "Exams users",
        "short_description": null,
        "full_description": null,
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/exams_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/exams/:exam_id/exams_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "List all visibles exams_users",
            "errors": [],
            "params": [
              {
                "name": "exam_id",
                "full_name": "exam_id",
                "description": "The exam id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eexam_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "exam_id",
                      "user_id",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eexam_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "exam_id",
                      "user_id",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/exams/:exam_id/exams_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "exam_id",
                "full_name": "exam_id",
                "description": "The exam id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams_users/update",
            "name": "update",
            "apis": [],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/exams_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/exams/:exam_id/exams_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "exam_id",
                "full_name": "exam_id",
                "description": "The exam id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": null
      },
      "experiences": {
        "doc_url": "/apidoc/2.0/experiences",
        "api_url": "/api",
        "name": "Experiences",
        "short_description": "An experience gained by an \u003ca href='#users'\u003euser\u003c/a\u003e in a particular \u003ca href='#skills'\u003eskill\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/experiences/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/experiences",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/experiences",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users/:projects_user_id/experiences",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/experiences",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:skill_id/experiences",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/partnerships_users/:partnerships_user_id/experiences",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "projects_user_id",
                "full_name": "projects_user_id",
                "description": "The projects_user id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "skill_id",
                "full_name": "skill_id",
                "description": "The skill id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "partnerships_user_id",
                "full_name": "partnerships_user_id",
                "description": "The partnerships_user id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003eexperiancable_id\u003c/code\u003e, \u003ccode\u003eexperiancable_type\u003c/code\u003e, \u003ccode\u003eexperience\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eis_bonus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "skill_id",
                      "experiancable_id",
                      "experiancable_type",
                      "experience",
                      "created_at",
                      "cursus_id",
                      "is_bonus"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003eexperiancable_id\u003c/code\u003e, \u003ccode\u003eexperiancable_type\u003c/code\u003e, \u003ccode\u003eexperience\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eis_bonus\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "skill_id",
                      "experiancable_id",
                      "experiancable_type",
                      "experience",
                      "created_at",
                      "cursus_id",
                      "is_bonus",
                      "campus_id"
                    ],
                    "additional": {
                      "campus_id": {
                        "proc": {},
                        "all": [],
                        "description": "Returns experiences of primary users from the given campus."
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003eexperiancable_id\u003c/code\u003e, \u003ccode\u003eexperiancable_type\u003c/code\u003e, \u003ccode\u003eexperience\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eis_bonus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "skill_id",
                      "experiancable_id",
                      "experiancable_type",
                      "experience",
                      "created_at",
                      "cursus_id",
                      "is_bonus"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/experiences/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/experiences/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/experiences/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/experiences",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "experience",
                "full_name": "experience",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "experience[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "experience[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skill_id",
                    "full_name": "experience[skill_id]",
                    "description": "The skill id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "experiancable_id",
                    "full_name": "experience[experiancable_id]",
                    "description": "The experiancable id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "experiancable_type",
                    "full_name": "experience[experiancable_type]",
                    "description": "The experiancable type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "experience",
                    "full_name": "experience[experience]",
                    "description": "The experience.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "experience[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "experience[cursus_id]",
                    "description": "The cursus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/experiences/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/experiences/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/experiences/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "experience",
                "full_name": "experience",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "experience[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "experience[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skill_id",
                    "full_name": "experience[skill_id]",
                    "description": "The skill id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "experiancable_id",
                    "full_name": "experience[experiancable_id]",
                    "description": "The experiancable id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "experiancable_type",
                    "full_name": "experience[experiancable_type]",
                    "description": "The experiancable type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "experience",
                    "full_name": "experience[experience]",
                    "description": "The experience.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "experience[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "experience[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/experiences/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/experiences/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "expertises": {
        "doc_url": "/apidoc/2.0/expertises",
        "api_url": "/api",
        "name": "Expertises",
        "short_description": "Pedagogic expertises",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/expertises/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/expertises",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "created_at",
                      "updated_at",
                      "kind"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "created_at",
                      "updated_at",
                      "kind"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "created_at",
                      "updated_at",
                      "kind"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/expertises",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 10,
                    "name": "Magic",
                    "slug": "magic",
                    "url": "https://api.intra.42.fr/v2/expertises/magic",
                    "kind": "languages",
                    "created_at": "2017-11-22T13:41:01.825Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/magic/expertises_users"
                  },
                  {
                    "id": 9,
                    "name": "Elixir",
                    "slug": "elixir",
                    "url": "https://api.intra.42.fr/v2/expertises/elixir",
                    "kind": "languages",
                    "created_at": "2017-11-22T13:41:01.819Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/elixir/expertises_users"
                  },
                  {
                    "id": 8,
                    "name": "iOS",
                    "slug": "ios",
                    "url": "https://api.intra.42.fr/v2/expertises/ios",
                    "kind": "frameworks",
                    "created_at": "2017-11-22T13:41:01.814Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/ios/expertises_users"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/expertises/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/expertises/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "name": "Android",
                  "slug": "android",
                  "url": "https://api.intra.42.fr/v2/expertises/android",
                  "kind": "frameworks",
                  "created_at": "2017-11-22T13:41:01.785Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/android/expertises_users"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/expertises",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "expertise",
                "full_name": "expertise",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "expertise[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "expertise[slug]",
                    "description": "The slug.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "expertise[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003elanguages\u003c/code\u003e, \u003ccode\u003eframeworks\u003c/code\u003e, \u003ccode\u003edatabases\u003c/code\u003e, \u003ccode\u003eadmin_sys\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/expertises",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "expertise": {
                    "kind": "databases",
                    "name": "West Virginia frogs"
                  }
                },
                "response_data": {
                  "id": 11,
                  "name": "West Virginia frogs",
                  "slug": "west-virginia-frogs",
                  "url": "https://api.intra.42.fr/v2/expertises/west-virginia-frogs",
                  "kind": "databases",
                  "created_at": "2017-11-22T13:43:39.345Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/west-virginia-frogs/expertises_users"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/expertises/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/expertises/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "expertise",
                "full_name": "expertise",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "expertise[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "expertise[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "expertise[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003elanguages\u003c/code\u003e, \u003ccode\u003eframeworks\u003c/code\u003e, \u003ccode\u003edatabases\u003c/code\u003e, \u003ccode\u003eadmin_sys\u003c/code\u003e, \u003ccode\u003eother\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/expertises/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "expertise": {
                    "kind": "databases",
                    "name": "South Dakota frogs"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/expertises/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/expertises/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "expertises_users": {
        "doc_url": "/apidoc/2.0/expertises_users",
        "api_url": "/api",
        "name": "Expertises users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e which have an \u003ca href='#expertises'\u003eexpertise\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/expertises_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/expertises/:expertise_id/expertises_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/expertises_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/expertises_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "expertise_id",
                "full_name": "expertise_id",
                "description": "The expertise id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eexpertise_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003einterested\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003econtact_me\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "expertise_id",
                      "user_id",
                      "interested",
                      "value",
                      "created_at",
                      "updated_at",
                      "contact_me"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eexpertise_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003einterested\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003econtact_me\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "expertise_id",
                      "user_id",
                      "interested",
                      "value",
                      "created_at",
                      "updated_at",
                      "contact_me"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eexpertise_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003einterested\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003econtact_me\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "expertise_id",
                      "user_id",
                      "interested",
                      "value",
                      "created_at",
                      "updated_at",
                      "contact_me"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/expertises_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 126,
                    "expertise_id": 6,
                    "interested": false,
                    "value": 2,
                    "contact_me": false,
                    "created_at": "2017-11-22T13:41:23.630Z",
                    "user_id": 126,
                    "expertise": {
                      "id": 6,
                      "name": "AngularJS",
                      "slug": "angularjs",
                      "url": "https://api.intra.42.fr/v2/expertises/angularjs",
                      "kind": "frameworks",
                      "created_at": "2017-11-22T13:41:01.803Z",
                      "expertises_users_url": "https://api.intra.42.fr/v2/expertises/angularjs/expertises_users"
                    },
                    "user": {
                      "id": 126,
                      "login": "darthcae",
                      "url": "https://api.intra.42.fr/v2/users/darthcae"
                    }
                  },
                  {
                    "id": 125,
                    "expertise_id": 4,
                    "interested": false,
                    "value": 2,
                    "contact_me": false,
                    "created_at": "2017-11-22T13:41:23.614Z",
                    "user_id": 125,
                    "expertise": {
                      "id": 4,
                      "name": "C",
                      "slug": "c",
                      "url": "https://api.intra.42.fr/v2/expertises/c",
                      "kind": "languages",
                      "created_at": "2017-11-22T13:41:01.791Z",
                      "expertises_users_url": "https://api.intra.42.fr/v2/expertises/c/expertises_users"
                    },
                    "user": {
                      "id": 125,
                      "login": "sebulseb",
                      "url": "https://api.intra.42.fr/v2/users/sebulseb"
                    }
                  },
                  {
                    "id": 124,
                    "expertise_id": 1,
                    "interested": false,
                    "value": 2,
                    "contact_me": false,
                    "created_at": "2017-11-22T13:41:23.598Z",
                    "user_id": 124,
                    "expertise": {
                      "id": 1,
                      "name": ".NET",
                      "slug": "net",
                      "url": "https://api.intra.42.fr/v2/expertises/net",
                      "kind": "languages",
                      "created_at": "2017-11-22T13:41:01.773Z",
                      "expertises_users_url": "https://api.intra.42.fr/v2/expertises/net/expertises_users"
                    },
                    "user": {
                      "id": 124,
                      "login": "hsolo2",
                      "url": "https://api.intra.42.fr/v2/users/hsolo2"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/expertises_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/expertises_users/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "expertise_id": 6,
                  "interested": false,
                  "value": 2,
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:22.512Z",
                  "user_id": 3,
                  "expertise": {
                    "id": 6,
                    "name": "AngularJS",
                    "slug": "angularjs",
                    "url": "https://api.intra.42.fr/v2/expertises/angularjs",
                    "kind": "frameworks",
                    "created_at": "2017-11-22T13:41:01.803Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/angularjs/expertises_users"
                  },
                  "user": {
                    "id": 3,
                    "login": "gargamel",
                    "url": "https://api.intra.42.fr/v2/users/gargamel"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/expertises/:expertise_id/expertises_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/expertises_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/expertises_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "expertise_id",
                "full_name": "expertise_id",
                "description": "The expertise id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "expertises_user",
                "full_name": "expertises_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "expertise_id",
                    "full_name": "expertises_user[expertise_id]",
                    "description": "The expertise id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "expertises_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "interested",
                    "full_name": "expertises_user[interested]",
                    "description": "Is it interested ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "value",
                    "full_name": "expertises_user[value]",
                    "description": "The value.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_me",
                    "full_name": "expertises_user[contact_me]",
                    "description": "Is it contact me ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/expertises_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "expertises_user": {
                    "expertise_id": "2",
                    "user_id": "106",
                    "value": "1"
                  }
                },
                "response_data": {
                  "id": 127,
                  "expertise_id": 2,
                  "interested": false,
                  "value": 1,
                  "contact_me": false,
                  "created_at": "2017-11-22T13:43:39.996Z",
                  "user_id": 106,
                  "expertise": {
                    "id": 2,
                    "name": "jQuery",
                    "slug": "jquery",
                    "url": "https://api.intra.42.fr/v2/expertises/jquery",
                    "kind": "other",
                    "created_at": "2017-11-22T13:41:01.779Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/jquery/expertises_users"
                  },
                  "user": {
                    "id": 106,
                    "login": "anaskywa",
                    "url": "https://api.intra.42.fr/v2/users/anaskywa"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["profile"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/expertises_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/expertises_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "expertises_user",
                "full_name": "expertises_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "expertise_id",
                    "full_name": "expertises_user[expertise_id]",
                    "description": "The expertise id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "expertises_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "interested",
                    "full_name": "expertises_user[interested]",
                    "description": "Is it interested ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "value",
                    "full_name": "expertises_user[value]",
                    "description": "The value.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_me",
                    "full_name": "expertises_user[contact_me]",
                    "description": "Is it contact me ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/expertises_users/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "expertises_user": {
                    "expertise_id": "6",
                    "user_id": "125",
                    "value": "1"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["profile"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/expertises_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/expertises_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/expertises_users/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["profile"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "feedbacks": {
        "doc_url": "/apidoc/2.0/feedbacks",
        "api_url": "/api",
        "name": "Feedbacks",
        "short_description": "The feedback of a \u003ca href='#scale_teams'\u003eScaleTeam\u003c/a\u003e or an \u003ca href='#events'\u003eEvent\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/feedbacks/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/events/:event_id/feedbacks",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/feedbacks",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:scale_team_id/feedbacks",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team_id",
                "full_name": "scale_team_id",
                "description": "The scale_team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003efeedbackable_type\u003c/code\u003e, \u003ccode\u003efeedbackable_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003erating\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "feedbackable_type",
                      "feedbackable_id",
                      "comment",
                      "rating",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003efeedbackable_type\u003c/code\u003e, \u003ccode\u003efeedbackable_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003erating\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "feedbackable_type",
                      "feedbackable_id",
                      "comment",
                      "rating",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "additional": {
                      "campus_id": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return feedbacks of specific campus"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003efeedbackable_type\u003c/code\u003e, \u003ccode\u003efeedbackable_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003erating\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "feedbackable_type",
                      "feedbackable_id",
                      "comment",
                      "rating",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/feedbacks/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/events/:event_id/feedbacks/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/feedbacks/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:scale_team_id/feedbacks/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team_id",
                "full_name": "scale_team_id",
                "description": "The scale_team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/feedbacks/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/events/:event_id/feedbacks",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/feedbacks",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:scale_team_id/feedbacks",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team_id",
                "full_name": "scale_team_id",
                "description": "The scale_team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "feedback",
                "full_name": "feedback",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "comment",
                    "full_name": "feedback[comment]",
                    "description": "The comment. Maximum length is 1024.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "feedbackable_type",
                    "full_name": "feedback[feedbackable_type]",
                    "description": "The feedbackable type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "feedbackable_id",
                    "full_name": "feedback[feedbackable_id]",
                    "description": "The feedbackable id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "rating",
                    "full_name": "feedback[rating]",
                    "description": "The rating.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "feedback[user_id]",
                    "description": "The user id. Must be unique in the scope of a given feedbackable.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "feedback_details_attributes",
                    "full_name": "feedback[feedback_details_attributes]",
                    "description": "The feedback details attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "feedback[feedback_details_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "rate",
                        "full_name": "feedback[feedback_details_attributes][rate]",
                        "description": "The rate.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "feedback[feedback_details_attributes][kind]",
                        "description": "The kind.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003epunctuality\u003c/code\u003e, \u003ccode\u003einterested\u003c/code\u003e, \u003ccode\u003erigorous\u003c/code\u003e, \u003ccode\u003enice\u003c/code\u003e, \u003ccode\u003eaccuracy\u003c/code\u003e, \u003ccode\u003einteresting\u003c/code\u003e, \u003ccode\u003equality\u003c/code\u003e, \u003ccode\u003epertinent\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "feedback[feedback_details_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/feedbacks/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/events/:event_id/feedbacks/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events/:event_id/feedbacks/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/feedbacks/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/feedbacks/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:scale_team_id/feedbacks/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:scale_team_id/feedbacks/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team_id",
                "full_name": "scale_team_id",
                "description": "The scale_team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "feedback",
                "full_name": "feedback",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "comment",
                    "full_name": "feedback[comment]",
                    "description": "The comment. Maximum length is 1024.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "feedbackable_type",
                    "full_name": "feedback[feedbackable_type]",
                    "description": "The feedbackable type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "feedbackable_id",
                    "full_name": "feedback[feedbackable_id]",
                    "description": "The feedbackable id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "rating",
                    "full_name": "feedback[rating]",
                    "description": "The rating.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "feedback[user_id]",
                    "description": "The user id. Must be unique in the scope of a given feedbackable.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "feedback_details_attributes",
                    "full_name": "feedback[feedback_details_attributes]",
                    "description": "The feedback details attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "feedback[feedback_details_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "rate",
                        "full_name": "feedback[feedback_details_attributes][rate]",
                        "description": "The rate.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "feedback[feedback_details_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003epunctuality\u003c/code\u003e, \u003ccode\u003einterested\u003c/code\u003e, \u003ccode\u003erigorous\u003c/code\u003e, \u003ccode\u003enice\u003c/code\u003e, \u003ccode\u003eaccuracy\u003c/code\u003e, \u003ccode\u003einteresting\u003c/code\u003e, \u003ccode\u003equality\u003c/code\u003e, \u003ccode\u003epertinent\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "feedback[feedback_details_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/feedbacks/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/events/:event_id/feedbacks/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/feedbacks/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:scale_team_id/feedbacks/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team_id",
                "full_name": "scale_team_id",
                "description": "The scale_team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "flags": {
        "doc_url": "/apidoc/2.0/flags",
        "api_url": "/api",
        "name": "Flags",
        "short_description": "Flags from scales",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/flags/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/flags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by name asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003epositive\u003c/code\u003e, \u003ccode\u003eicon\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "name": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "positive",
                      "icon",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003epositive\u003c/code\u003e, \u003ccode\u003eicon\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "positive",
                      "icon",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003epositive\u003c/code\u003e, \u003ccode\u003eicon\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "positive",
                      "icon",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "flash_users": {
        "doc_url": "/apidoc/2.0/flash_users",
        "api_url": "/api",
        "name": "Flash users",
        "short_description": "The \u003ca href='#flash_users'\u003eFlash Users\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/flash_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/flashes/:flash_id/flash_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/flash_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "flash_id",
                "full_name": "flash_id",
                "description": "The flash id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eflash_id\u003c/code\u003e, \u003ccode\u003eseen\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "flash_id",
                      "seen",
                      "created_at",
                      "updated_at",
                      "end_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eflash_id\u003c/code\u003e, \u003ccode\u003eseen\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "flash_id",
                      "seen",
                      "created_at",
                      "updated_at",
                      "end_at",
                      "end"
                    ],
                    "additional": {
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end flash users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/flash_users",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 28,
                    "flash_id": 2,
                    "seen": true,
                    "end_at": "2016-06-13T18:40:57.031Z",
                    "user": {
                      "id": 10292,
                      "login": "mguilbau",
                      "url": "http://localhost:13000/v2/users/mguilbau"
                    }
                  },
                  {
                    "id": 29,
                    "flash_id": 2,
                    "seen": true,
                    "end_at": "2016-06-13T18:40:57.031Z",
                    "user": {
                      "id": 10316,
                      "login": "spuyet",
                      "url": "http://localhost:13000/v2/users/spuyet"
                    }
                  },
                  {
                    "id": 30,
                    "flash_id": 2,
                    "seen": true,
                    "end_at": "2016-06-13T18:40:57.031Z",
                    "user": {
                      "id": 10317,
                      "login": "evoisin",
                      "url": "http://localhost:13000/v2/users/evoisin"
                    }
                  }
                ]
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/flash_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/flashes/:flash_id/flash_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/flash_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "flash_id",
                "full_name": "flash_id",
                "description": "The flash id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/flash_users/28",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 28,
                  "flash_id": 2,
                  "seen": true,
                  "end_at": "2016-06-13T18:40:57.031Z",
                  "user": {
                    "id": 10292,
                    "login": "mguilbau",
                    "url": "http://localhost:13000/v2/users/mguilbau"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/flash_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/flashes/:flash_id/flash_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/flash_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "flash_id",
                "full_name": "flash_id",
                "description": "The flash id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "flash_user",
                "full_name": "flash_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "flash_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "flash_id",
                    "full_name": "flash_user[flash_id]",
                    "description": "The flash id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "seen",
                    "full_name": "flash_user[seen]",
                    "description": "Is it seen ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "flash_user[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/flashes",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "flash_user": {
                    "flash_id": 1,
                    "user_id": 19265,
                    "end_at": "2018-07-01T18:40:57.031Z"
                  }
                },
                "response_data": {
                  "id": 166513,
                  "flash_id": 1,
                  "seen": false,
                  "end_at": "2018-07-01T18:40:57.031Z",
                  "user": {
                    "id": 19265,
                    "login": "jgengo",
                    "url": "http://localhost:13000/v2/users/jgengo"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "flashes": {
        "doc_url": "/apidoc/2.0/flashes",
        "api_url": "/api",
        "name": "Flashes",
        "short_description": "The \u003ca href='#flashes'\u003eFlash\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/flashes/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/flashes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003eselector\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "content",
                      "selector",
                      "created_at",
                      "updated_at",
                      "identifier",
                      "title",
                      "url",
                      "duration"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003eselector\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003eurl\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "content",
                      "selector",
                      "created_at",
                      "updated_at",
                      "identifier",
                      "title",
                      "url",
                      "duration"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/flashes",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 24,
                    "title": "Achievement unlocked !",
                    "content": "\u003cdiv class='achievement-modal'\u003e\n\u003cimg class='achievement-modal--image' src='https://admin.intrav2.42.fr/uploads/achievement/image/83/PED010.svg' alt='achievement logo'/\u003e\n        \u003cdiv class='achievement-modal--content'\u003e\n          \u003ch3 class='achievement-modal--title'\u003eSerial examiner\u003c/h3\u003e\n          \u003cp class='achievement-modal--desc'\u003eEffectuer 10 soutenances en une journée en tant que correcteur.\u003c/div\u003e\n\u003c/div\u003e\n",
                    "identifier": "achievement-83",
                    "duration": 4320,
                    "selector": ""
                  },
                  {
                    "id": 25,
                    "title": "Achievement unlocked !",
                    "content": "\u003cdiv class='achievement-modal'\u003e\n\u003cimg class='achievement-modal--image' src='https://admin.intrav2.42.fr/uploads/achievement/image/83/PED010.svg' alt='achievement logo'/\u003e\n        \u003cdiv class='achievement-modal--content'\u003e\n          \u003ch3 class='achievement-modal--title'\u003eSerial examiner\u003c/h3\u003e\n          \u003cp class='achievement-modal--desc'\u003eEffectuer 10 soutenances en une journée en tant que correcteur.\u003c/div\u003e\n\u003c/div\u003e\n",
                    "identifier": "achievement-84",
                    "duration": 4320,
                    "selector": ""
                  },
                  {
                    "id": 26,
                    "title": "Achievement unlocked !",
                    "content": "\u003cdiv class='achievement-modal'\u003e\n\u003cimg class='achievement-modal--image' src='https://admin.intrav2.42.fr/uploads/achievement/image/83/PED010.svg' alt='achievement logo'/\u003e\n        \u003cdiv class='achievement-modal--content'\u003e\n          \u003ch3 class='achievement-modal--title'\u003eSerial examiner\u003c/h3\u003e\n          \u003cp class='achievement-modal--desc'\u003eEffectuer 10 soutenances en une journée en tant que correcteur.\u003c/div\u003e\n\u003c/div\u003e\n",
                    "identifier": "achievement-85",
                    "duration": 4320,
                    "selector": ""
                  }
                ]
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/flashes/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/flashes/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/flashes/27",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 27,
                  "title": "Achievement unlocked !",
                  "content": "\u003cdiv class='achievement-modal'\u003e\n\u003cimg class='achievement-modal--image' src='https://admin.intrav2.42.fr/uploads/achievement/image/83/PED010.svg' alt='achievement logo'/\u003e\n        \u003cdiv class='achievement-modal--content'\u003e\n          \u003ch3 class='achievement-modal--title'\u003eSerial examiner\u003c/h3\u003e\n          \u003cp class='achievement-modal--desc'\u003eEffectuer 10 soutenances en une journée en tant que correcteur.\u003c/div\u003e\n\u003c/div\u003e\n",
                  "identifier": "achievement-83",
                  "duration": 4320,
                  "selector": ""
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/flashes/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/flashes",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "flash",
                "full_name": "flash",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "content",
                    "full_name": "flash[content]",
                    "description": "The content.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "selector",
                    "full_name": "flash[selector]",
                    "description": "The selector.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "identifier",
                    "full_name": "flash[identifier]",
                    "description": "The identifier.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title",
                    "full_name": "flash[title]",
                    "description": "The title.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "url",
                    "full_name": "flash[url]",
                    "description": "The url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "flash[duration]",
                    "description": "The duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/flashes",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "flash": {
                    "title": "Almost the end!",
                    "content": "One of our member is leaving us in few days...",
                    "identifier": "the_end",
                    "duration": 4200
                  }
                },
                "response_data": {
                  "id": 53,
                  "title": "Almost the end!",
                  "content": "One of our member is leaving us in few days...",
                  "identifier": "the_end",
                  "duration": 4200
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "gitlab_users": {
        "doc_url": "/apidoc/2.0/gitlab_users",
        "api_url": "/api",
        "name": "Gitlab users",
        "short_description": null,
        "full_description": null,
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/gitlab_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/gitlab_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003epublic_key\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003efingerprint\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "user_id",
                      "public_key",
                      "created_at",
                      "updated_at",
                      "name",
                      "fingerprint"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003epublic_key\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003efingerprint\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "public_key",
                      "created_at",
                      "updated_at",
                      "name",
                      "fingerprint"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003epublic_key\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003efingerprint\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "public_key",
                      "created_at",
                      "updated_at",
                      "name",
                      "fingerprint"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": null
      },
      "groups": {
        "doc_url": "/apidoc/2.0/groups",
        "api_url": "/api",
        "name": "Groups",
        "short_description": "Groups in which \u003ca href='#users'\u003eusers\u003c/a\u003e belong to. It will display a label on their profile and on the forum.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/groups/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/groups",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/groups",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/groups",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  { "id": 1, "name": "gnomes" },
                  { "id": 2, "name": "vampires" },
                  { "id": 3, "name": "sons" }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/groups/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/groups/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "id": 1, "name": "gnomes" },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/groups",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "group",
                "full_name": "group",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "group[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "color",
                    "full_name": "group[color]",
                    "description": "The color.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "group[kind]",
                    "description": "The kind. Default to important.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003eimportant\u003c/code\u003e, \u003ccode\u003enormal\u003c/code\u003e, \u003ccode\u003ehidden\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/groups",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "group": {
                    "color": "#ed5462",
                    "kind": "important",
                    "name": "tigers"
                  }
                },
                "response_data": { "id": 5, "name": "tigers" },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/groups/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/groups/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "group",
                "full_name": "group",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "group[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "color",
                    "full_name": "group[color]",
                    "description": "The color.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "group[kind]",
                    "description": "The kind. Default to important.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003eimportant\u003c/code\u003e, \u003ccode\u003enormal\u003c/code\u003e, \u003ccode\u003ehidden\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/groups/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "group": {
                    "color": "#ed5462",
                    "kind": "important",
                    "name": "tigers"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/groups/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/groups/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "groups_users": {
        "doc_url": "/apidoc/2.0/groups_users",
        "api_url": "/api",
        "name": "Groups users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e who are in a \u003ca href='#group'\u003egroup\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/groups_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/groups_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/groups/:group_id/groups_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/groups_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "group_id",
                "full_name": "group_id",
                "description": "The group id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/groups_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "user_id": 33,
                    "group_id": 1,
                    "created_at": "2017-11-22T13:42:12.972Z",
                    "updated_at": "2017-11-22T13:42:12.972Z"
                  },
                  {
                    "id": 2,
                    "user_id": 119,
                    "group_id": 2,
                    "created_at": "2017-11-22T13:42:12.992Z",
                    "updated_at": "2017-11-22T13:42:12.992Z"
                  },
                  {
                    "id": 3,
                    "user_id": 44,
                    "group_id": 3,
                    "created_at": "2017-11-22T13:42:13.010Z",
                    "updated_at": "2017-11-22T13:42:13.010Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/groups_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/groups_users/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 4,
                  "user_id": 101,
                  "group_id": 4,
                  "created_at": "2017-11-22T13:42:13.028Z",
                  "updated_at": "2017-11-22T13:42:13.028Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/groups_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "groups_user",
                "full_name": "groups_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "group_id",
                    "full_name": "groups_user[group_id]",
                    "description": "The group id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "groups_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/groups_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "groups_user": { "group_id": "3", "user_id": "9" }
                },
                "response_data": {
                  "id": 5,
                  "user_id": 9,
                  "group_id": 3,
                  "created_at": "2017-11-22T13:43:41.210Z",
                  "updated_at": "2017-11-22T13:43:41.210Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/groups_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/groups_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "groups_user",
                "full_name": "groups_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "group_id",
                    "full_name": "groups_user[group_id]",
                    "description": "The group id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "groups_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/groups_users/4",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "groups_user": { "group_id": "1", "user_id": "97" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/groups_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/groups_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/groups_users/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "internships": {
        "doc_url": "/apidoc/2.0/internships",
        "api_url": "/api",
        "name": "Internships",
        "short_description": "The \u003ca href='#internships'\u003einternship\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/internships/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/internships",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/internships",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eadministration_id\u003c/code\u003e, \u003ccode\u003eoffer_id\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003edays\u003c/code\u003e, \u003ccode\u003euser_address\u003c/code\u003e, \u003ccode\u003euser_postal\u003c/code\u003e, \u003ccode\u003euser_city\u003c/code\u003e, \u003ccode\u003euser_country\u003c/code\u003e, \u003ccode\u003ecompany_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_first_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_last_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_email\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_phone\u003c/code\u003e, \u003ccode\u003ecompany_user_first_name\u003c/code\u003e, \u003ccode\u003ecompany_user_last_name\u003c/code\u003e, \u003ccode\u003ecompany_user_post\u003c/code\u003e, \u003ccode\u003ecompany_user_email\u003c/code\u003e, \u003ccode\u003ecompany_user_phone\u003c/code\u003e, \u003ccode\u003ecompany_address\u003c/code\u003e, \u003ccode\u003ecompany_postal\u003c/code\u003e, \u003ccode\u003ecompany_city\u003c/code\u003e, \u003ccode\u003ecompany_country\u003c/code\u003e, \u003ccode\u003ecompany_siret\u003c/code\u003e, \u003ccode\u003einternship_address\u003c/code\u003e, \u003ccode\u003einternship_postal\u003c/code\u003e, \u003ccode\u003einternship_city\u003c/code\u003e, \u003ccode\u003einternship_country\u003c/code\u003e, \u003ccode\u003econtract_type\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003estart_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003enb_days\u003c/code\u003e, \u003ccode\u003enb_hours\u003c/code\u003e, \u003ccode\u003emovement\u003c/code\u003e, \u003ccode\u003esalary\u003c/code\u003e, \u003ccode\u003ecurrency\u003c/code\u003e, \u003ccode\u003ebreach_at\u003c/code\u003e, \u003ccode\u003econvention\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eanti_grav_units_user_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "administration_id",
                      "offer_id",
                      "language_id",
                      "state",
                      "days",
                      "user_address",
                      "user_postal",
                      "user_city",
                      "user_country",
                      "company_name",
                      "company_boss_user_first_name",
                      "company_boss_user_last_name",
                      "company_boss_user_email",
                      "company_boss_user_phone",
                      "company_user_first_name",
                      "company_user_last_name",
                      "company_user_post",
                      "company_user_email",
                      "company_user_phone",
                      "company_address",
                      "company_postal",
                      "company_city",
                      "company_country",
                      "company_siret",
                      "internship_address",
                      "internship_postal",
                      "internship_city",
                      "internship_country",
                      "contract_type",
                      "subject",
                      "start_at",
                      "end_at",
                      "duration",
                      "nb_days",
                      "nb_hours",
                      "movement",
                      "salary",
                      "currency",
                      "breach_at",
                      "convention",
                      "created_at",
                      "updated_at",
                      "anti_grav_units_user_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eadministration_id\u003c/code\u003e, \u003ccode\u003eoffer_id\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003edays\u003c/code\u003e, \u003ccode\u003euser_address\u003c/code\u003e, \u003ccode\u003euser_postal\u003c/code\u003e, \u003ccode\u003euser_city\u003c/code\u003e, \u003ccode\u003euser_country\u003c/code\u003e, \u003ccode\u003ecompany_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_first_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_last_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_email\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_phone\u003c/code\u003e, \u003ccode\u003ecompany_user_first_name\u003c/code\u003e, \u003ccode\u003ecompany_user_last_name\u003c/code\u003e, \u003ccode\u003ecompany_user_post\u003c/code\u003e, \u003ccode\u003ecompany_user_email\u003c/code\u003e, \u003ccode\u003ecompany_user_phone\u003c/code\u003e, \u003ccode\u003ecompany_address\u003c/code\u003e, \u003ccode\u003ecompany_postal\u003c/code\u003e, \u003ccode\u003ecompany_city\u003c/code\u003e, \u003ccode\u003ecompany_country\u003c/code\u003e, \u003ccode\u003ecompany_siret\u003c/code\u003e, \u003ccode\u003einternship_address\u003c/code\u003e, \u003ccode\u003einternship_postal\u003c/code\u003e, \u003ccode\u003einternship_city\u003c/code\u003e, \u003ccode\u003einternship_country\u003c/code\u003e, \u003ccode\u003econtract_type\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003estart_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003enb_days\u003c/code\u003e, \u003ccode\u003enb_hours\u003c/code\u003e, \u003ccode\u003emovement\u003c/code\u003e, \u003ccode\u003esalary\u003c/code\u003e, \u003ccode\u003ecurrency\u003c/code\u003e, \u003ccode\u003ebreach_at\u003c/code\u003e, \u003ccode\u003econvention\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eanti_grav_units_user_id\u003c/code\u003e, \u003ccode\u003estart\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e, \u003ccode\u003ebreach\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "administration_id",
                      "offer_id",
                      "language_id",
                      "state",
                      "days",
                      "user_address",
                      "user_postal",
                      "user_city",
                      "user_country",
                      "company_name",
                      "company_boss_user_first_name",
                      "company_boss_user_last_name",
                      "company_boss_user_email",
                      "company_boss_user_phone",
                      "company_user_first_name",
                      "company_user_last_name",
                      "company_user_post",
                      "company_user_email",
                      "company_user_phone",
                      "company_address",
                      "company_postal",
                      "company_city",
                      "company_country",
                      "company_siret",
                      "internship_address",
                      "internship_postal",
                      "internship_city",
                      "internship_country",
                      "contract_type",
                      "subject",
                      "start_at",
                      "end_at",
                      "duration",
                      "nb_days",
                      "nb_hours",
                      "movement",
                      "salary",
                      "currency",
                      "breach_at",
                      "convention",
                      "created_at",
                      "updated_at",
                      "anti_grav_units_user_id",
                      "start",
                      "end",
                      "breach"
                    ],
                    "additional": {
                      "start": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only start internships"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end internships"
                      },
                      "breach": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only breach internships"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eadministration_id\u003c/code\u003e, \u003ccode\u003eoffer_id\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003estate\u003c/code\u003e, \u003ccode\u003edays\u003c/code\u003e, \u003ccode\u003euser_address\u003c/code\u003e, \u003ccode\u003euser_postal\u003c/code\u003e, \u003ccode\u003euser_city\u003c/code\u003e, \u003ccode\u003euser_country\u003c/code\u003e, \u003ccode\u003ecompany_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_first_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_last_name\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_email\u003c/code\u003e, \u003ccode\u003ecompany_boss_user_phone\u003c/code\u003e, \u003ccode\u003ecompany_user_first_name\u003c/code\u003e, \u003ccode\u003ecompany_user_last_name\u003c/code\u003e, \u003ccode\u003ecompany_user_post\u003c/code\u003e, \u003ccode\u003ecompany_user_email\u003c/code\u003e, \u003ccode\u003ecompany_user_phone\u003c/code\u003e, \u003ccode\u003ecompany_address\u003c/code\u003e, \u003ccode\u003ecompany_postal\u003c/code\u003e, \u003ccode\u003ecompany_city\u003c/code\u003e, \u003ccode\u003ecompany_country\u003c/code\u003e, \u003ccode\u003ecompany_siret\u003c/code\u003e, \u003ccode\u003einternship_address\u003c/code\u003e, \u003ccode\u003einternship_postal\u003c/code\u003e, \u003ccode\u003einternship_city\u003c/code\u003e, \u003ccode\u003einternship_country\u003c/code\u003e, \u003ccode\u003econtract_type\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003estart_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003enb_days\u003c/code\u003e, \u003ccode\u003enb_hours\u003c/code\u003e, \u003ccode\u003emovement\u003c/code\u003e, \u003ccode\u003esalary\u003c/code\u003e, \u003ccode\u003ecurrency\u003c/code\u003e, \u003ccode\u003ebreach_at\u003c/code\u003e, \u003ccode\u003econvention\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eanti_grav_units_user_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "administration_id",
                      "offer_id",
                      "language_id",
                      "state",
                      "days",
                      "user_address",
                      "user_postal",
                      "user_city",
                      "user_country",
                      "company_name",
                      "company_boss_user_first_name",
                      "company_boss_user_last_name",
                      "company_boss_user_email",
                      "company_boss_user_phone",
                      "company_user_first_name",
                      "company_user_last_name",
                      "company_user_post",
                      "company_user_email",
                      "company_user_phone",
                      "company_address",
                      "company_postal",
                      "company_city",
                      "company_country",
                      "company_siret",
                      "internship_address",
                      "internship_postal",
                      "internship_city",
                      "internship_country",
                      "contract_type",
                      "subject",
                      "start_at",
                      "end_at",
                      "duration",
                      "nb_days",
                      "nb_hours",
                      "movement",
                      "salary",
                      "currency",
                      "breach_at",
                      "convention",
                      "created_at",
                      "updated_at",
                      "anti_grav_units_user_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["companies_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/internships/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/internships",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "internship",
                "full_name": "internship",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "internship[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "administration_id",
                    "full_name": "internship[administration_id]",
                    "description": "The administration id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "offer_id",
                    "full_name": "internship[offer_id]",
                    "description": "The offer id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "internship[language_id]",
                    "description": "The language id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "state",
                    "full_name": "internship[state]",
                    "description": "The state.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003eneed_validation\u003c/code\u003e, \u003ccode\u003einvalidated\u003c/code\u003e, \u003ccode\u003egenerated\u003c/code\u003e, \u003ccode\u003euploaded\u003c/code\u003e, \u003ccode\u003eended\u003c/code\u003e, \u003ccode\u003ebroke\u003c/code\u003e, \u003ccode\u003ecanceled\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "days",
                    "full_name": "internship[days]",
                    "description": "The days.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_address",
                    "full_name": "internship[user_address]",
                    "description": "The user address.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_postal",
                    "full_name": "internship[user_postal]",
                    "description": "The user postal.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_city",
                    "full_name": "internship[user_city]",
                    "description": "The user city.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_country",
                    "full_name": "internship[user_country]",
                    "description": "The user country.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_name",
                    "full_name": "internship[company_name]",
                    "description": "The company name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_first_name",
                    "full_name": "internship[company_boss_user_first_name]",
                    "description": "The company boss user first name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_last_name",
                    "full_name": "internship[company_boss_user_last_name]",
                    "description": "The company boss user last name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_email",
                    "full_name": "internship[company_boss_user_email]",
                    "description": "The company boss user email.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_phone",
                    "full_name": "internship[company_boss_user_phone]",
                    "description": "The company boss user phone.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_first_name",
                    "full_name": "internship[company_user_first_name]",
                    "description": "The company user first name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_last_name",
                    "full_name": "internship[company_user_last_name]",
                    "description": "The company user last name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_post",
                    "full_name": "internship[company_user_post]",
                    "description": "The company user post.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_email",
                    "full_name": "internship[company_user_email]",
                    "description": "The company user email.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_phone",
                    "full_name": "internship[company_user_phone]",
                    "description": "The company user phone.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_address",
                    "full_name": "internship[company_address]",
                    "description": "The company address.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_postal",
                    "full_name": "internship[company_postal]",
                    "description": "The company postal.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_city",
                    "full_name": "internship[company_city]",
                    "description": "The company city.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_country",
                    "full_name": "internship[company_country]",
                    "description": "The company country.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_siret",
                    "full_name": "internship[company_siret]",
                    "description": "The company siret.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_address",
                    "full_name": "internship[internship_address]",
                    "description": "The internship address.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_postal",
                    "full_name": "internship[internship_postal]",
                    "description": "The internship postal.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_city",
                    "full_name": "internship[internship_city]",
                    "description": "The internship city.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_country",
                    "full_name": "internship[internship_country]",
                    "description": "The internship country.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contract_type",
                    "full_name": "internship[contract_type]",
                    "description": "The contract type.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003efreelance\u003c/code\u003e, \u003ccode\u003eapprentice_ship\u003c/code\u003e, \u003ccode\u003ecdd\u003c/code\u003e, \u003ccode\u003ecdi\u003c/code\u003e, \u003ccode\u003estage\u003c/code\u003e, \u003ccode\u003ecdd_partiel\u003c/code\u003e, \u003ccode\u003ecdi_partiel\u003c/code\u003e, \u003ccode\u003estage_partiel\u003c/code\u003e, \u003ccode\u003ecrea_startup\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subject",
                    "full_name": "internship[subject]",
                    "description": "The subject. Maximum length is 140. Allow blank length is true. Allow nil length is true.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "start_at",
                    "full_name": "internship[start_at]",
                    "description": "The start at…",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "internship[end_at]",
                    "description": "The end at.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "internship[duration]",
                    "description": "The duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nb_days",
                    "full_name": "internship[nb_days]",
                    "description": "The nb days.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nb_hours",
                    "full_name": "internship[nb_hours]",
                    "description": "The nb hours.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "movement",
                    "full_name": "internship[movement]",
                    "description": "The movement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "salary",
                    "full_name": "internship[salary]",
                    "description": "The salary.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "currency",
                    "full_name": "internship[currency]",
                    "description": "The currency.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eeur\u003c/code\u003e, \u003ccode\u003eaed\u003c/code\u003e, \u003ccode\u003edol\u003c/code\u003e, \u003ccode\u003echf\u003c/code\u003e, \u003ccode\u003erub\u003c/code\u003e, \u003ccode\u003ezar\u003c/code\u003e, \u003ccode\u003egbp\u003c/code\u003e, \u003ccode\u003eyen\u003c/code\u003e, \u003ccode\u003ecan\u003c/code\u003e, \u003ccode\u003emad\u003c/code\u003e, \u003ccode\u003ekrw\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "breach_at",
                    "full_name": "internship[breach_at]",
                    "description": "The breach at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "internship[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "anti_grav_units_user_id",
                    "full_name": "internship[anti_grav_units_user_id]",
                    "description": "The anti grav units user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/internships/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/internships/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/internships/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/internships/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/internships/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "internship",
                "full_name": "internship",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "internship[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "administration_id",
                    "full_name": "internship[administration_id]",
                    "description": "The administration id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "offer_id",
                    "full_name": "internship[offer_id]",
                    "description": "The offer id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "internship[language_id]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "state",
                    "full_name": "internship[state]",
                    "description": "The state.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003eneed_validation\u003c/code\u003e, \u003ccode\u003einvalidated\u003c/code\u003e, \u003ccode\u003egenerated\u003c/code\u003e, \u003ccode\u003euploaded\u003c/code\u003e, \u003ccode\u003eended\u003c/code\u003e, \u003ccode\u003ebroke\u003c/code\u003e, \u003ccode\u003ecanceled\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "days",
                    "full_name": "internship[days]",
                    "description": "The days.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_address",
                    "full_name": "internship[user_address]",
                    "description": "The user address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_postal",
                    "full_name": "internship[user_postal]",
                    "description": "The user postal.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_city",
                    "full_name": "internship[user_city]",
                    "description": "The user city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_country",
                    "full_name": "internship[user_country]",
                    "description": "The user country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_name",
                    "full_name": "internship[company_name]",
                    "description": "The company name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_first_name",
                    "full_name": "internship[company_boss_user_first_name]",
                    "description": "The company boss user first name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_last_name",
                    "full_name": "internship[company_boss_user_last_name]",
                    "description": "The company boss user last name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_email",
                    "full_name": "internship[company_boss_user_email]",
                    "description": "The company boss user email.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_phone",
                    "full_name": "internship[company_boss_user_phone]",
                    "description": "The company boss user phone.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_first_name",
                    "full_name": "internship[company_user_first_name]",
                    "description": "The company user first name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_last_name",
                    "full_name": "internship[company_user_last_name]",
                    "description": "The company user last name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_post",
                    "full_name": "internship[company_user_post]",
                    "description": "The company user post.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_email",
                    "full_name": "internship[company_user_email]",
                    "description": "The company user email.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_phone",
                    "full_name": "internship[company_user_phone]",
                    "description": "The company user phone.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_address",
                    "full_name": "internship[company_address]",
                    "description": "The company address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_postal",
                    "full_name": "internship[company_postal]",
                    "description": "The company postal.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_city",
                    "full_name": "internship[company_city]",
                    "description": "The company city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_country",
                    "full_name": "internship[company_country]",
                    "description": "The company country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_siret",
                    "full_name": "internship[company_siret]",
                    "description": "The company siret.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_address",
                    "full_name": "internship[internship_address]",
                    "description": "The internship address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_postal",
                    "full_name": "internship[internship_postal]",
                    "description": "The internship postal.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_city",
                    "full_name": "internship[internship_city]",
                    "description": "The internship city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_country",
                    "full_name": "internship[internship_country]",
                    "description": "The internship country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contract_type",
                    "full_name": "internship[contract_type]",
                    "description": "The contract type.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003efreelance\u003c/code\u003e, \u003ccode\u003eapprentice_ship\u003c/code\u003e, \u003ccode\u003ecdd\u003c/code\u003e, \u003ccode\u003ecdi\u003c/code\u003e, \u003ccode\u003estage\u003c/code\u003e, \u003ccode\u003ecdd_partiel\u003c/code\u003e, \u003ccode\u003ecdi_partiel\u003c/code\u003e, \u003ccode\u003estage_partiel\u003c/code\u003e, \u003ccode\u003ecrea_startup\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subject",
                    "full_name": "internship[subject]",
                    "description": "The subject. Maximum length is 140. Allow blank length is true. Allow nil length is true.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "start_at",
                    "full_name": "internship[start_at]",
                    "description": "The start at…",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "internship[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "internship[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nb_days",
                    "full_name": "internship[nb_days]",
                    "description": "The nb days.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nb_hours",
                    "full_name": "internship[nb_hours]",
                    "description": "The nb hours.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "movement",
                    "full_name": "internship[movement]",
                    "description": "The movement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "salary",
                    "full_name": "internship[salary]",
                    "description": "The salary.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "currency",
                    "full_name": "internship[currency]",
                    "description": "The currency.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eeur\u003c/code\u003e, \u003ccode\u003eaed\u003c/code\u003e, \u003ccode\u003edol\u003c/code\u003e, \u003ccode\u003echf\u003c/code\u003e, \u003ccode\u003erub\u003c/code\u003e, \u003ccode\u003ezar\u003c/code\u003e, \u003ccode\u003egbp\u003c/code\u003e, \u003ccode\u003eyen\u003c/code\u003e, \u003ccode\u003ecan\u003c/code\u003e, \u003ccode\u003emad\u003c/code\u003e, \u003ccode\u003ekrw\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "breach_at",
                    "full_name": "internship[breach_at]",
                    "description": "The breach at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "internship[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "anti_grav_units_user_id",
                    "full_name": "internship[anti_grav_units_user_id]",
                    "description": "The anti grav units user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/internships/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/internships/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/internships/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/internships/2350",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2350,
                  "administration_id": 1,
                  "offer_id": null,
                  "language_id": 1,
                  "state": "uploaded",
                  "days": "[\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\"]",
                  "user_address": "5 rue de la paix",
                  "user_postal": "75001",
                  "user_city": "Paris",
                  "user_country": "France",
                  "company_name": "Association 42",
                  "company_boss_user_first_name": "FirstName",
                  "company_boss_user_last_name": "LastName",
                  "company_boss_user_email": "boss@42.fr",
                  "company_boss_user_phone": "0123456789",
                  "company_user_first_name": "Quentin",
                  "company_user_last_name": "Bollache",
                  "company_user_post": "Responsable technique et pedagogique",
                  "company_user_email": "gargamel@42.fr",
                  "company_user_phone": "0123456789",
                  "company_address": "96 Boulevard Bessières",
                  "company_postal": "75017",
                  "company_city": "Paris",
                  "company_country": "France",
                  "company_siret": "0",
                  "internship_address": "96 Boulevard Bessières",
                  "internship_postal": "75017",
                  "internship_city": "Paris",
                  "internship_country": "France",
                  "contract_type": "stage",
                  "subject": "Développement de tous les sites web reliés à 42",
                  "start_at": "2017-07-31T22:00:00.000Z",
                  "end_at": "2018-01-30T23:00:00.000Z",
                  "duration": 6,
                  "nb_days": 5,
                  "nb_hours": 35,
                  "movement": null,
                  "salary": 50000,
                  "currency": "eur",
                  "breach_at": null,
                  "convention": {
                    "convention": {
                      "url": "/uploads/internship/convention/jgengo-9543c17018c04a7f99fd01bf62a478/2350/jgengo.zip"
                    }
                  },
                  "user": {
                    "id": 19265,
                    "login": "jgengo",
                    "url": "http://localhost:13000/v2/users/jgengo"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/internships/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/internships/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "internship",
                "full_name": "internship",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "internship[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "administration_id",
                    "full_name": "internship[administration_id]",
                    "description": "The administration id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "offer_id",
                    "full_name": "internship[offer_id]",
                    "description": "The offer id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "internship[language_id]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "state",
                    "full_name": "internship[state]",
                    "description": "The state.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003enone\u003c/code\u003e, \u003ccode\u003eneed_validation\u003c/code\u003e, \u003ccode\u003einvalidated\u003c/code\u003e, \u003ccode\u003egenerated\u003c/code\u003e, \u003ccode\u003euploaded\u003c/code\u003e, \u003ccode\u003eended\u003c/code\u003e, \u003ccode\u003ebroke\u003c/code\u003e, \u003ccode\u003ecanceled\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "days",
                    "full_name": "internship[days]",
                    "description": "The days.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_address",
                    "full_name": "internship[user_address]",
                    "description": "The user address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_postal",
                    "full_name": "internship[user_postal]",
                    "description": "The user postal.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_city",
                    "full_name": "internship[user_city]",
                    "description": "The user city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_country",
                    "full_name": "internship[user_country]",
                    "description": "The user country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_name",
                    "full_name": "internship[company_name]",
                    "description": "The company name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_first_name",
                    "full_name": "internship[company_boss_user_first_name]",
                    "description": "The company boss user first name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_last_name",
                    "full_name": "internship[company_boss_user_last_name]",
                    "description": "The company boss user last name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_email",
                    "full_name": "internship[company_boss_user_email]",
                    "description": "The company boss user email.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_boss_user_phone",
                    "full_name": "internship[company_boss_user_phone]",
                    "description": "The company boss user phone.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_first_name",
                    "full_name": "internship[company_user_first_name]",
                    "description": "The company user first name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_last_name",
                    "full_name": "internship[company_user_last_name]",
                    "description": "The company user last name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_post",
                    "full_name": "internship[company_user_post]",
                    "description": "The company user post.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_email",
                    "full_name": "internship[company_user_email]",
                    "description": "The company user email.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_user_phone",
                    "full_name": "internship[company_user_phone]",
                    "description": "The company user phone.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_address",
                    "full_name": "internship[company_address]",
                    "description": "The company address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_postal",
                    "full_name": "internship[company_postal]",
                    "description": "The company postal.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_city",
                    "full_name": "internship[company_city]",
                    "description": "The company city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_country",
                    "full_name": "internship[company_country]",
                    "description": "The company country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_siret",
                    "full_name": "internship[company_siret]",
                    "description": "The company siret.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_address",
                    "full_name": "internship[internship_address]",
                    "description": "The internship address.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_postal",
                    "full_name": "internship[internship_postal]",
                    "description": "The internship postal.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_city",
                    "full_name": "internship[internship_city]",
                    "description": "The internship city.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internship_country",
                    "full_name": "internship[internship_country]",
                    "description": "The internship country.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contract_type",
                    "full_name": "internship[contract_type]",
                    "description": "The contract type.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003efreelance\u003c/code\u003e, \u003ccode\u003eapprentice_ship\u003c/code\u003e, \u003ccode\u003ecdd\u003c/code\u003e, \u003ccode\u003ecdi\u003c/code\u003e, \u003ccode\u003estage\u003c/code\u003e, \u003ccode\u003ecdd_partiel\u003c/code\u003e, \u003ccode\u003ecdi_partiel\u003c/code\u003e, \u003ccode\u003estage_partiel\u003c/code\u003e, \u003ccode\u003ecrea_startup\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subject",
                    "full_name": "internship[subject]",
                    "description": "The subject. Maximum length is 140. Allow blank length is true. Allow nil length is true.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "start_at",
                    "full_name": "internship[start_at]",
                    "description": "The start at…",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "internship[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "internship[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nb_days",
                    "full_name": "internship[nb_days]",
                    "description": "The nb days.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "nb_hours",
                    "full_name": "internship[nb_hours]",
                    "description": "The nb hours.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "movement",
                    "full_name": "internship[movement]",
                    "description": "The movement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "salary",
                    "full_name": "internship[salary]",
                    "description": "The salary.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "currency",
                    "full_name": "internship[currency]",
                    "description": "The currency.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eeur\u003c/code\u003e, \u003ccode\u003eaed\u003c/code\u003e, \u003ccode\u003edol\u003c/code\u003e, \u003ccode\u003echf\u003c/code\u003e, \u003ccode\u003erub\u003c/code\u003e, \u003ccode\u003ezar\u003c/code\u003e, \u003ccode\u003egbp\u003c/code\u003e, \u003ccode\u003eyen\u003c/code\u003e, \u003ccode\u003ecan\u003c/code\u003e, \u003ccode\u003emad\u003c/code\u003e, \u003ccode\u003ekrw\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "breach_at",
                    "full_name": "internship[breach_at]",
                    "description": "The breach at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "convention",
                    "full_name": "internship[convention]",
                    "description": "The convention.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "anti_grav_units_user_id",
                    "full_name": "internship[anti_grav_units_user_id]",
                    "description": "The anti grav units user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "journals": {
        "doc_url": "/apidoc/2.0/journals",
        "api_url": "/api",
        "name": "Journals",
        "short_description": null,
        "full_description": null,
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/journals/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/campus/:campus_id/journals",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "begin_at",
                "full_name": "begin_at",
                "description": "begin_at must be before or equal to end_at, your date range must be 124 days maximum",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "end_at",
                "full_name": "end_at",
                "description": "end_at must be after or equal to begin_at, your date range must be 124 days maximum",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eitem_type\u003c/code\u003e, \u003ccode\u003eitem_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eevent_at\u003c/code\u003e, \u003ccode\u003ealumni\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "item_type",
                      "item_id",
                      "cursus_id",
                      "campus_id",
                      "reason",
                      "created_at",
                      "updated_at",
                      "event_at",
                      "alumni"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eitem_type\u003c/code\u003e, \u003ccode\u003eitem_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eevent_at\u003c/code\u003e, \u003ccode\u003ealumni\u003c/code\u003e, \u003ccode\u003eevent\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "item_type",
                      "item_id",
                      "cursus_id",
                      "campus_id",
                      "reason",
                      "created_at",
                      "updated_at",
                      "event_at",
                      "alumni",
                      "event"
                    ],
                    "additional": {
                      "event": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only event journals"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/campus/1/journals",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "begin_at": "2021-12-15",
                  "end_at": "2021-12-16"
                },
                "response_data": [
                  {
                    "id": 5276532,
                    "user_id": 69936,
                    "cursus_id": 9,
                    "campus_id": 1,
                    "item_type": "Internship",
                    "item_id": 11547,
                    "reason": "Currently doing internship",
                    "created_at": "2021-10-16T01:01:34.979Z",
                    "updated_at": "2021-10-16T01:01:34.979Z",
                    "event_at": "2021-10-15T01:01:31.450Z"
                  },
                  {
                    "id": 5178542,
                    "user_id": 69937,
                    "item_type": "User",
                    "item_id": 11547,
                    "cursus_id": 9,
                    "campus_id": 1,
                    "reason": "Used intranet",
                    "created_at": "2021-10-16T05:15:15.874Z",
                    "updated_at": "2021-10-16T05:15:15.874Z",
                    "event_at": "2021-10-15T05:14:13.644Z"
                  },
                  {
                    "id": 42424242,
                    "user_id": 69936,
                    "item_type": "ScaleTeam",
                    "item_id": 11547,
                    "cursus_id": 9,
                    "campus_id": 1,
                    "reason": "Was evaluated by someone",
                    "created_at": "2021-10-17T05:15:25.874Z",
                    "updated_at": "2021-10-17T05:15:25.874Z",
                    "event_at": "2021-10-16T05:02:45.644Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": null
      },
      "languages": {
        "doc_url": "/apidoc/2.0/languages",
        "api_url": "/api",
        "name": "Languages",
        "short_description": "The \u003ca href='#languages'\u003elanguage\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/languages/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/languages/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/languages",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/languages",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  { "id": 3, "name": "Romanian", "identifier": "ro" },
                  { "id": 2, "name": "English", "identifier": "en" },
                  { "id": 1, "name": "Français", "identifier": "fr" }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/languages/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/languages/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "name": "Romanian",
                  "identifier": "ro"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/languages",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "language",
                "full_name": "language",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "language[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "identifier",
                    "full_name": "language[identifier]",
                    "description": "The identifier.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/languages/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "language",
                "full_name": "language",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "language[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "identifier",
                    "full_name": "language[identifier]",
                    "description": "The identifier.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/languages/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "languages_users": {
        "doc_url": "/apidoc/2.0/languages_users",
        "api_url": "/api",
        "name": "Languages users",
        "short_description": "The \u003ca href='#languages'\u003elanguages\u003c/a\u003e of a \u003ca href='#users'\u003euser\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/languages_users/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/languages_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "language_id",
                      "user_id",
                      "position",
                      "created_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "language_id",
                      "user_id",
                      "position",
                      "created_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "language_id",
                      "user_id",
                      "position",
                      "created_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/languages_users/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 126 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/languages_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "language_id",
                      "user_id",
                      "position",
                      "created_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "language_id",
                      "user_id",
                      "position",
                      "created_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "language_id",
                      "user_id",
                      "position",
                      "created_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/languages_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 126,
                    "language_id": 3,
                    "user_id": 126,
                    "position": 1,
                    "created_at": "2017-11-22T13:41:20.168Z"
                  },
                  {
                    "id": 125,
                    "language_id": 2,
                    "user_id": 125,
                    "position": 1,
                    "created_at": "2017-11-22T13:41:20.041Z"
                  },
                  {
                    "id": 124,
                    "language_id": 3,
                    "user_id": 124,
                    "position": 1,
                    "created_at": "2017-11-22T13:41:19.915Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/languages_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/languages_users/70",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 70,
                  "language_id": 2,
                  "user_id": 70,
                  "position": 1,
                  "created_at": "2017-11-22T13:41:12.367Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/languages_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "languages_user",
                "full_name": "languages_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "language_id",
                    "full_name": "languages_user[language_id]",
                    "description": "The language id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "languages_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given language.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "position",
                    "full_name": "languages_user[position]",
                    "description": "The position.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/languages_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "languages_user": {
                    "language_id": "3",
                    "position": "1",
                    "user_id": "7"
                  }
                },
                "response_data": {
                  "id": 127,
                  "language_id": 3,
                  "user_id": 7,
                  "position": 1,
                  "created_at": "2017-11-22T13:43:42.355Z"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/languages_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/languages_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "languages_user",
                "full_name": "languages_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "language_id",
                    "full_name": "languages_user[language_id]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "languages_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given language.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "position",
                    "full_name": "languages_user[position]",
                    "description": "The position.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/languages_users/70",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "languages_user": {
                    "language_id": "3",
                    "position": "1",
                    "user_id": "7"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/languages_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/languages_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/languages_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/languages_users/70",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "levels": {
        "doc_url": "/apidoc/2.0/levels",
        "api_url": "/api",
        "name": "Levels",
        "short_description": "A level indicator for a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/levels/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/levels",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/levels",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elvl\u003c/code\u003e, \u003ccode\u003exp\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": ["id", "lvl", "xp", "cursus_id", "created_at"]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elvl\u003c/code\u003e, \u003ccode\u003exp\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": ["id", "lvl", "xp", "cursus_id", "created_at"],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elvl\u003c/code\u003e, \u003ccode\u003exp\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": ["id", "lvl", "xp", "cursus_id", "created_at"],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "locations": {
        "doc_url": "/apidoc/2.0/locations",
        "api_url": "/api",
        "name": "Locations",
        "short_description": "The location of an user in a \u003ca href='#campus'\u003ecampus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/locations/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/locations/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ebegin_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ebegin_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eprimary\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "end_at",
                      "primary",
                      "host",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eprimary\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003einactive\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "end_at",
                      "primary",
                      "host",
                      "campus_id",
                      "active",
                      "inactive",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "active": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Keep only active locations"
                      },
                      "inactive": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Keep only inactive locations"
                      },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only locations which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end locations"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eprimary\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "end_at",
                      "primary",
                      "host",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/locations/graph/on/begin_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "2017-11-13": 1,
                  "2017-11-14": 1,
                  "2017-11-15": 1,
                  "2017-11-16": 1,
                  "2017-11-17": 1,
                  "2017-11-18": 2,
                  "2017-11-19": 2,
                  "2017-11-20": 2,
                  "2017-11-21": 2,
                  "2017-11-22": 2
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/locations/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/locations",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/locations",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/locations",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eprimary\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "end_at",
                      "primary",
                      "host",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eprimary\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eactive\u003c/code\u003e, \u003ccode\u003einactive\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "end_at",
                      "primary",
                      "host",
                      "campus_id",
                      "active",
                      "inactive",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "active": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Keep only active locations"
                      },
                      "inactive": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Keep only inactive locations"
                      },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only locations which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end locations"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003eprimary\u003c/code\u003e, \u003ccode\u003ehost\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "end_at",
                      "primary",
                      "host",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/locations",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 6,
                    "begin_at": "2017-11-22T13:42:10.248Z",
                    "end_at": "2017-11-22T13:42:10.248Z",
                    "primary": true,
                    "floor": null,
                    "row": null,
                    "post": null,
                    "host": "ariel",
                    "campus_id": 1,
                    "user": {
                      "id": 120,
                      "login": "obkenobi",
                      "url": "https://api.intra.42.fr/v2/users/obkenobi"
                    }
                  },
                  {
                    "id": 1,
                    "begin_at": "2017-11-22T13:42:09.406Z",
                    "end_at": "2017-11-22T13:42:09.406Z",
                    "primary": true,
                    "floor": null,
                    "row": null,
                    "post": null,
                    "host": "puck",
                    "campus_id": 1,
                    "user": {
                      "id": 73,
                      "login": "padmamid",
                      "url": "https://api.intra.42.fr/v2/users/padmamid"
                    }
                  },
                  {
                    "id": 7,
                    "begin_at": "2017-11-21T13:42:10.737Z",
                    "end_at": "2017-11-21T14:42:10.737Z",
                    "primary": true,
                    "floor": null,
                    "row": null,
                    "post": null,
                    "host": "ganymede",
                    "campus_id": 1,
                    "user": {
                      "id": 53,
                      "login": "dvader",
                      "url": "https://api.intra.42.fr/v2/users/dvader"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/locations/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/locations/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/locations/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 4,
                  "begin_at": "2017-11-19T13:42:09.511Z",
                  "end_at": "2017-11-19T16:42:09.511Z",
                  "primary": true,
                  "floor": null,
                  "row": null,
                  "post": null,
                  "host": "oberon",
                  "campus_id": 1,
                  "user": {
                    "id": 59,
                    "login": "davader",
                    "url": "https://api.intra.42.fr/v2/users/davader"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/locations/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/locations",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/locations",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "location",
                "full_name": "location",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "location[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "location[begin_at]",
                    "description": "The begin at. If not set default value is the current date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "location[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "primary",
                    "full_name": "location[primary]",
                    "description": "Is it primary?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "host",
                    "full_name": "location[host]",
                    "description": "The host. Must be unique in the scope of a given campus_id and end_at.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "location[campus_id]",
                    "description": "The campus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/locations",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "location": {
                    "begin_at": "2017-11-22 11:43:10 UTC",
                    "campus_id": "2",
                    "host": "burrito",
                    "user_id": "56"
                  }
                },
                "response_data": {
                  "id": 16,
                  "begin_at": "2017-11-22T11:43:10.000Z",
                  "end_at": null,
                  "primary": true,
                  "floor": null,
                  "row": null,
                  "post": null,
                  "host": "burrito",
                  "campus_id": 2,
                  "user": {
                    "id": 56,
                    "login": "pdameron",
                    "url": "https://api.intra.42.fr/v2/users/pdameron"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/locations/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/locations/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/locations/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/locations/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/locations/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "location",
                "full_name": "location",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "location[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "location[begin_at]",
                    "description": "The begin at. .",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "location[end_at]",
                    "description": "The end at. .",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "primary",
                    "full_name": "location[primary]",
                    "description": "Is it primary ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "host",
                    "full_name": "location[host]",
                    "description": "The host. Must be unique in the scope of a given campus id and end at.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "location[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/locations/4",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "location": {
                    "begin_at": "2017-11-22 11:43:10 UTC",
                    "campus_id": "1",
                    "host": "burrito",
                    "user_id": "49"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/locations/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/locations/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/locations/4",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/locations/end_all",
            "name": "end_all",
            "apis": [
              {
                "api_url": "/v2/campus/:campus_id/locations/end_all",
                "http_method": "DELETE",
                "short_description": "End all locations.",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Will end all locations of a given campus.",
            "errors": [],
            "params": [
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "mailings": {
        "doc_url": "/apidoc/2.0/mailings",
        "api_url": "/api",
        "name": "Mailings",
        "short_description": "Mails from and between 42 entities",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/mailings/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/mailings",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/mailings",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003emeta\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003esubtitle\u003c/code\u003e, \u003ccode\u003eattachment\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003eto\u003c/code\u003e, \u003ccode\u003ecc\u003c/code\u003e, \u003ccode\u003ebcc\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003ehtml_content\u003c/code\u003e, \u003ccode\u003eattachments\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "subject",
                      "created_at",
                      "updated_at",
                      "identifier",
                      "meta",
                      "title",
                      "subtitle",
                      "attachment",
                      "from",
                      "to",
                      "cc",
                      "bcc",
                      "content",
                      "html_content",
                      "attachments"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003emeta\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003esubtitle\u003c/code\u003e, \u003ccode\u003eattachment\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003eto\u003c/code\u003e, \u003ccode\u003ecc\u003c/code\u003e, \u003ccode\u003ebcc\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003ehtml_content\u003c/code\u003e, \u003ccode\u003eattachments\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "subject",
                      "created_at",
                      "updated_at",
                      "identifier",
                      "meta",
                      "title",
                      "subtitle",
                      "attachment",
                      "from",
                      "to",
                      "cc",
                      "bcc",
                      "content",
                      "html_content",
                      "attachments"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eidentifier\u003c/code\u003e, \u003ccode\u003emeta\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003esubtitle\u003c/code\u003e, \u003ccode\u003eattachment\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003eto\u003c/code\u003e, \u003ccode\u003ecc\u003c/code\u003e, \u003ccode\u003ebcc\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003ehtml_content\u003c/code\u003e, \u003ccode\u003eattachments\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "subject",
                      "created_at",
                      "updated_at",
                      "identifier",
                      "meta",
                      "title",
                      "subtitle",
                      "attachment",
                      "from",
                      "to",
                      "cc",
                      "bcc",
                      "content",
                      "html_content",
                      "attachments"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/mailings",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1725549,
                    "subject": "Evaluation imminent",
                    "created_at": "2016-04-28T12:30:10.116Z",
                    "updated_at": "2016-04-28T12:30:10.116Z",
                    "identifier": "imminent_correction_correctors",
                    "meta": {
                      "id": 268129,
                      "date": "2016-04-28T14:45:00+02:00",
                      "name": "Defense for ft_ls",
                      "user": "Romain Baran",
                      "other_user": "thifranc"
                    },
                    "title": "Evaluation imminent",
                    "subtitle": null,
                    "attachment": null,
                    "from": "noreply@42.fr",
                    "to": ["rbaran@student.42.fr"],
                    "cc": [],
                    "bcc": [],
                    "content": "Hi,\nYou will review thifranc's code in 15 minutes!",
                    "html_content": "\u003cp\u003eHi,\nYou will review thifranc\u0026#39;s code in 15 minutes!",
                    "attachments": null
                  },
                  {
                    "id": 1725550,
                    "subject": "Evaluation imminent",
                    "created_at": "2016-04-28T12:30:11.252Z",
                    "updated_at": "2016-04-28T12:30:11.252Z",
                    "identifier": "imminent_correction_correcteds",
                    "meta": {
                      "id": 268140,
                      "date": "2016-04-28T14:45:00+02:00",
                      "name": "Defense for ft_traceroute",
                      "user": "Jean Alexandre Bert",
                      "other_user": "pnoyelle"
                    },
                    "title": "Evaluation imminent",
                    "subtitle": null,
                    "attachment": null,
                    "from": "noreply@42.fr",
                    "to": ["jbert@student.42.fr"],
                    "cc": [],
                    "bcc": [],
                    "content": "Hi,\nYour code will be reviewed by pnoyelle in 15 minutes!",
                    "html_content": "\u003cp\u003eHi,\nYour code will be reviewed by pnoyelle in 15 minutes!",
                    "attachments": null
                  },
                  {
                    "id": 1725551,
                    "subject": "Evaluation imminent",
                    "created_at": "2016-04-28T12:30:11.292Z",
                    "updated_at": "2016-04-28T12:30:11.292Z",
                    "identifier": "imminent_correction_correctors",
                    "meta": {
                      "id": 268140,
                      "date": "2016-04-28T14:45:00+02:00",
                      "name": "Defense for ft_traceroute",
                      "user": "Pierre Noyelle",
                      "other_user": "jbert"
                    },
                    "title": "Evaluation imminent",
                    "subtitle": null,
                    "attachment": null,
                    "from": "noreply@42.fr",
                    "to": ["pnoyelle@student.42.fr"],
                    "cc": [],
                    "bcc": [],
                    "content": "Hi,\nYou will review jbert's code in 15 minutes!",
                    "html_content": "\u003cp\u003eHi,\nYou will review jbert\u0026#39;s code in 15 minutes!",
                    "attachments": null
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_staff", "advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/mailings/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/mailings/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/mailings/42",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 42,
                  "subject": "Evaluation imminent",
                  "created_at": "2016-04-28T12:30:10.116Z",
                  "updated_at": "2016-04-28T12:30:10.116Z",
                  "identifier": "imminent_correction_correctors",
                  "meta": {
                    "id": 268129,
                    "date": "2016-04-28T14:45:00+02:00",
                    "name": "Defense for ft_ls",
                    "user": "Romain Baran",
                    "other_user": "thifranc"
                  },
                  "title": "Evaluation imminent",
                  "subtitle": null,
                  "attachment": null,
                  "from": "noreply@42.fr",
                  "to": ["rbaran@student.42.fr"],
                  "cc": [],
                  "bcc": [],
                  "content": "Hi,\nYou will review thifranc's code in 15 minutes!",
                  "html_content": "\u003cp\u003eHi,\nYou will review thifranc\u0026#39;s code in 15 minutes!",
                  "attachments": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              },
              {
                "verb": "GET",
                "path": "/v2/mailings/7",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 7,
                  "subject": "Judge me by my size, do you?",
                  "created_at": "2017-11-22T13:42:11.054Z",
                  "updated_at": "2017-11-22T13:42:11.054Z",
                  "identifier": "spec-mail",
                  "meta": {},
                  "title": "I'll copy the wireless AGP pixel, that should interface the RSS application!",
                  "subtitle": null,
                  "attachment": null,
                  "from": "kenton@schmeler.co",
                  "to": ["bohutt2@student.42.fr"],
                  "cc": [],
                  "bcc": [],
                  "content": "Banh mi mixtape distillery gentrify post-ironic pour-over. Deep v fixie hella selfies irony direct trade paleo migas. Mumblecore kitsch hella selvage bicycle rights green juice. Keffiyeh salvia wolf vhs umami 90's. Cred lumbersexual chia hoodie pbr\u0026b.\nSlow-carb sustainable cliche. Squid ennui kombucha yuccie biodiesel. Vhs cliche deep v mustache jean shorts trust fund fashion axe. Keffiyeh squid pbr\u0026b fixie selvage.\nRoof blue bottle stumptown godard drinking yuccie. Craft beer artisan bushwick kale chips selvage. Kickstarter ethical asymmetrical franzen brooklyn etsy.",
                  "html_content": "\u003cp\u003eBanh mi mixtape distillery gentrify post-ironic pour-over. Deep v fixie hella selfies irony direct trade paleo migas. Mumblecore kitsch hella selvage bicycle rights green juice. Keffiyeh salvia wolf vhs umami 90\u0026#39;s. Cred lumbersexual chia hoodie pbr\u0026amp;b.\nSlow-carb sustainable cliche. Squid ennui kombucha yuccie biodiesel. Vhs cliche deep v mustache jean shorts trust fund fashion axe. Keffiyeh squid pbr\u0026amp;b fixie selvage.\nRoof blue bottle stumptown godard drinking yuccie. Craft beer artisan bushwick kale chips selvage. Kickstarter ethical asymmetrical franzen brooklyn etsy.",
                  "attachments": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/mailings/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/mailings",
                "http_method": "POST",
                "short_description": "Create a new mail",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Create a new, authenticated mail, from 42.",
            "errors": [],
            "params": [
              {
                "name": "mailing",
                "full_name": "mailing",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "subject",
                    "full_name": "mailing[subject]",
                    "description": "The subject of the mail",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content",
                    "full_name": "mailing[content]",
                    "description": "The content of the mail, supports Markdown.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "from",
                    "full_name": "mailing[from]",
                    "description": "The mail sender, with the \u003ccode\u003esender \u0026lt;sender@email\u0026gt;\u003c/code\u003e format. If none, set from \u003ccode\u003eno-reply@42.fr\u003c/code\u003e",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "to",
                    "full_name": "mailing[to]",
                    "description": "An array of emails for the mail’s \u003ccode\u003eto\u003c/code\u003e field",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cc",
                    "full_name": "mailing[cc]",
                    "description": "An array of emails for the mail’s \u003ccode\u003ecc\u003c/code\u003e field",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "bcc",
                    "full_name": "mailing[bcc]",
                    "description": "An array of emails for the mail’s \u003ccode\u003ebcc\u003c/code\u003e field",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title",
                    "full_name": "mailing[title]",
                    "description": "The title of the mail. If none, set to the subject",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subtitle",
                    "full_name": "mailing[subtitle]",
                    "description": "The subtitle of the mail",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "identifier",
                    "full_name": "mailing[identifier]",
                    "description": "The identifier of the mail, used with meta",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "meta",
                    "full_name": "mailing[meta]",
                    "description": "The meta of the mail",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Hash",
                    "expected_type": "hash",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "at",
                "full_name": "at",
                "description": "The time to send the mail. If none, send it now.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be DateTime",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/mailings",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "mailing": {
                    "content": "Hi andre,\nYou just *won* the mego jackpot !\nCheck [this link](http://spam.prizepool-game-lottery.xxx/winner.php)",
                    "from": "superwin-ultimate-@prizepool-game-lottery.sexy",
                    "identifier": "an_unique_identifier",
                    "subject": "You are the super online contest winner !!!",
                    "subtitle": "And it's kinda awesome",
                    "title": "You won the big jackpot",
                    "to": ["andre@42.fr"]
                  }
                },
                "response_data": {
                  "id": 11,
                  "subject": "You are the super online contest winner !!!",
                  "created_at": "2017-11-22T13:43:44.207Z",
                  "updated_at": "2017-11-22T13:43:44.207Z",
                  "identifier": "an_unique_identifier",
                  "meta": {},
                  "title": "You won the big jackpot",
                  "subtitle": "And it's kinda awesome",
                  "attachment": null,
                  "from": "superwin-ultimate-@prizepool-game-lottery.sexy",
                  "to": ["andre@42.fr"],
                  "cc": null,
                  "bcc": null,
                  "content": "Hi andre,\nYou just *won* the mego jackpot !\nCheck [this link](http://spam.prizepool-game-lottery.xxx/winner.php)",
                  "html_content": "\u003cp\u003eHi andre,\nYou just \u003cem\u003ewon\u003c/em\u003e the mego jackpot !\nCheck \u003ca href=\"http://spam.prizepool-game-lottery.xxx/winner.php\"\u003ethis link\u003c/a\u003e",
                  "attachments": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "avanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/mailings/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/mailings/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/mailings/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "mailing",
                "full_name": "mailing",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "subject",
                    "full_name": "mailing[subject]",
                    "description": "The subject of the mail",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content",
                    "full_name": "mailing[content]",
                    "description": "The content of the mail, supports Markdown.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "from",
                    "full_name": "mailing[from]",
                    "description": "The mail sender, with the \u003ccode\u003esender \u0026lt;sender@email\u0026gt;\u003c/code\u003e format. If none, set from \u003ccode\u003eno-reply@42.fr\u003c/code\u003e",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "to",
                    "full_name": "mailing[to]",
                    "description": "An array of emails for the mail’s \u003ccode\u003eto\u003c/code\u003e field",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cc",
                    "full_name": "mailing[cc]",
                    "description": "An array of emails for the mail’s \u003ccode\u003ecc\u003c/code\u003e field",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "bcc",
                    "full_name": "mailing[bcc]",
                    "description": "An array of emails for the mail’s \u003ccode\u003ebcc\u003c/code\u003e field",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "title",
                    "full_name": "mailing[title]",
                    "description": "The title of the mail. If none, set to the subject",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subtitle",
                    "full_name": "mailing[subtitle]",
                    "description": "The subtitle of the mail",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "identifier",
                    "full_name": "mailing[identifier]",
                    "description": "The identifier of the mail, used with meta",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "meta",
                    "full_name": "mailing[meta]",
                    "description": "The meta of the mail",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Hash",
                    "expected_type": "hash",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              },
              {
                "name": "at",
                "full_name": "at",
                "description": "The time to send the mail. If none, send it now.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be DateTime",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/mailings/7",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "mailing": {
                    "content": "Hi andre,\nYou just *won* the mego jackpot !\nCheck [this link](http://spam.prizepool-game-lottery.xxx/winner.php)",
                    "from": "superwin-ultimate-@prizepool-game-lottery.sexy",
                    "identifier": "an_unique_identifier",
                    "subject": "You are the super online contest winner !!!",
                    "subtitle": "And it's kinda awesome",
                    "title": "You won the big jackpot",
                    "to": ["andre@42.fr"]
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/mailings/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/mailings/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/mailings/7",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "notes": {
        "doc_url": "/apidoc/2.0/notes",
        "api_url": "/api",
        "name": "Notes",
        "short_description": "A note for an \u003ca href='#users'\u003euser\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/notes/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/notes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/notes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/notes",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eapproved_at\u003c/code\u003e, \u003ccode\u003eapprover_id\u003c/code\u003e, \u003ccode\u003efrom_user_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "from",
                      "subject",
                      "content",
                      "created_at",
                      "updated_at",
                      "kind",
                      "approved_at",
                      "approver_id",
                      "from_user_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eapproved_at\u003c/code\u003e, \u003ccode\u003eapprover_id\u003c/code\u003e, \u003ccode\u003efrom_user_id\u003c/code\u003e, \u003ccode\u003eapproved\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "from",
                      "subject",
                      "content",
                      "created_at",
                      "updated_at",
                      "kind",
                      "approved_at",
                      "approver_id",
                      "from_user_id",
                      "approved"
                    ],
                    "additional": {
                      "approved": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only approved notes"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003efrom\u003c/code\u003e, \u003ccode\u003esubject\u003c/code\u003e, \u003ccode\u003econtent\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eapproved_at\u003c/code\u003e, \u003ccode\u003eapprover_id\u003c/code\u003e, \u003ccode\u003efrom_user_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "from",
                      "subject",
                      "content",
                      "created_at",
                      "updated_at",
                      "kind",
                      "approved_at",
                      "approver_id",
                      "from_user_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/notes",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "from_user": {
                      "id": 74,
                      "login": "andre",
                      "url": "https://api.intra.42.fr/v2/users/andre"
                    },
                    "subject": "Chevelure abondante",
                    "content": "Mathieu n'aime pas se faire appeler princesse ♥️",
                    "created_at": "2016-04-27T07:26:38.254Z",
                    "user": {
                      "id": 22,
                      "login": "mathieu",
                      "url": "https://api.intra.42.fr/v2/users/mathieu"
                    }
                  },
                  {
                    "id": 2,
                    "from_user": {
                      "id": 22,
                      "login": "mathieu",
                      "url": "https://api.intra.42.fr/v2/users/mathieu"
                    },
                    "subject": "Amour caché",
                    "content": "Est secretement amoureux de flav️",
                    "created_at": "2016-04-27T07:26:38.254Z",
                    "user": {
                      "id": 74,
                      "login": "andre",
                      "url": "https://api.intra.42.fr/v2/users/andre"
                    }
                  },
                  {
                    "id": 3,
                    "from_user": {
                      "id": 22,
                      "login": "mathieu",
                      "url": "https://api.intra.42.fr/v2/users/mathieu"
                    },
                    "subject": "Amour caché (2)",
                    "content": "Est secretement amoureux de andré",
                    "created_at": "2016-04-27T07:26:38.254Z",
                    "user": {
                      "id": 10935,
                      "login": "fguilloc",
                      "url": "https://api.intra.42.fr/v2/users/fguilloc"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["notes_manager", "advanced_notes_manager"],
              "authentication": "user"
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notes/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/notes/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/notes/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "from_user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "subject": "Chevelure abondante",
                  "content": "Mathieu n'aime pas se faire apeller princesse ♥️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              },
              {
                "verb": "GET",
                "path": "/v2/notes/9",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 9,
                  "from_user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "subject": "We need to back up the haptic XSS feed!",
                  "content": "You know, that little droid is going to cause me a lot of trouble.",
                  "created_at": "2017-11-22T13:42:11.225Z",
                  "user": {
                    "id": 116,
                    "login": "mwindu2",
                    "url": "https://api.intra.42.fr/v2/users/mwindu2"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "roles": ["notes_manager", "advanced_notes_manager"],
              "authentication": "user"
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notes/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/notes",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "note",
                "full_name": "note",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "note[user_id]",
                    "description": "The user who receives the note.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subject",
                    "full_name": "note[subject]",
                    "description": "The subject.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content",
                    "full_name": "note[content]",
                    "description": "The content.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "note[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003emanual\u003c/code\u003e, \u003ccode\u003eblack_hole\u003c/code\u003e, \u003ccode\u003eschool_record\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "approved_at",
                    "full_name": "note[approved_at]",
                    "description": "Must be an Advanced Note manager to create or edit this field.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "approver_id",
                    "full_name": "note[approver_id]",
                    "description": "The id of the user approving the note. Must be an Advanced Note manager to create or edit this field.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/notes",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "note": {
                    "content": "gentrify roof beard keffiyeh squid franzen cold-pressed farm-to-table retro fingerstache hoodie health",
                    "subject": "quinoa",
                    "user_id": "10"
                  }
                },
                "response_data": {
                  "id": 11,
                  "from_user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "subject": "quinoa",
                  "content": "gentrify roof beard keffiyeh squid franzen cold-pressed farm-to-table retro fingerstache hoodie health",
                  "created_at": "2017-11-22T13:43:47.322Z",
                  "user": {
                    "id": 10,
                    "login": "ssebulba",
                    "url": "https://api.intra.42.fr/v2/users/ssebulba"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "roles": ["notes_manager", "advanced_notes_manager"],
              "authentication": "user"
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notes/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/notes/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/notes/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "note",
                "full_name": "note",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "note[user_id]",
                    "description": "The user who receives the note.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subject",
                    "full_name": "note[subject]",
                    "description": "The subject.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "content",
                    "full_name": "note[content]",
                    "description": "The content.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "note[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003emanual\u003c/code\u003e, \u003ccode\u003eblack_hole\u003c/code\u003e, \u003ccode\u003eschool_record\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "approved_at",
                    "full_name": "note[approved_at]",
                    "description": "Must be an Advanced Note manager to create or edit this field.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "approver_id",
                    "full_name": "note[approver_id]",
                    "description": "The id of the user approving the note. Must be an Advanced Note manager to create or edit this field.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/notes/9",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "note": {
                    "content": "waistcoat sartorial cornhole dreamcatcher pop-up scenester cleanse hammock shoreditch pug iPhone freegan",
                    "subject": "swag",
                    "user_id": "109"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "roles": ["notes_manager", "advanced_notes_manager"],
              "authentication": "user"
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notes/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/notes/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/notes/9",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "roles": ["notes_manager", "advanced_notes_manager"],
              "authentication": "user"
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "notions": {
        "doc_url": "/apidoc/2.0/notions",
        "api_url": "/api",
        "name": "Notions",
        "short_description": "The elearning notion in a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/notions/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus/:cursus_id/notions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/tags/:tag_id/notions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/notions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "tag_id",
                "full_name": "tag_id",
                "description": "The tag id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": ["id", "name", "created_at", "updated_at", "slug"]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": ["id", "name", "created_at", "updated_at", "slug"],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": ["id", "name", "created_at", "updated_at", "slug"],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/notions",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 10,
                    "name": "Piscine OCaml - D08 - Object oriented programming 2/2",
                    "slug": "piscine-ocaml-d08-object-oriented-programming-2-2",
                    "created_at": "2017-11-22T13:41:24.091Z",
                    "subnotions": [],
                    "tags": [{ "id": 6, "name": "Jour 13", "kind": "project" }],
                    "cursus": [
                      {
                        "id": 2,
                        "created_at": "2017-11-22T13:41:00.825Z",
                        "name": "42",
                        "slug": "42"
                      }
                    ]
                  },
                  {
                    "id": 9,
                    "name": "Piscine Unity - D07 - GUI 3D, navmesh and raycasting",
                    "slug": "piscine-unity-d07-gui-3d-navmesh-and-raycasting",
                    "created_at": "2017-11-22T13:41:24.053Z",
                    "subnotions": [],
                    "tags": [{ "id": 7, "name": "Bocal", "kind": "general" }],
                    "cursus": [
                      {
                        "id": 2,
                        "created_at": "2017-11-22T13:41:00.825Z",
                        "name": "42",
                        "slug": "42"
                      }
                    ]
                  },
                  {
                    "id": 8,
                    "name": "Piscine OCaml - D05 - Imperative traits",
                    "slug": "piscine-ocaml-d05-imperative-traits",
                    "created_at": "2017-11-22T13:41:24.021Z",
                    "subnotions": [],
                    "tags": [{ "id": 7, "name": "Bocal", "kind": "general" }],
                    "cursus": [
                      {
                        "id": 1,
                        "created_at": "2017-11-22T13:41:00.750Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notions/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/notions/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/notions/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "name": "Piscine OCaml - D01 - MOAR functions",
                  "slug": "piscine-ocaml-d01-moar-functions",
                  "created_at": "2017-11-22T13:41:23.822Z",
                  "subnotions": [],
                  "tags": [{ "id": 3, "name": "GBmu", "kind": "project" }],
                  "cursus": [
                    {
                      "id": 2,
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "name": "42",
                      "slug": "42"
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notions/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/notions",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "notion",
                "full_name": "notion",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "notion[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tag_ids",
                    "full_name": "notion[tag_ids]",
                    "description": "The tag ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "notion[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subnotions_attributes",
                    "full_name": "notion[subnotions_attributes]",
                    "description": "The subnotions attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "notion[subnotions_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "name",
                        "full_name": "notion[subnotions_attributes][name]",
                        "description": "The name. Must be unique in the scope of a given notion.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "notion[subnotions_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachments_attributes",
                        "full_name": "notion[subnotions_attributes][attachments_attributes]",
                        "description": "The attachments attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": [
                          {
                            "name": "id",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][id]",
                            "description": "The id.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "kind",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][kind]",
                            "description": "The kind.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "_destroy",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][_destroy]",
                            "description": "The destroy.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "language_id",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][language_id]",
                            "description": "The language id.",
                            "required": true,
                            "allow_nil": false,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "untranslatable",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][untranslatable]",
                            "description": "Is it untranslatable ? Default to false.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "attachable_attributes",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][attachable_attributes]",
                            "description": "The attachable attributes.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be an Array of nested elements",
                            "expected_type": "array",
                            "metadata": null,
                            "show": true,
                            "validations": [],
                            "params": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/notions",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "notion": {
                    "cursus_ids": ["2"],
                    "name": "Metafiction",
                    "subnotions_attributes": [{ "name": "Postern of Fate" }],
                    "tag_ids": ["2", "3", "6"]
                  }
                },
                "response_data": {
                  "id": 11,
                  "name": "Metafiction",
                  "slug": "metafiction",
                  "created_at": "2017-11-22T13:43:48.180Z",
                  "subnotions": [
                    {
                      "id": 11,
                      "name": "Postern of Fate",
                      "slug": "postern-of-fate",
                      "created_at": "2017-11-22T13:43:48.192Z",
                      "notepad": null
                    }
                  ],
                  "tags": [
                    {
                      "id": 2,
                      "name": "Friends with Benefits",
                      "kind": "project"
                    },
                    { "id": 3, "name": "GBmu", "kind": "project" },
                    { "id": 6, "name": "Jour 13", "kind": "project" }
                  ],
                  "cursus": [
                    {
                      "id": 2,
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "name": "42",
                      "slug": "42"
                    }
                  ]
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "video_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notions/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/notions/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/notions/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "notion",
                "full_name": "notion",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "notion[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tag_ids",
                    "full_name": "notion[tag_ids]",
                    "description": "The tag ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "notion[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "subnotions_attributes",
                    "full_name": "notion[subnotions_attributes]",
                    "description": "The subnotions attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "notion[subnotions_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "name",
                        "full_name": "notion[subnotions_attributes][name]",
                        "description": "The name. Must be unique in the scope of a given notion.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "notion[subnotions_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachments_attributes",
                        "full_name": "notion[subnotions_attributes][attachments_attributes]",
                        "description": "The attachments attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": [
                          {
                            "name": "id",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][id]",
                            "description": "The id.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "kind",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][kind]",
                            "description": "The kind.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "_destroy",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][_destroy]",
                            "description": "The destroy.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "language_id",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][language_id]",
                            "description": "The language id.",
                            "required": false,
                            "allow_nil": false,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "untranslatable",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][untranslatable]",
                            "description": "Is it untranslatable ? Default to false.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "attachable_attributes",
                            "full_name": "notion[subnotions_attributes][attachments_attributes][attachable_attributes]",
                            "description": "The attachable attributes.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be an Array of nested elements",
                            "expected_type": "array",
                            "metadata": null,
                            "show": true,
                            "validations": [],
                            "params": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/notions/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "notion": {
                    "cursus_ids": ["2"],
                    "name": "Metafiction",
                    "subnotions_attributes": [{ "name": "The Millstone" }],
                    "tag_ids": ["1", "11", "10"]
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "video_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/notions/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/notions/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/notions/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "video_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "offers": {
        "doc_url": "/apidoc/2.0/offers",
        "api_url": "/api",
        "name": "Offers",
        "short_description": "Offers from companies website",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/offers/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/offers",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003elittle_description\u003c/code\u003e, \u003ccode\u003ebig_description\u003c/code\u003e, \u003ccode\u003esalary\u003c/code\u003e, \u003ccode\u003econtract_type\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003elatitude\u003c/code\u003e, \u003ccode\u003elongitude\u003c/code\u003e, \u003ccode\u003evalid_at\u003c/code\u003e, \u003ccode\u003einvalid_at\u003c/code\u003e, \u003ccode\u003emin_duration\u003c/code\u003e, \u003ccode\u003emax_duration\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epro_id\u003c/code\u003e, \u003ccode\u003ecompany_id\u003c/code\u003e, \u003ccode\u003etarget\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "title",
                      "little_description",
                      "big_description",
                      "salary",
                      "contract_type",
                      "email",
                      "address",
                      "city",
                      "zip",
                      "country",
                      "latitude",
                      "longitude",
                      "valid_at",
                      "invalid_at",
                      "min_duration",
                      "max_duration",
                      "document",
                      "slug",
                      "created_at",
                      "updated_at",
                      "pro_id",
                      "company_id",
                      "target"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003elittle_description\u003c/code\u003e, \u003ccode\u003ebig_description\u003c/code\u003e, \u003ccode\u003esalary\u003c/code\u003e, \u003ccode\u003econtract_type\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003eaddress\u003c/code\u003e, \u003ccode\u003ecity\u003c/code\u003e, \u003ccode\u003ezip\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003elatitude\u003c/code\u003e, \u003ccode\u003elongitude\u003c/code\u003e, \u003ccode\u003evalid_at\u003c/code\u003e, \u003ccode\u003einvalid_at\u003c/code\u003e, \u003ccode\u003emin_duration\u003c/code\u003e, \u003ccode\u003emax_duration\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epro_id\u003c/code\u003e, \u003ccode\u003ecompany_id\u003c/code\u003e, \u003ccode\u003etarget\u003c/code\u003e, \u003ccode\u003econtract_type\u003c/code\u003e, \u003ccode\u003etarget\u003c/code\u003e, \u003ccode\u003eexpertise_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003eexpertise\u003c/code\u003e, \u003ccode\u003ereported\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003evalid\u003c/code\u003e, \u003ccode\u003einvalid\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "title",
                      "little_description",
                      "big_description",
                      "salary",
                      "contract_type",
                      "email",
                      "address",
                      "city",
                      "zip",
                      "country",
                      "latitude",
                      "longitude",
                      "valid_at",
                      "invalid_at",
                      "min_duration",
                      "max_duration",
                      "document",
                      "slug",
                      "created_at",
                      "updated_at",
                      "pro_id",
                      "company_id",
                      "target",
                      "contract_type",
                      "target",
                      "expertise_id",
                      "campus_id",
                      "country",
                      "expertise",
                      "reported",
                      "user_id",
                      "valid",
                      "invalid"
                    ],
                    "additional": {
                      "contract_type": {
                        "proc": {},
                        "all": [],
                        "description": "Filter by contract type"
                      },
                      "target": {
                        "proc": {},
                        "all": [],
                        "description": "Filter by target"
                      },
                      "expertise_id": {
                        "proc": {},
                        "all": [],
                        "description": "Filter by expertise id"
                      },
                      "campus_id": {
                        "proc": {},
                        "all": [],
                        "description": "Filter by campus_id"
                      },
                      "country": {
                        "proc": {},
                        "all": [],
                        "description": "Filter by campus id"
                      },
                      "expertise": {
                        "proc": {},
                        "all": [],
                        "description": "Filter by expertise name"
                      },
                      "reported": {
                        "proc": {},
                        "all": [],
                        "description": "Shows only reported offers"
                      },
                      "user_id": {
                        "proc": {},
                        "all": [],
                        "description": "Show offers which a specific user susbcribe to"
                      },
                      "valid": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only valid offers"
                      },
                      "invalid": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only invalid offers"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/offers/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/offers/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/offers/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/offers",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "offer",
                "full_name": "offer",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "title",
                    "full_name": "offer[title]",
                    "description": "The title. Maximum length is 255.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "little_description",
                    "full_name": "offer[little_description]",
                    "description": "The little description. Maximum length is 140. Allow blank length is true. Allow nil length is true.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "big_description",
                    "full_name": "offer[big_description]",
                    "description": "The big description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "salary",
                    "full_name": "offer[salary]",
                    "description": "The salary. Maximum length is 255. Allow blank length is true. Allow nil length is true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contract_type",
                    "full_name": "offer[contract_type]",
                    "description": "The contract type.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003efreelance\u003c/code\u003e, \u003ccode\u003eapprentice_ship\u003c/code\u003e, \u003ccode\u003ecdd\u003c/code\u003e, \u003ccode\u003ecdi\u003c/code\u003e, \u003ccode\u003estage\u003c/code\u003e, \u003ccode\u003ecdd_partiel\u003c/code\u003e, \u003ccode\u003ecdi_partiel\u003c/code\u003e, \u003ccode\u003estage_partiel\u003c/code\u003e, \u003ccode\u003ecrea_startup\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email",
                    "full_name": "offer[email]",
                    "description": "The email.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "address",
                    "full_name": "offer[address]",
                    "description": "The address.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "city",
                    "full_name": "offer[city]",
                    "description": "The city.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip",
                    "full_name": "offer[zip]",
                    "description": "The zip.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "offer[country]",
                    "description": "The country.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eAfghanistan\u003c/code\u003e, \u003ccode\u003eÅland Islands\u003c/code\u003e, \u003ccode\u003eAlbania\u003c/code\u003e, \u003ccode\u003eAlgeria\u003c/code\u003e, \u003ccode\u003eAmerican Samoa\u003c/code\u003e, \u003ccode\u003eAndorra\u003c/code\u003e, \u003ccode\u003eAngola\u003c/code\u003e, \u003ccode\u003eAnguilla\u003c/code\u003e, \u003ccode\u003eAntarctica\u003c/code\u003e, \u003ccode\u003eAntigua and Barbuda\u003c/code\u003e, \u003ccode\u003eArgentina\u003c/code\u003e, \u003ccode\u003eArmenia\u003c/code\u003e, \u003ccode\u003eAruba\u003c/code\u003e, \u003ccode\u003eAustralia\u003c/code\u003e, \u003ccode\u003eAustria\u003c/code\u003e, \u003ccode\u003eAzerbaijan\u003c/code\u003e, \u003ccode\u003eBahamas\u003c/code\u003e, \u003ccode\u003eBahrain\u003c/code\u003e, \u003ccode\u003eBangladesh\u003c/code\u003e, \u003ccode\u003eBarbados\u003c/code\u003e, \u003ccode\u003eBelarus\u003c/code\u003e, \u003ccode\u003eBelgium\u003c/code\u003e, \u003ccode\u003eBelize\u003c/code\u003e, \u003ccode\u003eBenin\u003c/code\u003e, \u003ccode\u003eBermuda\u003c/code\u003e, \u003ccode\u003eBhutan\u003c/code\u003e, \u003ccode\u003eBolivia, Plurinational State of\u003c/code\u003e, \u003ccode\u003eBonaire, Sint Eustatius and Saba\u003c/code\u003e, \u003ccode\u003eBosnia and Herzegovina\u003c/code\u003e, \u003ccode\u003eBotswana\u003c/code\u003e, \u003ccode\u003eBouvet Island\u003c/code\u003e, \u003ccode\u003eBrazil\u003c/code\u003e, \u003ccode\u003eBritish Indian Ocean Territory\u003c/code\u003e, \u003ccode\u003eBrunei Darussalam\u003c/code\u003e, \u003ccode\u003eBulgaria\u003c/code\u003e, \u003ccode\u003eBurkina Faso\u003c/code\u003e, \u003ccode\u003eBurundi\u003c/code\u003e, \u003ccode\u003eCambodia\u003c/code\u003e, \u003ccode\u003eCameroon\u003c/code\u003e, \u003ccode\u003eCanada\u003c/code\u003e, \u003ccode\u003eCape Verde\u003c/code\u003e, \u003ccode\u003eCayman Islands\u003c/code\u003e, \u003ccode\u003eCentral African Republic\u003c/code\u003e, \u003ccode\u003eChad\u003c/code\u003e, \u003ccode\u003eChile\u003c/code\u003e, \u003ccode\u003eChina\u003c/code\u003e, \u003ccode\u003eChristmas Island\u003c/code\u003e, \u003ccode\u003eCocos (Keeling) Islands\u003c/code\u003e, \u003ccode\u003eColombia\u003c/code\u003e, \u003ccode\u003eComoros\u003c/code\u003e, \u003ccode\u003eCongo\u003c/code\u003e, \u003ccode\u003eCongo, The Democratic Republic of the\u003c/code\u003e, \u003ccode\u003eCook Islands\u003c/code\u003e, \u003ccode\u003eCosta Rica\u003c/code\u003e, \u003ccode\u003eCôte d'Ivoire\u003c/code\u003e, \u003ccode\u003eCroatia\u003c/code\u003e, \u003ccode\u003eCuba\u003c/code\u003e, \u003ccode\u003eCuraçao\u003c/code\u003e, \u003ccode\u003eCyprus\u003c/code\u003e, \u003ccode\u003eCzech Republic\u003c/code\u003e, \u003ccode\u003eDenmark\u003c/code\u003e, \u003ccode\u003eDjibouti\u003c/code\u003e, \u003ccode\u003eDominica\u003c/code\u003e, \u003ccode\u003eDominican Republic\u003c/code\u003e, \u003ccode\u003eEcuador\u003c/code\u003e, \u003ccode\u003eEgypt\u003c/code\u003e, \u003ccode\u003eEl Salvador\u003c/code\u003e, \u003ccode\u003eEquatorial Guinea\u003c/code\u003e, \u003ccode\u003eEritrea\u003c/code\u003e, \u003ccode\u003eEstonia\u003c/code\u003e, \u003ccode\u003eEthiopia\u003c/code\u003e, \u003ccode\u003eFalkland Islands (Malvinas)\u003c/code\u003e, \u003ccode\u003eFaroe Islands\u003c/code\u003e, \u003ccode\u003eFiji\u003c/code\u003e, \u003ccode\u003eFinland\u003c/code\u003e, \u003ccode\u003eFrance\u003c/code\u003e, \u003ccode\u003eFrench Guiana\u003c/code\u003e, \u003ccode\u003eFrench Polynesia\u003c/code\u003e, \u003ccode\u003eFrench Southern Territories\u003c/code\u003e, \u003ccode\u003eGabon\u003c/code\u003e, \u003ccode\u003eGambia\u003c/code\u003e, \u003ccode\u003eGeorgia\u003c/code\u003e, \u003ccode\u003eGermany\u003c/code\u003e, \u003ccode\u003eGhana\u003c/code\u003e, \u003ccode\u003eGibraltar\u003c/code\u003e, \u003ccode\u003eGreece\u003c/code\u003e, \u003ccode\u003eGreenland\u003c/code\u003e, \u003ccode\u003eGrenada\u003c/code\u003e, \u003ccode\u003eGuadeloupe\u003c/code\u003e, \u003ccode\u003eGuam\u003c/code\u003e, \u003ccode\u003eGuatemala\u003c/code\u003e, \u003ccode\u003eGuernsey\u003c/code\u003e, \u003ccode\u003eGuinea\u003c/code\u003e, \u003ccode\u003eGuinea-Bissau\u003c/code\u003e, \u003ccode\u003eGuyana\u003c/code\u003e, \u003ccode\u003eHaiti\u003c/code\u003e, \u003ccode\u003eHeard Island and McDonald Islands\u003c/code\u003e, \u003ccode\u003eHoly See (Vatican City State)\u003c/code\u003e, \u003ccode\u003eHonduras\u003c/code\u003e, \u003ccode\u003eHong Kong\u003c/code\u003e, \u003ccode\u003eHungary\u003c/code\u003e, \u003ccode\u003eIceland\u003c/code\u003e, \u003ccode\u003eIndia\u003c/code\u003e, \u003ccode\u003eIndonesia\u003c/code\u003e, \u003ccode\u003eIran, Islamic Republic of\u003c/code\u003e, \u003ccode\u003eIraq\u003c/code\u003e, \u003ccode\u003eIreland\u003c/code\u003e, \u003ccode\u003eIsle of Man\u003c/code\u003e, \u003ccode\u003eIsrael\u003c/code\u003e, \u003ccode\u003eItaly\u003c/code\u003e, \u003ccode\u003eJamaica\u003c/code\u003e, \u003ccode\u003eJapan\u003c/code\u003e, \u003ccode\u003eJersey\u003c/code\u003e, \u003ccode\u003eJordan\u003c/code\u003e, \u003ccode\u003eKazakhstan\u003c/code\u003e, \u003ccode\u003eKenya\u003c/code\u003e, \u003ccode\u003eKiribati\u003c/code\u003e, \u003ccode\u003eKorea, Democratic People's Republic of\u003c/code\u003e, \u003ccode\u003eKorea, Republic of\u003c/code\u003e, \u003ccode\u003eKuwait\u003c/code\u003e, \u003ccode\u003eKyrgyzstan\u003c/code\u003e, \u003ccode\u003eLao People's Democratic Republic\u003c/code\u003e, \u003ccode\u003eLatvia\u003c/code\u003e, \u003ccode\u003eLebanon\u003c/code\u003e, \u003ccode\u003eLesotho\u003c/code\u003e, \u003ccode\u003eLiberia\u003c/code\u003e, \u003ccode\u003eLibya\u003c/code\u003e, \u003ccode\u003eLiechtenstein\u003c/code\u003e, \u003ccode\u003eLithuania\u003c/code\u003e, \u003ccode\u003eLuxembourg\u003c/code\u003e, \u003ccode\u003eMacao\u003c/code\u003e, \u003ccode\u003eMacedonia, Republic of\u003c/code\u003e, \u003ccode\u003eMadagascar\u003c/code\u003e, \u003ccode\u003eMalawi\u003c/code\u003e, \u003ccode\u003eMalaysia\u003c/code\u003e, \u003ccode\u003eMaldives\u003c/code\u003e, \u003ccode\u003eMali\u003c/code\u003e, \u003ccode\u003eMalta\u003c/code\u003e, \u003ccode\u003eMarshall Islands\u003c/code\u003e, \u003ccode\u003eMartinique\u003c/code\u003e, \u003ccode\u003eMauritania\u003c/code\u003e, \u003ccode\u003eMauritius\u003c/code\u003e, \u003ccode\u003eMayotte\u003c/code\u003e, \u003ccode\u003eMexico\u003c/code\u003e, \u003ccode\u003eMicronesia, Federated States of\u003c/code\u003e, \u003ccode\u003eMoldova, Republic of\u003c/code\u003e, \u003ccode\u003eMonaco\u003c/code\u003e, \u003ccode\u003eMongolia\u003c/code\u003e, \u003ccode\u003eMontenegro\u003c/code\u003e, \u003ccode\u003eMontserrat\u003c/code\u003e, \u003ccode\u003eMorocco\u003c/code\u003e, \u003ccode\u003eMozambique\u003c/code\u003e, \u003ccode\u003eMyanmar\u003c/code\u003e, \u003ccode\u003eNamibia\u003c/code\u003e, \u003ccode\u003eNauru\u003c/code\u003e, \u003ccode\u003eNepal\u003c/code\u003e, \u003ccode\u003eNetherlands\u003c/code\u003e, \u003ccode\u003eNew Caledonia\u003c/code\u003e, \u003ccode\u003eNew Zealand\u003c/code\u003e, \u003ccode\u003eNicaragua\u003c/code\u003e, \u003ccode\u003eNiger\u003c/code\u003e, \u003ccode\u003eNigeria\u003c/code\u003e, \u003ccode\u003eNiue\u003c/code\u003e, \u003ccode\u003eNorfolk Island\u003c/code\u003e, \u003ccode\u003eNorthern Mariana Islands\u003c/code\u003e, \u003ccode\u003eNorway\u003c/code\u003e, \u003ccode\u003eOman\u003c/code\u003e, \u003ccode\u003ePakistan\u003c/code\u003e, \u003ccode\u003ePalau\u003c/code\u003e, \u003ccode\u003ePalestine, State of\u003c/code\u003e, \u003ccode\u003ePanama\u003c/code\u003e, \u003ccode\u003ePapua New Guinea\u003c/code\u003e, \u003ccode\u003eParaguay\u003c/code\u003e, \u003ccode\u003ePeru\u003c/code\u003e, \u003ccode\u003ePhilippines\u003c/code\u003e, \u003ccode\u003ePitcairn\u003c/code\u003e, \u003ccode\u003ePoland\u003c/code\u003e, \u003ccode\u003ePortugal\u003c/code\u003e, \u003ccode\u003ePuerto Rico\u003c/code\u003e, \u003ccode\u003eQatar\u003c/code\u003e, \u003ccode\u003eRéunion\u003c/code\u003e, \u003ccode\u003eRomania\u003c/code\u003e, \u003ccode\u003eRussian Federation\u003c/code\u003e, \u003ccode\u003eRwanda\u003c/code\u003e, \u003ccode\u003eSaint Barthélemy\u003c/code\u003e, \u003ccode\u003eSaint Helena, Ascension and Tristan da Cunha\u003c/code\u003e, \u003ccode\u003eSaint Kitts and Nevis\u003c/code\u003e, \u003ccode\u003eSaint Lucia\u003c/code\u003e, \u003ccode\u003eSaint Martin (French part)\u003c/code\u003e, \u003ccode\u003eSaint Pierre and Miquelon\u003c/code\u003e, \u003ccode\u003eSaint Vincent and the Grenadines\u003c/code\u003e, \u003ccode\u003eSamoa\u003c/code\u003e, \u003ccode\u003eSan Marino\u003c/code\u003e, \u003ccode\u003eSao Tome and Principe\u003c/code\u003e, \u003ccode\u003eSaudi Arabia\u003c/code\u003e, \u003ccode\u003eSenegal\u003c/code\u003e, \u003ccode\u003eSerbia\u003c/code\u003e, \u003ccode\u003eSeychelles\u003c/code\u003e, \u003ccode\u003eSierra Leone\u003c/code\u003e, \u003ccode\u003eSingapore\u003c/code\u003e, \u003ccode\u003eSint Maarten (Dutch part)\u003c/code\u003e, \u003ccode\u003eSlovakia\u003c/code\u003e, \u003ccode\u003eSlovenia\u003c/code\u003e, \u003ccode\u003eSolomon Islands\u003c/code\u003e, \u003ccode\u003eSomalia\u003c/code\u003e, \u003ccode\u003eSouth Africa\u003c/code\u003e, \u003ccode\u003eSouth Georgia and the South Sandwich Islands\u003c/code\u003e, \u003ccode\u003eSpain\u003c/code\u003e, \u003ccode\u003eSri Lanka\u003c/code\u003e, \u003ccode\u003eSudan\u003c/code\u003e, \u003ccode\u003eSuriname\u003c/code\u003e, \u003ccode\u003eSouth Sudan\u003c/code\u003e, \u003ccode\u003eSvalbard and Jan Mayen\u003c/code\u003e, \u003ccode\u003eSwaziland\u003c/code\u003e, \u003ccode\u003eSweden\u003c/code\u003e, \u003ccode\u003eSwitzerland\u003c/code\u003e, \u003ccode\u003eSyrian Arab Republic\u003c/code\u003e, \u003ccode\u003eTaiwan\u003c/code\u003e, \u003ccode\u003eTajikistan\u003c/code\u003e, \u003ccode\u003eTanzania, United Republic of\u003c/code\u003e, \u003ccode\u003eThailand\u003c/code\u003e, \u003ccode\u003eTimor-Leste\u003c/code\u003e, \u003ccode\u003eTogo\u003c/code\u003e, \u003ccode\u003eTokelau\u003c/code\u003e, \u003ccode\u003eTonga\u003c/code\u003e, \u003ccode\u003eTrinidad and Tobago\u003c/code\u003e, \u003ccode\u003eTunisia\u003c/code\u003e, \u003ccode\u003eTurkey\u003c/code\u003e, \u003ccode\u003eTurkmenistan\u003c/code\u003e, \u003ccode\u003eTurks and Caicos Islands\u003c/code\u003e, \u003ccode\u003eTuvalu\u003c/code\u003e, \u003ccode\u003eUganda\u003c/code\u003e, \u003ccode\u003eUkraine\u003c/code\u003e, \u003ccode\u003eUnited Arab Emirates\u003c/code\u003e, \u003ccode\u003eUnited Kingdom\u003c/code\u003e, \u003ccode\u003eUnited States\u003c/code\u003e, \u003ccode\u003eUnited States Minor Outlying Islands\u003c/code\u003e, \u003ccode\u003eUruguay\u003c/code\u003e, \u003ccode\u003eUzbekistan\u003c/code\u003e, \u003ccode\u003eVanuatu\u003c/code\u003e, \u003ccode\u003eVenezuela, Bolivarian Republic of\u003c/code\u003e, \u003ccode\u003eViet Nam\u003c/code\u003e, \u003ccode\u003eVirgin Islands, British\u003c/code\u003e, \u003ccode\u003eVirgin Islands, U.S.\u003c/code\u003e, \u003ccode\u003eWallis and Futuna\u003c/code\u003e, \u003ccode\u003eWestern Sahara\u003c/code\u003e, \u003ccode\u003eYemen\u003c/code\u003e, \u003ccode\u003eZambia\u003c/code\u003e, \u003ccode\u003eZimbabwe\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "latitude",
                    "full_name": "offer[latitude]",
                    "description": "The latitude.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Float",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "longitude",
                    "full_name": "offer[longitude]",
                    "description": "The longitude.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Float",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "valid_at",
                    "full_name": "offer[valid_at]",
                    "description": "The valid at. .",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "invalid_at",
                    "full_name": "offer[invalid_at]",
                    "description": "The invalid at. Must be after the ‘valid at’ date.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "min_duration",
                    "full_name": "offer[min_duration]",
                    "description": "The min duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_duration",
                    "full_name": "offer[max_duration]",
                    "description": "The max duration.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "document",
                    "full_name": "offer[document]",
                    "description": "The document.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "offer[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pro_id",
                    "full_name": "offer[pro_id]",
                    "description": "The pro id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "company_id",
                    "full_name": "offer[company_id]",
                    "description": "The company id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "target",
                    "full_name": "offer[target]",
                    "description": "The target.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003estudent_and_alumni\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "offers_users": {
        "doc_url": "/apidoc/2.0/offers_users",
        "api_url": "/api",
        "name": "Offers users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e who have subscribed to an \u003ca href='#title'\u003eoffer\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/offers_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/offers/:offer_id/offers_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/offers_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/offers_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "offer_id",
                "full_name": "offer_id",
                "description": "The offer id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eoffer_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "offer_id",
                      "user_id",
                      "validated_at",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eoffer_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "offer_id",
                      "user_id",
                      "validated_at",
                      "created_at",
                      "updated_at",
                      "validated"
                    ],
                    "additional": {
                      "validated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only validated offers users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["companies_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/offers_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/offers_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["companies_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "params_project_sessions_rules": {
        "doc_url": "/apidoc/2.0/params_project_sessions_rules",
        "api_url": "/api",
        "name": "Params project sessions rules",
        "short_description": "The value of a parameter for a \u003ca href='#project_sessions_rules'\u003eproject sessions rule\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/params_project_sessions_rules/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_sessions_rules/:project_sessions_rule_id/params_project_sessions_rules",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/params_project_sessions_rules",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_sessions_rule_id",
                "full_name": "project_sessions_rule_id",
                "description": "The project_sessions_rule id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eparam_id\u003c/code\u003e, \u003ccode\u003eproject_sessions_rule_id\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "param_id",
                      "project_sessions_rule_id",
                      "value",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eparam_id\u003c/code\u003e, \u003ccode\u003eproject_sessions_rule_id\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "param_id",
                      "project_sessions_rule_id",
                      "value",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eparam_id\u003c/code\u003e, \u003ccode\u003eproject_sessions_rule_id\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "param_id",
                      "project_sessions_rule_id",
                      "value",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/params_project_sessions_rules/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/params_project_sessions_rules/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/params_project_sessions_rules/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/project_sessions_rules/:project_sessions_rule_id/params_project_sessions_rules",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/params_project_sessions_rules",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_sessions_rule_id",
                "full_name": "project_sessions_rule_id",
                "description": "The project_sessions_rule id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "params_project_sessions_rule",
                "full_name": "params_project_sessions_rule",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "params_project_sessions_rule[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "param_id",
                    "full_name": "params_project_sessions_rule[param_id]",
                    "description": "The param id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "value",
                    "full_name": "params_project_sessions_rule[value]",
                    "description": "The value.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_sessions_rule_id",
                    "full_name": "params_project_sessions_rule[project_sessions_rule_id]",
                    "description": "The project sessions rule id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/params_project_sessions_rules/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/params_project_sessions_rules/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/params_project_sessions_rules/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "params_project_sessions_rule",
                "full_name": "params_project_sessions_rule",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "params_project_sessions_rule[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "param_id",
                    "full_name": "params_project_sessions_rule[param_id]",
                    "description": "The param id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "value",
                    "full_name": "params_project_sessions_rule[value]",
                    "description": "The value.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_sessions_rule_id",
                    "full_name": "params_project_sessions_rule[project_sessions_rule_id]",
                    "description": "The project sessions rule id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/params_project_sessions_rules/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/params_project_sessions_rules/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "partnerships": {
        "doc_url": "/apidoc/2.0/partnerships",
        "api_url": "/api",
        "name": "Partnerships",
        "short_description": "Pedagogic partnerships",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/partnerships/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/partnerships",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003efile\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "difficulty",
                      "created_at",
                      "updated_at",
                      "slug",
                      "file",
                      "cursus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003efile\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003etier\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "difficulty",
                      "created_at",
                      "updated_at",
                      "slug",
                      "file",
                      "cursus_id",
                      "tier",
                      "difficulty"
                    ],
                    "additional": {
                      "tier": {
                        "proc": {},
                        "all": [0, 1, 2, 3, 4, 5, 6, 7],
                        "description": "Filter on a project's tier"
                      },
                      "difficulty": {
                        "proc": {},
                        "all": [0, 1, 2, 3, 4, 5, 6, 7],
                        "description": "Filter on a project's tier"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003efile\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "difficulty",
                      "created_at",
                      "updated_at",
                      "slug",
                      "file",
                      "cursus_id",
                      "difficulty"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/partnerships",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Strosin-Kiehn",
                    "slug": "strosin-kiehn",
                    "tier": 1,
                    "url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn",
                    "partnerships_users_url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn/partnerships_users"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/partnerships/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/partnerships/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "name": "Strosin-Kiehn",
                  "slug": "strosin-kiehn",
                  "tier": 1,
                  "url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn",
                  "partnerships_users_url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn/partnerships_users"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/partnerships",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "partnership",
                "full_name": "partnership",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "partnership[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "partnership[description]",
                    "description": "The description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "difficulty",
                    "full_name": "partnership[difficulty]",
                    "description": "The difficulty.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "file",
                    "full_name": "partnership[file]",
                    "description": "The file.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "partnership[cursus_id]",
                    "description": "The cursus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_ids",
                    "full_name": "partnership[user_ids]",
                    "description": "The user ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "partnerships_skills_attributes",
                    "full_name": "partnership[partnerships_skills_attributes]",
                    "description": "The partnerships skills attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "partnership[partnerships_skills_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "skill_id",
                        "full_name": "partnership[partnerships_skills_attributes][skill_id]",
                        "description": "The skill id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "partnership[partnerships_skills_attributes][value]",
                        "description": "The value.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Float",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "partnership[partnerships_skills_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/partnerships",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "partnership": {
                    "cursus_id": "2",
                    "description": "indexing the hard drive won't do anything, we need to parse the solid state PNG application!",
                    "difficulty": "100",
                    "name": "Western Arkansas College",
                    "partnerships_skills_attributes": [
                      { "skill_id": "2", "value": "100.0" }
                    ]
                  }
                },
                "response_data": {
                  "id": 2,
                  "name": "Western Arkansas College",
                  "slug": "western-arkansas-college",
                  "tier": 1,
                  "url": "https://api.intra.42.fr/v2/partnerships/western-arkansas-college",
                  "partnerships_users_url": "https://api.intra.42.fr/v2/partnerships/western-arkansas-college/partnerships_users"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["student_tutor", "advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/partnerships/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/partnerships/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "partnership",
                "full_name": "partnership",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "partnership[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "partnership[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "difficulty",
                    "full_name": "partnership[difficulty]",
                    "description": "The difficulty.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "file",
                    "full_name": "partnership[file]",
                    "description": "The file.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "partnership[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_ids",
                    "full_name": "partnership[user_ids]",
                    "description": "The user ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "partnerships_skills_attributes",
                    "full_name": "partnership[partnerships_skills_attributes]",
                    "description": "The partnerships skills attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "partnership[partnerships_skills_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "skill_id",
                        "full_name": "partnership[partnerships_skills_attributes][skill_id]",
                        "description": "The skill id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "partnership[partnerships_skills_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Float",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "partnership[partnerships_skills_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/partnerships/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "partnership": {
                    "description": "indexing the hard drive won't do anything, we need to parse the solid state PNG application!",
                    "name": "Western Arkansas College"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["student_tutor", "advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/partnerships/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/partnerships/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["student_tutor", "advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "partnerships_users": {
        "doc_url": "/apidoc/2.0/partnerships_users",
        "api_url": "/api",
        "name": "Partnerships users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e doing a \u003ca href='#partnerships'\u003epartnership\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/partnerships_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/partnerships/:partnership_id/partnerships_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/partnerships_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "partnership_id",
                "full_name": "partnership_id",
                "description": "The partnership id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003epartnership_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "partnership_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "final_mark"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003epartnership_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "partnership_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "final_mark"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003epartnership_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "partnership_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "final_mark"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/partnerships_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 5,
                    "partnership_id": 1,
                    "final_mark": null,
                    "user": {
                      "id": 77,
                      "login": "bofett",
                      "url": "https://api.intra.42.fr/v2/users/bofett"
                    }
                  },
                  {
                    "id": 4,
                    "partnership_id": 1,
                    "final_mark": null,
                    "user": {
                      "id": 12,
                      "login": "kiki-adi",
                      "url": "https://api.intra.42.fr/v2/users/kiki-adi"
                    }
                  },
                  {
                    "id": 3,
                    "partnership_id": 1,
                    "final_mark": null,
                    "user": {
                      "id": 14,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/partnerships_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/partnerships_users/5",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 5,
                  "partnership_id": 1,
                  "final_mark": null,
                  "user": {
                    "id": 77,
                    "login": "bofett",
                    "url": "https://api.intra.42.fr/v2/users/bofett"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/partnerships/:partnership_id/partnerships_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/partnerships_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "partnership_id",
                "full_name": "partnership_id",
                "description": "The partnership id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "partnerships_user",
                "full_name": "partnerships_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "partnership_id",
                    "full_name": "partnerships_user[partnership_id]",
                    "description": "The partnership id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "partnerships_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "partnerships_user[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/partnerships_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "partnerships_user": {
                    "partnership_id": "1",
                    "user_id": "107"
                  }
                },
                "response_data": {
                  "id": 6,
                  "partnership_id": 1,
                  "final_mark": null,
                  "user": {
                    "id": 107,
                    "login": "lukeskyw",
                    "url": "https://api.intra.42.fr/v2/users/lukeskyw"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["student_tutor", "advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/partnerships_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/partnerships_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "partnerships_user",
                "full_name": "partnerships_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "partnership_id",
                    "full_name": "partnerships_user[partnership_id]",
                    "description": "The partnership id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "partnerships_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "partnerships_user[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/partnerships_users/5",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "partnerships_user": {
                    "partnership_id": "1",
                    "user_id": "99"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["student_tutor", "advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/partnerships_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/partnerships_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/partnerships_users/5",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["student_tutor", "advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "patronages": {
        "doc_url": "/apidoc/2.0/patronages",
        "api_url": "/api",
        "name": "Patronages",
        "short_description": "A patronage between two \u003ca href='#users'\u003eusers\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/patronages/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/patronages",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/patronages",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003egodfather_id\u003c/code\u003e, \u003ccode\u003eongoing\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "godfather_id",
                      "ongoing",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003egodfather_id\u003c/code\u003e, \u003ccode\u003eongoing\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "godfather_id",
                      "ongoing",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003egodfather_id\u003c/code\u003e, \u003ccode\u003eongoing\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "godfather_id",
                      "ongoing",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/patronages",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 122,
                    "user_id": 124,
                    "godfather_id": 39,
                    "ongoing": true,
                    "created_at": "2017-11-22T13:42:12.790Z",
                    "updated_at": "2017-11-22T13:42:12.796Z",
                    "user": {
                      "id": 124,
                      "login": "hsolo2",
                      "url": "https://api.intra.42.fr/v2/users/hsolo2"
                    },
                    "godfather": {
                      "id": 39,
                      "login": "anskywal",
                      "url": "https://api.intra.42.fr/v2/users/anskywal"
                    }
                  },
                  {
                    "id": 121,
                    "user_id": 116,
                    "godfather_id": 15,
                    "ongoing": true,
                    "created_at": "2017-11-22T13:42:12.779Z",
                    "updated_at": "2017-11-22T13:42:12.786Z",
                    "user": {
                      "id": 116,
                      "login": "mwindu2",
                      "url": "https://api.intra.42.fr/v2/users/mwindu2"
                    },
                    "godfather": {
                      "id": 15,
                      "login": "mwindu",
                      "url": "https://api.intra.42.fr/v2/users/mwindu"
                    }
                  },
                  {
                    "id": 120,
                    "user_id": 123,
                    "godfather_id": 96,
                    "ongoing": true,
                    "created_at": "2017-11-22T13:42:12.769Z",
                    "updated_at": "2017-11-22T13:42:12.774Z",
                    "user": {
                      "id": 123,
                      "login": "chewbche",
                      "url": "https://api.intra.42.fr/v2/users/chewbche"
                    },
                    "godfather": {
                      "id": 96,
                      "login": "wattwatt",
                      "url": "https://api.intra.42.fr/v2/users/wattwatt"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/patronages/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/patronages/113",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 113,
                  "user_id": 119,
                  "godfather_id": 85,
                  "ongoing": true,
                  "created_at": "2017-11-22T13:42:12.697Z",
                  "updated_at": "2017-11-22T13:42:12.704Z",
                  "user": {
                    "id": 119,
                    "login": "hasolo",
                    "url": "https://api.intra.42.fr/v2/users/hasolo"
                  },
                  "godfather": {
                    "id": 85,
                    "login": "chewchew",
                    "url": "https://api.intra.42.fr/v2/users/chewchew"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/patronages",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/patronages",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "patronage",
                "full_name": "patronage",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "patronage[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "godfather_id",
                    "full_name": "patronage[godfather_id]",
                    "description": "The godfather id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "ongoing",
                    "full_name": "patronage[ongoing]",
                    "description": "Is it ongoing ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/patronages",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "patronage": { "godfather_id": "4", "user_id": "3" }
                },
                "response_data": {
                  "id": 123,
                  "user_id": 3,
                  "godfather_id": 4,
                  "ongoing": true,
                  "created_at": "2017-11-22T13:43:50.782Z",
                  "updated_at": "2017-11-22T13:43:50.794Z",
                  "user": {
                    "id": 3,
                    "login": "gargamel",
                    "url": "https://api.intra.42.fr/v2/users/gargamel"
                  },
                  "godfather": {
                    "id": 4,
                    "login": "kpedro",
                    "url": "https://api.intra.42.fr/v2/users/kpedro"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/patronages/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/patronages/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "patronage",
                "full_name": "patronage",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "patronage[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "godfather_id",
                    "full_name": "patronage[godfather_id]",
                    "description": "The godfather id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "ongoing",
                    "full_name": "patronage[ongoing]",
                    "description": "Is it ongoing ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/patronages/113",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "patronage": { "godfather_id": "4", "user_id": "3" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/patronages/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/patronages/113",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "patronages_reports": {
        "doc_url": "/apidoc/2.0/patronages_reports",
        "api_url": "/api",
        "name": "Patronages reports",
        "short_description": "A \u003ca href='#reports'\u003ereport\u003c/a\u003e for a \u003ca href='#patronages'\u003epatronage\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/patronages_reports/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/patronages_reports/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epatronage_id\u003c/code\u003e, \u003ccode\u003ereport_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "patronage_id",
                      "report_id",
                      "validated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epatronage_id\u003c/code\u003e, \u003ccode\u003ereport_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "patronage_id",
                      "report_id",
                      "validated_at",
                      "future",
                      "validated"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only patronages reports which begins in the future"
                      },
                      "validated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only validated patronages reports"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epatronage_id\u003c/code\u003e, \u003ccode\u003ereport_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "patronage_id",
                      "report_id",
                      "validated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/patronages_reports/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 124 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages_reports/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/patronages_reports",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/patronages_reports",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/patronages/:patronage_id/patronages_reports",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/reports/:report_id/patronages_reports",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "patronage_id",
                "full_name": "patronage_id",
                "description": "The patronage id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "report_id",
                "full_name": "report_id",
                "description": "The report id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epatronage_id\u003c/code\u003e, \u003ccode\u003ereport_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "patronage_id",
                      "report_id",
                      "validated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epatronage_id\u003c/code\u003e, \u003ccode\u003ereport_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "patronage_id",
                      "report_id",
                      "validated_at",
                      "future",
                      "validated"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only patronages reports which begins in the future"
                      },
                      "validated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only validated patronages reports"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epatronage_id\u003c/code\u003e, \u003ccode\u003ereport_id\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "patronage_id",
                      "report_id",
                      "validated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages_reports/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/patronages_reports/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/patronages_reports/67",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 67,
                  "user_id": 39,
                  "begin_at": "2018-06-20T13:42:12.179Z",
                  "created_at": "2017-11-22T13:42:12.179Z",
                  "updated_at": "2017-11-22T13:42:12.179Z",
                  "patronage_id": 67,
                  "report_id": 0,
                  "validated_at": null,
                  "patronage": {
                    "id": 67,
                    "user_id": 63,
                    "godfather_id": 39,
                    "ongoing": true,
                    "created_at": "2017-11-22T13:42:12.177Z",
                    "updated_at": "2017-11-22T13:42:12.181Z"
                  },
                  "report": {
                    "id": 0,
                    "name": "Final Debriefing",
                    "comment": "",
                    "introduction_md": "",
                    "disclaimer_md": "",
                    "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                    "created_at": "2017-11-22T13:42:11.309Z",
                    "updated_at": "2017-11-22T13:42:11.416Z",
                    "slug": "final-debriefing",
                    "delay_days": 210
                  },
                  "user": {
                    "id": 39,
                    "login": "anskywal",
                    "url": "https://api.intra.42.fr/v2/users/anskywal"
                  },
                  "answers": []
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages_reports/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/patronages_reports",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/patronages_reports",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/patronages/:patronage_id/patronages_reports",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/reports/:report_id/patronages_reports",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "patronage_id",
                "full_name": "patronage_id",
                "description": "The patronage id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "report_id",
                "full_name": "report_id",
                "description": "The report id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "patronages_report",
                "full_name": "patronages_report",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "patronages_report[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "patronages_report[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "patronage_id",
                    "full_name": "patronages_report[patronage_id]",
                    "description": "The patronage id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "report_id",
                    "full_name": "patronages_report[report_id]",
                    "description": "The report id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated_at",
                    "full_name": "patronages_report[validated_at]",
                    "description": "The validated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "patronages_report[comment]",
                    "description": "The comment.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "answers_attributes",
                    "full_name": "patronages_report[answers_attributes]",
                    "description": "The answers attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "question_id",
                        "full_name": "patronages_report[answers_attributes][question_id]",
                        "description": "The question id. Must be unique in the scope of a given scalable entity.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "patronages_report[answers_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "answer",
                        "full_name": "patronages_report[answers_attributes][answer]",
                        "description": "The answer.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "patronages_report[answers_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/patronages_reports",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "patronages_report": {
                    "begin_at": "2017-11-22 13:43:10 UTC",
                    "patronage_id": "98",
                    "report_id": "0",
                    "user_id": "27"
                  }
                },
                "response_data": {
                  "id": 127,
                  "user_id": 27,
                  "begin_at": "2017-11-22T13:43:10.000Z",
                  "created_at": "2017-11-22T13:43:51.496Z",
                  "updated_at": "2017-11-22T13:43:51.496Z",
                  "patronage_id": 98,
                  "report_id": 0,
                  "validated_at": null,
                  "patronage": {
                    "id": 98,
                    "user_id": 107,
                    "godfather_id": 96,
                    "ongoing": true,
                    "created_at": "2017-11-22T13:42:12.541Z",
                    "updated_at": "2017-11-22T13:43:51.499Z"
                  },
                  "report": {
                    "id": 0,
                    "name": "Final Debriefing",
                    "comment": "",
                    "introduction_md": "",
                    "disclaimer_md": "",
                    "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                    "created_at": "2017-11-22T13:42:11.309Z",
                    "updated_at": "2017-11-22T13:42:11.416Z",
                    "slug": "final-debriefing",
                    "delay_days": 210
                  },
                  "user": {
                    "id": 27,
                    "login": "dcaedus",
                    "url": "https://api.intra.42.fr/v2/users/dcaedus"
                  },
                  "answers": []
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages_reports/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/patronages_reports/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/patronages_reports/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "patronages_report",
                "full_name": "patronages_report",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "patronages_report[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "patronages_report[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "patronage_id",
                    "full_name": "patronages_report[patronage_id]",
                    "description": "The patronage id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "report_id",
                    "full_name": "patronages_report[report_id]",
                    "description": "The report id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated_at",
                    "full_name": "patronages_report[validated_at]",
                    "description": "The validated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "patronages_report[comment]",
                    "description": "The comment.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "answers_attributes",
                    "full_name": "patronages_report[answers_attributes]",
                    "description": "The answers attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "question_id",
                        "full_name": "patronages_report[answers_attributes][question_id]",
                        "description": "The question id. Must be unique in the scope of a given scalable entity.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "patronages_report[answers_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "answer",
                        "full_name": "patronages_report[answers_attributes][answer]",
                        "description": "The answer.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "patronages_report[answers_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/patronages_reports/67",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "patronages_report": {
                    "begin_at": "2017-11-22 13:43:10 UTC",
                    "patronage_id": "112",
                    "report_id": "0",
                    "user_id": "53"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/patronages_reports/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/patronages_reports/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/patronages_reports/67",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "pools": {
        "doc_url": "/apidoc/2.0/pools",
        "api_url": "/api",
        "name": "Pools",
        "short_description": "The \u003ca href='#pools'\u003epool\u003c/a\u003e of evaluation points.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/pools/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/pools",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecurrent_points\u003c/code\u003e, \u003ccode\u003emax_points\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "current_points",
                      "max_points",
                      "created_at",
                      "updated_at",
                      "cursus_id",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecurrent_points\u003c/code\u003e, \u003ccode\u003emax_points\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "current_points",
                      "max_points",
                      "created_at",
                      "updated_at",
                      "cursus_id",
                      "campus_id"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/pools",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 25,
                    "current_points": 0,
                    "max_points": 400,
                    "cursus_id": 1,
                    "campus_id": 12
                  },
                  {
                    "id": 19,
                    "current_points": 110,
                    "max_points": 400,
                    "cursus_id": 1,
                    "campus_id": 9
                  },
                  {
                    "id": 18,
                    "current_points": 40,
                    "max_points": 600,
                    "cursus_id": 1,
                    "campus_id": 8
                  }
                ]
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/pools/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/pools/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/pools/25",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 25,
                  "current_points": 0,
                  "max_points": 400,
                  "cursus_id": 1,
                  "campus_id": 12
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/pools/add_points",
            "name": "add_points",
            "apis": [
              {
                "api_url": "/v2/pools/:id/points/add",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Add points in specific pool. If number of points are bigger than max points, balance will be triggered. You are allowed to modify ONLY for your campus.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "points",
                "full_name": "points",
                "description": "Number of points to be added. Points can be negative.",
                "required": true,
                "allow_nil": false,
                "validator": "Must be a number.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/pools/1/points/add",
                "versions": ["2.0"],
                "query": "",
                "request_data": { "points": 10 },
                "response_data": {
                  "id": 25,
                  "current_points": 1310,
                  "max_points": 1400,
                  "cursus_id": 1,
                  "campus_id": 1
                }
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/pools/remove_points",
            "name": "remove_points",
            "apis": [
              {
                "api_url": "/v2/pools/:id/points/remove",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Remove points in specific pool. If number of points are lower than max points, balance will be disappeared. You are allowed to modify ONLY for your campus.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "points",
                "full_name": "points",
                "description": "Number of points to be removed. Points are converted to \u003cstrong\u003eabsolute values\u003c/strong\u003e and decremented by that point.",
                "required": true,
                "allow_nil": false,
                "validator": "Must be a number.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/pools/1/points/remove",
                "versions": ["2.0"],
                "query": "",
                "request_data": { "points": 10 },
                "response_data": {
                  "id": 25,
                  "current_points": 1290,
                  "max_points": 1400,
                  "cursus_id": 1,
                  "campus_id": 1
                }
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "products": {
        "doc_url": "/apidoc/2.0/products",
        "api_url": "/api",
        "name": "Products",
        "short_description": "Products are sold on the intranet shop",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/products/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/products",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eprice\u003c/code\u003e, \u003ccode\u003equantity\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecategory_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eis_uniq\u003c/code\u003e, \u003ccode\u003eone_time_purchase\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "price",
                      "quantity",
                      "begin_at",
                      "end_at",
                      "category_id",
                      "created_at",
                      "updated_at",
                      "kind",
                      "slug",
                      "image",
                      "is_uniq",
                      "one_time_purchase"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eprice\u003c/code\u003e, \u003ccode\u003equantity\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecategory_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eis_uniq\u003c/code\u003e, \u003ccode\u003eone_time_purchase\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "price",
                      "quantity",
                      "begin_at",
                      "end_at",
                      "category_id",
                      "created_at",
                      "updated_at",
                      "kind",
                      "slug",
                      "image",
                      "is_uniq",
                      "one_time_purchase",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only products which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end products"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eprice\u003c/code\u003e, \u003ccode\u003equantity\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecategory_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003eis_uniq\u003c/code\u003e, \u003ccode\u003eone_time_purchase\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "price",
                      "quantity",
                      "begin_at",
                      "end_at",
                      "category_id",
                      "created_at",
                      "updated_at",
                      "kind",
                      "slug",
                      "image",
                      "is_uniq",
                      "one_time_purchase"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/products",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Jakku",
                    "description": "Utapau",
                    "price": 100,
                    "quantity": 20,
                    "begin_at": null,
                    "end_at": null,
                    "category_id": 1,
                    "created_at": "2017-11-22T13:41:20.457Z",
                    "updated_at": "2017-11-22T13:41:20.498Z",
                    "kind": "auto",
                    "slug": "jakku",
                    "image": {
                      "url": "/uploads/product/image/1/logo.png",
                      "thumb": {
                        "url": "/uploads/product/image/1/thumb_logo.png"
                      }
                    },
                    "is_uniq": true,
                    "one_time_purchase": false
                  },
                  {
                    "id": 2,
                    "name": "Sullust",
                    "description": "Lothal",
                    "price": 100,
                    "quantity": 20,
                    "begin_at": null,
                    "end_at": null,
                    "category_id": 1,
                    "created_at": "2017-11-22T13:41:20.528Z",
                    "updated_at": "2017-11-22T13:41:20.561Z",
                    "kind": "auto",
                    "slug": "sullust",
                    "image": {
                      "url": "/uploads/product/image/2/logo.png",
                      "thumb": {
                        "url": "/uploads/product/image/2/thumb_logo.png"
                      }
                    },
                    "is_uniq": true,
                    "one_time_purchase": false
                  },
                  {
                    "id": 3,
                    "name": "Geonosis",
                    "description": "Naboo",
                    "price": 100,
                    "quantity": 20,
                    "begin_at": null,
                    "end_at": null,
                    "category_id": 1,
                    "created_at": "2017-11-22T13:41:20.590Z",
                    "updated_at": "2017-11-22T13:41:20.621Z",
                    "kind": "auto",
                    "slug": "geonosis",
                    "image": {
                      "url": "/uploads/product/image/3/logo.png",
                      "thumb": {
                        "url": "/uploads/product/image/3/thumb_logo.png"
                      }
                    },
                    "is_uniq": true,
                    "one_time_purchase": false
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/products/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/products/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/products/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "name": "Jakku",
                  "description": "Utapau",
                  "price": 100,
                  "quantity": 20,
                  "begin_at": null,
                  "end_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.457Z",
                  "updated_at": "2017-11-22T13:41:20.498Z",
                  "kind": "auto",
                  "slug": "jakku",
                  "image": {
                    "url": "/uploads/product/image/1/logo.png",
                    "thumb": {
                      "url": "/uploads/product/image/1/thumb_logo.png"
                    }
                  },
                  "is_uniq": true,
                  "one_time_purchase": false
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/products/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/products",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "product",
                "full_name": "product",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "product[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "product[description]",
                    "description": "The description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "price",
                    "full_name": "product[price]",
                    "description": "The price.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "quantity",
                    "full_name": "product[quantity]",
                    "description": "The quantity.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "product[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "product[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "category_id",
                    "full_name": "product[category_id]",
                    "description": "The category id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "product[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003emanager\u003c/code\u003e, \u003ccode\u003eauto\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "product[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "product[image]",
                    "description": "The image.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_uniq",
                    "full_name": "product[is_uniq]",
                    "description": "Is it is uniq ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "one_time_purchase",
                    "full_name": "product[one_time_purchase]",
                    "description": "Is it one time purchase ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_products_attributes",
                    "full_name": "product[campus_products_attributes]",
                    "description": "The campus products attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "campus_id",
                        "full_name": "product[campus_products_attributes][campus_id]",
                        "description": "The campus id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "product[campus_products_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/products",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "product": {
                    "campus_products_attributes": [{ "campus_id": "5" }],
                    "name": "Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris.",
                    "description": "Utapau",
                    "price": "10",
                    "quantity": "10",
                    "begin_at": "2017-05-22 13:43:51 UTC",
                    "end_at": "2023-11-22 13:43:51 UTC",
                    "category_id": "3",
                    "kind": "auto",
                    "slug": "Kashyyyk",
                    "image": {
                      "tempfile": [],
                      "original_filename": "logo.png",
                      "content_type": "image/png+xml",
                      "headers": "Content-Disposition: form-data; name=\"product[image]\"; filename=\"logo.png\"\r\nContent-Type: image/png+xml\r\nContent-Length: 3058\r\n"
                    },
                    "is_uniq": "true",
                    "one_time_purchase": "true"
                  }
                },
                "response_data": {
                  "id": 6,
                  "name": "Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris.",
                  "description": "Utapau",
                  "price": 10,
                  "quantity": 10,
                  "begin_at": "2017-05-22T13:43:51.000Z",
                  "end_at": "2023-11-22T13:43:51.000Z",
                  "category_id": 3,
                  "created_at": "2017-11-22T13:43:52.063Z",
                  "updated_at": "2017-11-22T13:43:52.097Z",
                  "kind": "auto",
                  "slug": "chuck-norris-s-keyboard-doesn-t-have-a-ctrl-key-because-nothing-controls-chuck-norris",
                  "image": {
                    "url": "/uploads/product/image/6/logo.png",
                    "thumb": {
                      "url": "/uploads/product/image/6/thumb_logo.png"
                    }
                  },
                  "is_uniq": true,
                  "one_time_purchase": true
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["shop_manager", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/products/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/products/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/products/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "product",
                "full_name": "product",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "product[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "product[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "price",
                    "full_name": "product[price]",
                    "description": "The price.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "quantity",
                    "full_name": "product[quantity]",
                    "description": "The quantity.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "product[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "product[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "category_id",
                    "full_name": "product[category_id]",
                    "description": "The category id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "product[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003emanager\u003c/code\u003e, \u003ccode\u003eauto\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "product[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "product[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_uniq",
                    "full_name": "product[is_uniq]",
                    "description": "Is it is uniq ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "one_time_purchase",
                    "full_name": "product[one_time_purchase]",
                    "description": "Is it one time purchase ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_products_attributes",
                    "full_name": "product[campus_products_attributes]",
                    "description": "The campus products attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "campus_id",
                        "full_name": "product[campus_products_attributes][campus_id]",
                        "description": "The campus id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "product[campus_products_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/products/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "product": {
                    "campus_products_attributes": [{ "campus_id": "3" }],
                    "name": "Chuck Norris programs do not accept input.",
                    "description": "Kamino",
                    "price": "10",
                    "quantity": "10",
                    "begin_at": "2017-05-22 13:43:52 UTC",
                    "end_at": "2023-11-22 13:43:52 UTC",
                    "category_id": "1",
                    "kind": "auto",
                    "slug": "DQar",
                    "image": {
                      "tempfile": [],
                      "original_filename": "logo.png",
                      "content_type": "image/png+xml",
                      "headers": "Content-Disposition: form-data; name=\"product[image]\"; filename=\"logo.png\"\r\nContent-Type: image/png+xml\r\nContent-Length: 3058\r\n"
                    },
                    "is_uniq": "true",
                    "one_time_purchase": "true"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["shop_manager", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/products/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/products/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/products/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "product",
                "full_name": "product",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "product[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "product[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "price",
                    "full_name": "product[price]",
                    "description": "The price.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "quantity",
                    "full_name": "product[quantity]",
                    "description": "The quantity.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "product[begin_at]",
                    "description": "The begin at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "product[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "category_id",
                    "full_name": "product[category_id]",
                    "description": "The category id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "product[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003emanager\u003c/code\u003e, \u003ccode\u003eauto\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "product[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "product[image]",
                    "description": "The image.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_uniq",
                    "full_name": "product[is_uniq]",
                    "description": "Is it is uniq ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "one_time_purchase",
                    "full_name": "product[one_time_purchase]",
                    "description": "Is it one time purchase ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_products_attributes",
                    "full_name": "product[campus_products_attributes]",
                    "description": "The campus products attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "campus_id",
                        "full_name": "product[campus_products_attributes][campus_id]",
                        "description": "The campus id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "product[campus_products_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/products/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["shop_manager", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "project_data": {
        "doc_url": "/apidoc/2.0/project_data",
        "api_url": "/api",
        "name": "Project data",
        "short_description": "\u003ca href='#projects'\u003eProject\u003c/a\u003e data for the graph",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/project_data/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_data",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/project_data",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecoordinates\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eby\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "coordinates",
                      "created_at",
                      "updated_at",
                      "by",
                      "kind",
                      "project_session_id"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_data",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 6,
                    "coordinates": [73.0, 53.0],
                    "by": [],
                    "kind": "project",
                    "project_session_id": 3
                  },
                  {
                    "id": 4,
                    "coordinates": [63.0, 81.0],
                    "by": [],
                    "kind": "exam",
                    "project_session_id": 2
                  },
                  {
                    "id": 5,
                    "coordinates": [80.0, 76.0],
                    "by": [],
                    "kind": "exam",
                    "project_session_id": 2
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_data/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/project_data/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_data/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "coordinates": [11.0, 14.0],
                  "by": [],
                  "kind": "rush",
                  "project_session_id": 1
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_data/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/project_data",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/project_data",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "project_data": {
                    "by": "[[7, 3000, 1900, 3000, 1725], [36, 3000, 1725, 3100, 1725]]",
                    "coordinates": "[2350.0, 3450.0]",
                    "kind": "project",
                    "project_session_id": "5"
                  }
                },
                "response_data": {
                  "id": 8,
                  "coordinates": [2350.0, 3450.0],
                  "by": [
                    [7, 3000, 1900, 3000, 1725],
                    [36, 3000, 1725, 3100, 1725]
                  ],
                  "kind": "project",
                  "project_session_id": 5
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "roles": ["advanced_tutor"],
              "required_scopes": ["projects"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_data/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/project_data/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_data/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_data",
                "full_name": "project_data",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "coordinates",
                    "full_name": "project_data[coordinates]",
                    "description": "The project coordinates for the graph as a string, such as: “[x, y]”",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "project_data[kind]",
                    "description": "",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eproject\u003c/code\u003e, \u003ccode\u003erush\u003c/code\u003e, \u003ccode\u003eexam\u003c/code\u003e, \u003ccode\u003efirst_internship\u003c/code\u003e, \u003ccode\u003esecond_internship\u003c/code\u003e, \u003ccode\u003ebig_project\u003c/code\u003e, \u003ccode\u003episcine\u003c/code\u003e, \u003ccode\u003epart_time\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_session_id",
                    "full_name": "project_data[project_session_id]",
                    "description": "",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "by",
                    "full_name": "project_data[by]",
                    "description": "The link path, under the “[[project_id, x1, y1, x2, y2], []]” format",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "roles": ["advanced_tutor"],
              "required_scopes": ["projects"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_data/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/project_data/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "roles": ["advanced_tutor"],
              "required_scopes": ["projects"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "project_sessions": {
        "doc_url": "/apidoc/2.0/project_sessions",
        "api_url": "/api",
        "name": "Project sessions",
        "short_description": "A project session defines a particular behaviour for a \u003ca href='#projects'\u003eproject\u003c/a\u003e, based on the \u003ca href='#cursus'\u003ecursus\u003c/a\u003e and / or the \u003ca href='#campus'\u003ecampus\u003c/a\u003e .",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/project_sessions/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/project_sessions/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eestimate_time\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003eduration_days\u003c/code\u003e, \u003ccode\u003eterminating_after\u003c/code\u003e, \u003ccode\u003esolo\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e, \u003ccode\u003eminimum_mark\u003c/code\u003e, \u003ccode\u003eteam_behaviour\u003c/code\u003e, \u003ccode\u003ecommit\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eobjectives\u003c/code\u003e, \u003ccode\u003edivisor\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "project_id",
                      "campus_id",
                      "cursus_id",
                      "estimate_time",
                      "created_at",
                      "updated_at",
                      "begin_at",
                      "end_at",
                      "max_people",
                      "duration_days",
                      "terminating_after",
                      "solo",
                      "is_subscriptable",
                      "minimum_mark",
                      "team_behaviour",
                      "commit",
                      "difficulty",
                      "description",
                      "objectives",
                      "divisor"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eestimate_time\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003eduration_days\u003c/code\u003e, \u003ccode\u003eterminating_after\u003c/code\u003e, \u003ccode\u003esolo\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e, \u003ccode\u003eteam_behaviour\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_id",
                      "campus_id",
                      "cursus_id",
                      "estimate_time",
                      "created_at",
                      "updated_at",
                      "begin_at",
                      "end_at",
                      "max_people",
                      "duration_days",
                      "terminating_after",
                      "solo",
                      "is_subscriptable",
                      "team_behaviour",
                      "difficulty",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "difficulty": {
                        "proc": {},
                        "all": [],
                        "description": "Filter on difficulty"
                      },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only project sessions which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end project sessions"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eestimate_time\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003eduration_days\u003c/code\u003e, \u003ccode\u003eterminating_after\u003c/code\u003e, \u003ccode\u003esolo\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e, \u003ccode\u003eteam_behaviour\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_id",
                      "campus_id",
                      "cursus_id",
                      "estimate_time",
                      "created_at",
                      "updated_at",
                      "begin_at",
                      "end_at",
                      "max_people",
                      "duration_days",
                      "terminating_after",
                      "solo",
                      "is_subscriptable",
                      "team_behaviour",
                      "difficulty"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_sessions/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 5 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/project_sessions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eestimate_time\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003eduration_days\u003c/code\u003e, \u003ccode\u003eterminating_after\u003c/code\u003e, \u003ccode\u003esolo\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e, \u003ccode\u003eminimum_mark\u003c/code\u003e, \u003ccode\u003eteam_behaviour\u003c/code\u003e, \u003ccode\u003ecommit\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eobjectives\u003c/code\u003e, \u003ccode\u003edivisor\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "project_id",
                      "campus_id",
                      "cursus_id",
                      "estimate_time",
                      "created_at",
                      "updated_at",
                      "begin_at",
                      "end_at",
                      "max_people",
                      "duration_days",
                      "terminating_after",
                      "solo",
                      "is_subscriptable",
                      "minimum_mark",
                      "team_behaviour",
                      "commit",
                      "difficulty",
                      "description",
                      "objectives",
                      "divisor"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eestimate_time\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003eduration_days\u003c/code\u003e, \u003ccode\u003eterminating_after\u003c/code\u003e, \u003ccode\u003esolo\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e, \u003ccode\u003eteam_behaviour\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_id",
                      "campus_id",
                      "cursus_id",
                      "estimate_time",
                      "created_at",
                      "updated_at",
                      "begin_at",
                      "end_at",
                      "max_people",
                      "duration_days",
                      "terminating_after",
                      "solo",
                      "is_subscriptable",
                      "team_behaviour",
                      "difficulty",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "difficulty": {
                        "proc": {},
                        "all": [],
                        "description": "Filter on difficulty"
                      },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only project sessions which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end project sessions"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003eestimate_time\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003emax_people\u003c/code\u003e, \u003ccode\u003eduration_days\u003c/code\u003e, \u003ccode\u003eterminating_after\u003c/code\u003e, \u003ccode\u003esolo\u003c/code\u003e, \u003ccode\u003eis_subscriptable\u003c/code\u003e, \u003ccode\u003eteam_behaviour\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_id",
                      "campus_id",
                      "cursus_id",
                      "estimate_time",
                      "created_at",
                      "updated_at",
                      "begin_at",
                      "end_at",
                      "max_people",
                      "duration_days",
                      "terminating_after",
                      "solo",
                      "is_subscriptable",
                      "team_behaviour",
                      "difficulty"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_sessions",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 5,
                    "solo": false,
                    "begin_at": null,
                    "end_at": null,
                    "estimate_time": null,
                    "duration_days": null,
                    "terminating_after": null,
                    "project_id": 5,
                    "campus_id": null,
                    "cursus_id": null,
                    "created_at": "2017-11-22T13:41:26.911Z",
                    "updated_at": "2017-11-22T13:41:26.911Z",
                    "max_people": null,
                    "is_subscriptable": true,
                    "scales": [],
                    "uploads": [],
                    "team_behaviour": "user",
                    "project": {
                      "id": 5,
                      "name": "Quarter Finals",
                      "slug": "hogwarts-quidditch-cup-quarter-finals",
                      "description": null,
                      "parent": {
                        "name": "Hogwarts Quidditch Cup",
                        "id": 4,
                        "slug": "hogwarts-quidditch-cup",
                        "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup/mine"
                      },
                      "children": [],
                      "objectives": null,
                      "tier": null,
                      "attachments": [],
                      "created_at": "2017-11-22T13:41:26.895Z",
                      "updated_at": "2017-11-22T13:41:26.973Z",
                      "exam": false
                    },
                    "campus": null,
                    "cursus": null,
                    "evaluations": [{ "id": 5, "kind": "scale" }]
                  },
                  {
                    "id": 4,
                    "solo": false,
                    "begin_at": null,
                    "end_at": null,
                    "estimate_time": null,
                    "duration_days": null,
                    "terminating_after": null,
                    "project_id": 4,
                    "campus_id": null,
                    "cursus_id": null,
                    "created_at": "2017-11-22T13:41:26.786Z",
                    "updated_at": "2017-11-22T13:41:26.786Z",
                    "max_people": null,
                    "is_subscriptable": true,
                    "scales": [],
                    "uploads": [],
                    "team_behaviour": "user",
                    "project": {
                      "id": 4,
                      "name": "Hogwarts Quidditch Cup",
                      "slug": "hogwarts-quidditch-cup",
                      "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                      "parent": null,
                      "children": [
                        {
                          "name": "Quarter Finals",
                          "id": 5,
                          "slug": "hogwarts-quidditch-cup-quarter-finals",
                          "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                        }
                      ],
                      "objectives": ["Quidditch"],
                      "tier": 1,
                      "attachments": [],
                      "created_at": "2017-11-22T13:41:26.765Z",
                      "updated_at": "2017-11-22T13:41:26.975Z",
                      "exam": false
                    },
                    "campus": null,
                    "cursus": null,
                    "evaluations": []
                  },
                  {
                    "id": 3,
                    "solo": true,
                    "begin_at": null,
                    "end_at": null,
                    "estimate_time": 2592000,
                    "duration_days": null,
                    "terminating_after": null,
                    "project_id": 3,
                    "campus_id": null,
                    "cursus_id": null,
                    "created_at": "2017-11-22T13:41:26.545Z",
                    "updated_at": "2017-11-22T13:41:26.545Z",
                    "max_people": null,
                    "is_subscriptable": true,
                    "scales": [],
                    "uploads": [],
                    "team_behaviour": "user",
                    "project": {
                      "id": 3,
                      "name": "Metaprogramming in OCaml",
                      "slug": "metaprogramming-in-ocaml",
                      "description": "Something you shouldn't see",
                      "parent": null,
                      "children": [],
                      "objectives": ["Run away"],
                      "tier": 1,
                      "attachments": [],
                      "created_at": "2017-11-22T13:41:26.537Z",
                      "updated_at": "2017-11-22T13:41:26.616Z",
                      "exam": true
                    },
                    "campus": null,
                    "cursus": null,
                    "evaluations": [{ "id": 4, "kind": "scale" }]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_sessions/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "solo": true,
                  "begin_at": null,
                  "end_at": null,
                  "estimate_time": 2592000,
                  "duration_days": null,
                  "terminating_after": null,
                  "project_id": 2,
                  "campus_id": null,
                  "cursus_id": null,
                  "created_at": "2017-11-22T13:41:26.375Z",
                  "updated_at": "2017-11-22T13:41:28.347Z",
                  "max_people": null,
                  "is_subscriptable": true,
                  "scales": [
                    { "id": 2, "correction_number": 3, "is_primary": true }
                  ],
                  "uploads": [],
                  "team_behaviour": "user",
                  "project": {
                    "id": 2,
                    "name": "Ordinary Wizarding Levels",
                    "slug": "ordinary-wizarding-levels",
                    "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                    "parent": null,
                    "children": [],
                    "objectives": ["Wizarding"],
                    "tier": 1,
                    "attachments": [],
                    "created_at": "2017-11-22T13:41:26.356Z",
                    "updated_at": "2017-11-22T13:41:26.441Z",
                    "exam": true
                  },
                  "campus": null,
                  "cursus": null,
                  "evaluations": [{ "id": 3, "kind": "scale" }]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/project_sessions/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "project_sessions_rules": {
        "doc_url": "/apidoc/2.0/project_sessions_rules",
        "api_url": "/api",
        "name": "Project sessions rules",
        "short_description": "A \u003ca href='#rules'\u003erule\u003c/a\u003e linked to a project session.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/project_sessions_rules/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/project_sessions_rules",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions_rules",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erule_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003erequired\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "rule_id",
                      "created_at",
                      "updated_at",
                      "required",
                      "position",
                      "project_session_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erule_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003erequired\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "rule_id",
                      "created_at",
                      "updated_at",
                      "required",
                      "position",
                      "project_session_id"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erule_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003erequired\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "rule_id",
                      "created_at",
                      "updated_at",
                      "required",
                      "position",
                      "project_session_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions_rules/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/project_sessions_rules/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions_rules/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/project_sessions_rules",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions_rules",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_sessions_rule",
                "full_name": "project_sessions_rule",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "project_sessions_rule[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "rule_id",
                    "full_name": "project_sessions_rule[rule_id]",
                    "description": "The rule id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "required",
                    "full_name": "project_sessions_rule[required]",
                    "description": "Is it required ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_session_id",
                    "full_name": "project_sessions_rule[project_session_id]",
                    "description": "The project session id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "params_project_sessions_rules_attributes",
                    "full_name": "project_sessions_rule[params_project_sessions_rules_attributes]",
                    "description": "The params project sessions rules attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "param_id",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][param_id]",
                        "description": "The param id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions_rules/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/project_sessions_rules/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions_rules/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_sessions_rule",
                "full_name": "project_sessions_rule",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "project_sessions_rule[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "rule_id",
                    "full_name": "project_sessions_rule[rule_id]",
                    "description": "The rule id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "required",
                    "full_name": "project_sessions_rule[required]",
                    "description": "Is it required ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_session_id",
                    "full_name": "project_sessions_rule[project_session_id]",
                    "description": "The project session id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "params_project_sessions_rules_attributes",
                    "full_name": "project_sessions_rule[params_project_sessions_rules_attributes]",
                    "description": "The params project sessions rules attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "param_id",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][param_id]",
                        "description": "The param id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project_sessions_rule[params_project_sessions_rules_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions_rules/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/project_sessions_rules/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "project_sessions_skills": {
        "doc_url": "/apidoc/2.0/project_sessions_skills",
        "api_url": "/api",
        "name": "Project sessions skills",
        "short_description": "A \u003ca href='#skills'\u003eskill\u003c/a\u003e linked to a project session.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/project_sessions_skills/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_sessions_skills",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/project_sessions_skills",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:skill_id/project_sessions_skills",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "skill_id",
                "full_name": "skill_id",
                "description": "The skill id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "project_session_id",
                      "skill_id",
                      "value",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_session_id",
                      "skill_id",
                      "value",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003eskill_id\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_session_id",
                      "skill_id",
                      "value",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_sessions_skills",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "project_session_id": 1979,
                    "skill_id": 2,
                    "value": 15,
                    "created_at": "2019-07-03T12:21:11.956Z",
                    "updated_at": "2019-07-03T12:21:11.956Z"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/project_sessions_skills/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/project_sessions_skills/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/project_sessions_skills/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/project_sessions_skills/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "project_session_id": 1979,
                  "skill_id": 2,
                  "value": 15,
                  "created_at": "2019-07-03T12:21:11.956Z",
                  "updated_at": "2019-07-03T12:21:11.956Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "projects": {
        "doc_url": "/apidoc/2.0/projects",
        "api_url": "/api",
        "name": "Projects",
        "short_description": "Pedagogic projects of a \u003ca href='#cursus'\u003ecursus\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/projects/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus/:cursus_id/projects",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/projects",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/me/projects",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by position asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003eexam\u003c/code\u003e, \u003ccode\u003eparent_id\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003einherited_team\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ehas_git\u003c/code\u003e, \u003ccode\u003ehas_mark\u003c/code\u003e, \u003ccode\u003erepository\u003c/code\u003e, \u003ccode\u003egit_id\u003c/code\u003e, \u003ccode\u003ecached_repository_path\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "position": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "visible",
                      "exam",
                      "parent_id",
                      "slug",
                      "inherited_team",
                      "position",
                      "has_git",
                      "has_mark",
                      "repository",
                      "git_id",
                      "cached_repository_path"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003evisible\u003c/code\u003e, \u003ccode\u003eexam\u003c/code\u003e, \u003ccode\u003eparent_id\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003einherited_team\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003ehas_git\u003c/code\u003e, \u003ccode\u003ehas_mark\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "visible",
                      "exam",
                      "parent_id",
                      "slug",
                      "inherited_team",
                      "position",
                      "has_git",
                      "has_mark",
                      "description",
                      "difficulty"
                    ],
                    "additional": {
                      "difficulty": {
                        "proc": {},
                        "all": [],
                        "description": "Filter on project sessions difficulty"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eparent_id\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003edifficulty\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "parent_id",
                      "slug",
                      "position",
                      "description",
                      "difficulty"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/cursus/1/projects",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Libft",
                    "slug": "libft",
                    "difficulty": 5000,
                    "description": "The first project of 42 !",
                    "parent": null,
                    "children": [],
                    "objectives": ["initiation"],
                    "attachments": [],
                    "created_at": "2017-11-22T13:41:25.963Z",
                    "updated_at": "2017-11-22T13:41:26.243Z",
                    "exam": false,
                    "cursus": [
                      {
                        "id": 1,
                        "created_at": "2017-11-22T13:41:00.750Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      }
                    ],
                    "campus": [
                      {
                        "id": 1,
                        "name": "Cluj",
                        "time_zone": "Europe/Bucharest",
                        "language": {
                          "id": 3,
                          "name": "Romanian",
                          "identifier": "ro",
                          "created_at": "2017-11-22T13:40:59.468Z",
                          "updated_at": "2017-11-22T13:41:26.139Z"
                        },
                        "users_count": 28,
                        "vogsphere_id": 1
                      }
                    ],
                    "skills": [
                      {
                        "id": 2,
                        "name": "Company experience",
                        "created_at": "2017-11-22T13:41:00.305Z"
                      },
                      {
                        "id": 1,
                        "name": "Parallel computing",
                        "created_at": "2017-11-22T13:41:00.257Z"
                      }
                    ],
                    "videos": [],
                    "tags": [{ "id": 12, "name": "Libft", "kind": "general" }],
                    "project_sessions": [
                      {
                        "id": 1,
                        "solo": true,
                        "begin_at": null,
                        "end_at": null,
                        "difficulty": 5000,
                        "estimate_time": 2592000,
                        "duration_days": null,
                        "terminating_after": null,
                        "project_id": 1,
                        "campus_id": null,
                        "cursus_id": null,
                        "created_at": "2017-11-22T13:41:26.149Z",
                        "updated_at": "2017-11-22T13:42:09.376Z",
                        "max_people": null,
                        "is_subscriptable": true,
                        "scales": [
                          {
                            "id": 1,
                            "correction_number": 3,
                            "is_primary": true
                          }
                        ],
                        "uploads": [{ "id": 1, "name": "Idaho kangaroos" }],
                        "team_behaviour": "user"
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "name": "Ordinary Wizarding Levels",
                    "slug": "ordinary-wizarding-levels",
                    "difficulty": 5000,
                    "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                    "parent": null,
                    "children": [],
                    "objectives": ["Wizarding"],
                    "attachments": [],
                    "created_at": "2017-11-22T13:41:26.356Z",
                    "updated_at": "2017-11-22T13:41:26.441Z",
                    "exam": true,
                    "cursus": [
                      {
                        "id": 1,
                        "created_at": "2017-11-22T13:41:00.750Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      }
                    ],
                    "campus": [
                      {
                        "id": 1,
                        "name": "Cluj",
                        "time_zone": "Europe/Bucharest",
                        "language": {
                          "id": 3,
                          "name": "Romanian",
                          "identifier": "ro",
                          "created_at": "2017-11-22T13:40:59.468Z",
                          "updated_at": "2017-11-22T13:41:26.139Z"
                        },
                        "users_count": 28,
                        "vogsphere_id": 1
                      }
                    ],
                    "skills": [
                      {
                        "id": 1,
                        "name": "Parallel computing",
                        "created_at": "2017-11-22T13:41:00.257Z"
                      },
                      {
                        "id": 6,
                        "name": "Basics",
                        "created_at": "2017-11-22T13:41:00.448Z"
                      }
                    ],
                    "videos": [],
                    "tags": [
                      {
                        "id": 13,
                        "name": "Ordinary Wizarding Levels",
                        "kind": "general"
                      }
                    ],
                    "project_sessions": [
                      {
                        "id": 2,
                        "solo": true,
                        "begin_at": null,
                        "end_at": null,
                        "difficulty": 5000,
                        "estimate_time": 2592000,
                        "duration_days": null,
                        "terminating_after": null,
                        "project_id": 2,
                        "campus_id": null,
                        "cursus_id": null,
                        "created_at": "2017-11-22T13:41:26.375Z",
                        "updated_at": "2017-11-22T13:41:28.347Z",
                        "max_people": null,
                        "is_subscriptable": true,
                        "scales": [
                          {
                            "id": 2,
                            "correction_number": 3,
                            "is_primary": true
                          }
                        ],
                        "uploads": [],
                        "team_behaviour": "user"
                      }
                    ]
                  },
                  {
                    "id": 4,
                    "name": "Hogwarts Quidditch Cup",
                    "slug": "hogwarts-quidditch-cup",
                    "difficulty": 5000,
                    "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                    "parent": null,
                    "children": [
                      {
                        "name": "Quarter Finals",
                        "id": 5,
                        "slug": "hogwarts-quidditch-cup-quarter-finals",
                        "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                      }
                    ],
                    "objectives": ["Quidditch"],
                    "attachments": [],
                    "created_at": "2017-11-22T13:41:26.765Z",
                    "updated_at": "2017-11-22T13:41:26.975Z",
                    "exam": false,
                    "cursus": [
                      {
                        "id": 1,
                        "created_at": "2017-11-22T13:41:00.750Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      }
                    ],
                    "campus": [
                      {
                        "id": 1,
                        "name": "Cluj",
                        "time_zone": "Europe/Bucharest",
                        "language": {
                          "id": 3,
                          "name": "Romanian",
                          "identifier": "ro",
                          "created_at": "2017-11-22T13:40:59.468Z",
                          "updated_at": "2017-11-22T13:41:26.139Z"
                        },
                        "users_count": 28,
                        "vogsphere_id": 1
                      }
                    ],
                    "skills": [
                      {
                        "id": 6,
                        "name": "Basics",
                        "created_at": "2017-11-22T13:41:00.448Z"
                      },
                      {
                        "id": 1,
                        "name": "Parallel computing",
                        "created_at": "2017-11-22T13:41:00.257Z"
                      }
                    ],
                    "videos": [],
                    "tags": [
                      {
                        "id": 15,
                        "name": "Hogwarts Quidditch Cup",
                        "kind": "general"
                      }
                    ],
                    "project_sessions": [
                      {
                        "id": 4,
                        "solo": false,
                        "begin_at": null,
                        "end_at": null,
                        "difficulty": 5000,
                        "estimate_time": null,
                        "duration_days": null,
                        "terminating_after": null,
                        "project_id": 4,
                        "campus_id": null,
                        "cursus_id": null,
                        "created_at": "2017-11-22T13:41:26.786Z",
                        "updated_at": "2017-11-22T13:41:26.786Z",
                        "max_people": null,
                        "is_subscriptable": true,
                        "scales": [],
                        "uploads": [],
                        "team_behaviour": "user"
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/projects/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/projects/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "name": "Ordinary Wizarding Levels",
                  "slug": "ordinary-wizarding-levels",
                  "difficulty": 5000,
                  "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                  "parent": null,
                  "children": [],
                  "objectives": ["Wizarding"],
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:26.356Z",
                  "updated_at": "2017-11-22T13:41:26.441Z",
                  "exam": true,
                  "cursus": [
                    {
                      "id": 1,
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "campus": [
                    {
                      "id": 1,
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "language": {
                        "id": 3,
                        "name": "Romanian",
                        "identifier": "ro",
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "skills": [
                    {
                      "id": 6,
                      "name": "Basics",
                      "created_at": "2017-11-22T13:41:00.448Z"
                    },
                    {
                      "id": 1,
                      "name": "Parallel computing",
                      "created_at": "2017-11-22T13:41:00.257Z"
                    }
                  ],
                  "videos": [],
                  "tags": [
                    {
                      "id": 13,
                      "name": "Ordinary Wizarding Levels",
                      "kind": "general"
                    }
                  ],
                  "project_sessions": [
                    {
                      "id": 2,
                      "solo": true,
                      "begin_at": null,
                      "end_at": null,
                      "difficulty": 5000,
                      "estimate_time": 2592000,
                      "duration_days": null,
                      "terminating_after": null,
                      "project_id": 2,
                      "campus_id": null,
                      "cursus_id": null,
                      "created_at": "2017-11-22T13:41:26.375Z",
                      "updated_at": "2017-11-22T13:41:28.347Z",
                      "max_people": null,
                      "is_subscriptable": true,
                      "scales": [
                        { "id": 2, "correction_number": 3, "is_primary": true }
                      ],
                      "uploads": [],
                      "team_behaviour": "user"
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/projects",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project",
                "full_name": "project",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "project[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "terminating_after",
                    "full_name": "project[terminating_after]",
                    "description": "The terminating after.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "exam",
                    "full_name": "project[exam]",
                    "description": "Is it exam ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "has_mark",
                    "full_name": "project[has_mark]",
                    "description": "Is it has mark ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repository",
                    "full_name": "project[repository]",
                    "description": "The repository.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "git_id",
                    "full_name": "project[git_id]",
                    "description": "The git id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "has_git",
                    "full_name": "project[has_git]",
                    "description": "Is it has git ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_subscriptable",
                    "full_name": "project[is_subscriptable]",
                    "description": "The is subscriptable.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "inherited_team",
                    "full_name": "project[inherited_team]",
                    "description": "Is it inherited team ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "minimum_mark",
                    "full_name": "project[minimum_mark]",
                    "description": "The minimum mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "parent_id",
                    "full_name": "project[parent_id]",
                    "description": "The parent id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_people",
                    "full_name": "project[max_people]",
                    "description": "The max people.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "visible",
                    "full_name": "project[visible]",
                    "description": "Is it visible ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "project[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "project[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "authors_user_ids",
                    "full_name": "project[authors_user_ids]",
                    "description": "The authors user ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "notion_ids",
                    "full_name": "project[notion_ids]",
                    "description": "The notion ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_sessions_attributes",
                    "full_name": "project[project_sessions_attributes]",
                    "description": "The project sessions attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project[project_sessions_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "campus_id",
                        "full_name": "project[project_sessions_attributes][campus_id]",
                        "description": "The campus id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "cursus_id",
                        "full_name": "project[project_sessions_attributes][cursus_id]",
                        "description": "The cursus id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "estimate_time",
                        "full_name": "project[project_sessions_attributes][estimate_time]",
                        "description": "The estimate time.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "created_at",
                        "full_name": "project[project_sessions_attributes][created_at]",
                        "description": "The created at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "updated_at",
                        "full_name": "project[project_sessions_attributes][updated_at]",
                        "description": "The updated at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "begin_at",
                        "full_name": "project[project_sessions_attributes][begin_at]",
                        "description": "The begin at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "end_at",
                        "full_name": "project[project_sessions_attributes][end_at]",
                        "description": "The end at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "max_people",
                        "full_name": "project[project_sessions_attributes][max_people]",
                        "description": "The max people.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "duration_days",
                        "full_name": "project[project_sessions_attributes][duration_days]",
                        "description": "The duration days.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "terminating_after",
                        "full_name": "project[project_sessions_attributes][terminating_after]",
                        "description": "The terminating after.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "solo",
                        "full_name": "project[project_sessions_attributes][solo]",
                        "description": "Is it solo ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "is_subscriptable",
                        "full_name": "project[project_sessions_attributes][is_subscriptable]",
                        "description": "Is it is subscriptable ? Default to true.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "minimum_mark",
                        "full_name": "project[project_sessions_attributes][minimum_mark]",
                        "description": "The minimum mark.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "team_behaviour",
                        "full_name": "project[project_sessions_attributes][team_behaviour]",
                        "description": "The team behaviour.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003eupload\u003c/code\u003e, \u003ccode\u003eby_rule\u003c/code\u003e, \u003ccode\u003enone\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project[project_sessions_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "evaluations_attributes",
                    "full_name": "project[evaluations_attributes]",
                    "description": "The evaluations attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project[evaluations_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "project[evaluations_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003escale\u003c/code\u003e, \u003ccode\u003eupload\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project[evaluations_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "attachments_attributes",
                    "full_name": "project[attachments_attributes]",
                    "description": "The attachments attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project[attachments_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "project[attachments_attributes][language_id]",
                        "description": "The language id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "project[attachments_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project[attachments_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "untranslatable",
                        "full_name": "project[attachments_attributes][untranslatable]",
                        "description": "Is it untranslatable ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_attributes",
                        "full_name": "project[attachments_attributes][attachable_attributes]",
                        "description": "The attachable attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": []
                      }
                    ]
                  },
                  {
                    "name": "projects_rules_attributes",
                    "full_name": "project[projects_rules_attributes]",
                    "description": "The projects rules attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/projects",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "project": {
                    "campus_ids": ["6", "4", "2"],
                    "cursus_ids": ["2"],
                    "description": "Cleanse williamsburg brooklyn shabby chic pinterest kickstarter diy.",
                    "has_git": "true",
                    "has_mark": "true",
                    "is_subscriptable": "true",
                    "name": "Butter In a Lordly Dish",
                    "project_sessions_attributes": [
                      {
                        "campus_id": "",
                        "cursus_id": "",
                        "estimate_time": "2592000",
                        "is_subscriptable": "true",
                        "minimum_mark": "77",
                        "solo": "true",
                        "team_behaviour": "user"
                      },
                      {
                        "campus_id": "",
                        "cursus_id": "2",
                        "estimate_time": "2592000",
                        "is_subscriptable": "true",
                        "minimum_mark": "77",
                        "solo": "true",
                        "team_behaviour": "user"
                      }
                    ],
                    "visible": "true"
                  }
                },
                "response_data": {
                  "id": 6,
                  "name": "Butter In a Lordly Dish",
                  "slug": "butter-in-a-lordly-dish",
                  "difficulty": 5000,
                  "description": "Cleanse williamsburg brooklyn shabby chic pinterest kickstarter diy.",
                  "parent": null,
                  "children": [],
                  "objectives": null,
                  "attachments": [],
                  "created_at": "2017-11-22T13:43:54.544Z",
                  "updated_at": "2017-11-22T13:43:54.647Z",
                  "exam": false,
                  "cursus": [
                    {
                      "id": 2,
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "campus": [
                    {
                      "id": 6,
                      "name": "Paris",
                      "time_zone": "Europe/Paris",
                      "language": {
                        "id": 1,
                        "name": "Français",
                        "identifier": "fr",
                        "created_at": "2017-11-22T13:40:59.462Z",
                        "updated_at": "2017-11-22T13:40:59.462Z"
                      },
                      "users_count": 19,
                      "vogsphere_id": 1
                    },
                    {
                      "id": 4,
                      "name": "Kiev",
                      "time_zone": "Europe/Kiev",
                      "language": {
                        "id": 2,
                        "name": "English",
                        "identifier": "en",
                        "created_at": "2017-11-22T13:40:59.465Z",
                        "updated_at": "2017-11-22T13:40:59.465Z"
                      },
                      "users_count": 22,
                      "vogsphere_id": null
                    },
                    {
                      "id": 2,
                      "name": "Johannesburg",
                      "time_zone": "Africa/Johannesburg",
                      "language": {
                        "id": 2,
                        "name": "English",
                        "identifier": "en",
                        "created_at": "2017-11-22T13:40:59.465Z",
                        "updated_at": "2017-11-22T13:40:59.465Z"
                      },
                      "users_count": 26,
                      "vogsphere_id": 1
                    }
                  ],
                  "skills": [],
                  "videos": [],
                  "tags": [],
                  "project_sessions": [
                    {
                      "id": 7,
                      "solo": true,
                      "begin_at": null,
                      "end_at": null,
                      "difficulty": 5000,
                      "estimate_time": 2592000,
                      "duration_days": null,
                      "terminating_after": null,
                      "project_id": 6,
                      "campus_id": null,
                      "cursus_id": null,
                      "created_at": "2017-11-22T13:43:54.566Z",
                      "updated_at": "2017-11-22T13:43:54.566Z",
                      "max_people": null,
                      "is_subscriptable": true,
                      "scales": [],
                      "uploads": [],
                      "team_behaviour": "user",
                      "minimum_mark": 77
                    },
                    {
                      "id": 8,
                      "solo": true,
                      "begin_at": null,
                      "end_at": null,
                      "difficulty": 5000,
                      "estimate_time": 2592000,
                      "duration_days": null,
                      "terminating_after": null,
                      "project_id": 6,
                      "campus_id": null,
                      "cursus_id": 2,
                      "created_at": "2017-11-22T13:43:54.574Z",
                      "updated_at": "2017-11-22T13:43:54.574Z",
                      "max_people": null,
                      "is_subscriptable": true,
                      "scales": [],
                      "uploads": [],
                      "team_behaviour": "user",
                      "minimum_mark": 77
                    }
                  ]
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/projects/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project",
                "full_name": "project",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "project[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "terminating_after",
                    "full_name": "project[terminating_after]",
                    "description": "The terminating after.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "exam",
                    "full_name": "project[exam]",
                    "description": "Is it exam ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "has_mark",
                    "full_name": "project[has_mark]",
                    "description": "Is it has mark ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repository",
                    "full_name": "project[repository]",
                    "description": "The repository.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "git_id",
                    "full_name": "project[git_id]",
                    "description": "The git id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "has_git",
                    "full_name": "project[has_git]",
                    "description": "Is it has git ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_subscriptable",
                    "full_name": "project[is_subscriptable]",
                    "description": "The is subscriptable.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "inherited_team",
                    "full_name": "project[inherited_team]",
                    "description": "Is it inherited team ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "minimum_mark",
                    "full_name": "project[minimum_mark]",
                    "description": "The minimum mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "parent_id",
                    "full_name": "project[parent_id]",
                    "description": "The parent id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_people",
                    "full_name": "project[max_people]",
                    "description": "The max people.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "visible",
                    "full_name": "project[visible]",
                    "description": "Is it visible ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "project[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_ids",
                    "full_name": "project[campus_ids]",
                    "description": "The campus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "authors_user_ids",
                    "full_name": "project[authors_user_ids]",
                    "description": "The authors user ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "notion_ids",
                    "full_name": "project[notion_ids]",
                    "description": "The notion ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_sessions_attributes",
                    "full_name": "project[project_sessions_attributes]",
                    "description": "The project sessions attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project[project_sessions_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "campus_id",
                        "full_name": "project[project_sessions_attributes][campus_id]",
                        "description": "The campus id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "cursus_id",
                        "full_name": "project[project_sessions_attributes][cursus_id]",
                        "description": "The cursus id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "estimate_time",
                        "full_name": "project[project_sessions_attributes][estimate_time]",
                        "description": "The estimate time.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "created_at",
                        "full_name": "project[project_sessions_attributes][created_at]",
                        "description": "The created at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "updated_at",
                        "full_name": "project[project_sessions_attributes][updated_at]",
                        "description": "The updated at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "begin_at",
                        "full_name": "project[project_sessions_attributes][begin_at]",
                        "description": "The begin at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "end_at",
                        "full_name": "project[project_sessions_attributes][end_at]",
                        "description": "The end at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "max_people",
                        "full_name": "project[project_sessions_attributes][max_people]",
                        "description": "The max people.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "duration_days",
                        "full_name": "project[project_sessions_attributes][duration_days]",
                        "description": "The duration days.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "terminating_after",
                        "full_name": "project[project_sessions_attributes][terminating_after]",
                        "description": "The terminating after.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "solo",
                        "full_name": "project[project_sessions_attributes][solo]",
                        "description": "Is it solo ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "is_subscriptable",
                        "full_name": "project[project_sessions_attributes][is_subscriptable]",
                        "description": "Is it is subscriptable ? Default to true.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "minimum_mark",
                        "full_name": "project[project_sessions_attributes][minimum_mark]",
                        "description": "The minimum mark.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "team_behaviour",
                        "full_name": "project[project_sessions_attributes][team_behaviour]",
                        "description": "The team behaviour.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003euser\u003c/code\u003e, \u003ccode\u003eupload\u003c/code\u003e, \u003ccode\u003eby_rule\u003c/code\u003e, \u003ccode\u003enone\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project[project_sessions_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "evaluations_attributes",
                    "full_name": "project[evaluations_attributes]",
                    "description": "The evaluations attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project[evaluations_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "project[evaluations_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003escale\u003c/code\u003e, \u003ccode\u003eupload\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project[evaluations_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "attachments_attributes",
                    "full_name": "project[attachments_attributes]",
                    "description": "The attachments attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "project[attachments_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "project[attachments_attributes][language_id]",
                        "description": "The language id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "project[attachments_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "project[attachments_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "untranslatable",
                        "full_name": "project[attachments_attributes][untranslatable]",
                        "description": "Is it untranslatable ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_attributes",
                        "full_name": "project[attachments_attributes][attachable_attributes]",
                        "description": "The attachable attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": []
                      }
                    ]
                  },
                  {
                    "name": "projects_rules_attributes",
                    "full_name": "project[projects_rules_attributes]",
                    "description": "The projects rules attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/projects/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "project": {
                    "description": "Cliche kinfolk kickstarter chia.",
                    "has_git": "true",
                    "has_mark": "true",
                    "is_subscriptable": "true",
                    "name": "Butter In a Lordly Dish",
                    "visible": "true"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/projects/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/projects/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects/retry",
            "name": "retry",
            "apis": [
              {
                "api_url": "/v2/projects/:id/retry",
                "http_method": "PATCH",
                "short_description": "Retry the project user for the current resource owner",
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:id/retry",
                "http_method": "PUT",
                "short_description": "Retry the project user for the current resource owner",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "projects_users": {
        "doc_url": "/apidoc/2.0/projects_users",
        "api_url": "/api",
        "name": "Projects users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e which did or are doing a \u003ca href='#projects'\u003eproject\u003c/a\u003e",
        "full_description": "The ProjectsUser represents a user’s subscription to a project. A subscribed user can have one team or more based on his number of attempts to this project. Be careful to always select the active team (the last team).Here are basically the different states a user can have on a project:\n\u003cul\u003e\n\u003cli\u003eHe (the user) doesn’t have a projects_user, he is \u003cstrong\u003enot registered\u003c/strong\u003e on the project.\u003c/li\u003e\n\n\u003cli\u003eHe has no team, he is actually \u003cstrong\u003esearching a group\u003c/strong\u003e, in order to create one.\u003c/li\u003e\n\n\u003cli\u003eHe has a team, which is not locked (the \u003ccode\u003elocked_at\u003c/code\u003e field is not null), he is \u003cstrong\u003ecreating a group\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\nIf the user has a locked team, then either he did, or he is doing the project. At this point, the available states are:\n\u003cul\u003e\n\u003cli\u003eHis team is closed and has a final_mark (the \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e and \u003ccode\u003efinal_mark\u003c/code\u003e fields aren’t null), he has \u003cstrong\u003efinished\u003c/strong\u003e his project. If he doesn’t have a final_mark yet, he his \u003cstrong\u003ewaiting for evaluation\u003c/strong\u003e.\u003c/li\u003e\n\n\u003cli\u003eHis team is not closed yet (and obviously doesn’t have a final mark), he is \u003cstrong\u003ein progress\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\nSome exceptional cases happen when a project has children (like piscines), or begins at a specific time (like rushes).\n\u003cul\u003e\n\u003cli\u003eThe team is locked, but the project has a \u003ccode\u003ebegin_at\u003c/code\u003e field which starts is in the future, so he his \u003cstrong\u003ewaiting to start\u003c/strong\u003e.\u003c/li\u003e\n\n\u003cli\u003eThe team is locked, but the project has children. In this case, look at the teams on the child projects, and consider this one \u003cstrong\u003ein progress\u003c/strong\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/projects_users/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/projects_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/projects_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eretriable_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003eretriable_at\u003c/code\u003e, \u003ccode\u003emarked_at\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003ecursus\u003c/code\u003e, \u003ccode\u003ecampus\u003c/code\u003e, \u003ccode\u003eretriable\u003c/code\u003e, \u003ccode\u003emarked\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "occurrence",
                      "final_mark",
                      "retriable_at",
                      "marked_at",
                      "status",
                      "cursus",
                      "campus",
                      "retriable",
                      "marked"
                    ],
                    "additional": {
                      "cursus": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return projects users with users in the given cursus"
                      },
                      "campus": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return projects users with users in the given campus"
                      },
                      "retriable": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only retriable projects users"
                      },
                      "marked": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only marked projects users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003eretriable_at\u003c/code\u003e, \u003ccode\u003emarked_at\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "occurrence",
                      "final_mark",
                      "retriable_at",
                      "marked_at",
                      "status"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/projects_users/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 68 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/projects_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/projects_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003eretriable_at\u003c/code\u003e, \u003ccode\u003emarked_at\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003ecursus\u003c/code\u003e, \u003ccode\u003ecampus\u003c/code\u003e, \u003ccode\u003eretriable\u003c/code\u003e, \u003ccode\u003emarked\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "occurrence",
                      "final_mark",
                      "retriable_at",
                      "marked_at",
                      "status",
                      "cursus",
                      "campus",
                      "retriable",
                      "marked"
                    ],
                    "additional": {
                      "cursus": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return projects users with users in the given cursus"
                      },
                      "campus": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return projects users with users in the given campus"
                      },
                      "retriable": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only retriable projects users"
                      },
                      "marked": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only marked projects users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003eretriable_at\u003c/code\u003e, \u003ccode\u003emarked_at\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "occurrence",
                      "final_mark",
                      "retriable_at",
                      "marked_at",
                      "status"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/projects_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "occurrence": 0,
                    "final_mark": null,
                    "status": "in_progress",
                    "validated?": null,
                    "current_team_id": 1,
                    "project": {
                      "id": 2,
                      "name": "Ordinary Wizarding Levels",
                      "slug": "ordinary-wizarding-levels",
                      "parent_id": null
                    },
                    "cursus_ids": [1],
                    "user": {
                      "id": 111,
                      "login": "jabinks2",
                      "url": "https://api.intra.42.fr/v2/users/jabinks2"
                    },
                    "teams": [
                      {
                        "id": 1,
                        "name": "jabinks2's group",
                        "url": "https://api.intra.42.fr/v2/teams/1",
                        "final_mark": null,
                        "project_id": 2,
                        "created_at": "2017-11-22T13:41:28.447Z",
                        "updated_at": "2017-11-22T13:41:28.519Z",
                        "status": "in_progress",
                        "terminating_at": null,
                        "users": [
                          {
                            "id": 111,
                            "login": "coundook",
                            "url": "https://api.intra.42.fr/v2/users/coundook",
                            "leader": true,
                            "occurrence": 0,
                            "validated": true,
                            "projects_user_id": 1
                          }
                        ],
                        "locked?": true,
                        "validated?": null,
                        "closed?": false,
                        "repo_url": null,
                        "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                        "locked_at": "2017-11-22T13:41:28.487Z",
                        "closed_at": null,
                        "project_session_id": 2
                      }
                    ]
                  },
                  {
                    "id": 2,
                    "occurrence": 0,
                    "final_mark": null,
                    "status": "in_progress",
                    "validated?": null,
                    "current_team_id": 2,
                    "project": {
                      "id": 4,
                      "name": "Hogwarts Quidditch Cup",
                      "slug": "hogwarts-quidditch-cup",
                      "parent_id": null
                    },
                    "cursus_ids": [1],
                    "user": {
                      "id": 108,
                      "login": "podamer2",
                      "url": "https://api.intra.42.fr/v2/users/podamer2"
                    },
                    "teams": [
                      {
                        "id": 2,
                        "name": "podamer2's group",
                        "url": "https://api.intra.42.fr/v2/teams/2",
                        "final_mark": null,
                        "project_id": 4,
                        "created_at": "2017-11-22T13:41:28.554Z",
                        "updated_at": "2017-11-22T13:41:28.608Z",
                        "status": "in_progress",
                        "terminating_at": null,
                        "users": [
                          {
                            "id": 108,
                            "login": "podamer2",
                            "url": "https://api.intra.42.fr/v2/users/podamer2",
                            "leader": true,
                            "occurrence": 0,
                            "validated": true,
                            "projects_user_id": 2
                          }
                        ],
                        "locked?": false,
                        "validated?": null,
                        "closed?": true,
                        "repo_url": null,
                        "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                        "locked_at": null,
                        "closed_at": "2017-11-22T13:41:28.578Z",
                        "project_session_id": 4
                      }
                    ]
                  },
                  {
                    "id": 3,
                    "occurrence": 0,
                    "final_mark": null,
                    "status": "creating_group",
                    "validated?": null,
                    "current_team_id": 3,
                    "project": {
                      "id": 5,
                      "name": "Quarter Finals",
                      "slug": "hogwarts-quidditch-cup-quarter-finals",
                      "parent_id": 4
                    },
                    "cursus_ids": [1],
                    "user": {
                      "id": 108,
                      "login": "podamer2",
                      "url": "https://api.intra.42.fr/v2/users/podamer2"
                    },
                    "teams": [
                      {
                        "id": 3,
                        "name": "podamer2's group",
                        "url": "https://api.intra.42.fr/v2/teams/3",
                        "final_mark": null,
                        "project_id": 5,
                        "created_at": "2017-11-22T13:41:28.661Z",
                        "updated_at": "2017-11-22T13:41:28.704Z",
                        "status": "creating_group",
                        "terminating_at": null,
                        "users": [
                          {
                            "id": 108,
                            "login": "podamer2",
                            "url": "https://api.intra.42.fr/v2/users/podamer2",
                            "leader": true,
                            "occurrence": 0,
                            "validated": true,
                            "projects_user_id": 3
                          }
                        ],
                        "locked?": false,
                        "validated?": null,
                        "closed?": false,
                        "repo_url": null,
                        "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                        "locked_at": null,
                        "closed_at": null,
                        "project_session_id": 5
                      }
                    ]
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/projects_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/projects_users/18",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 18,
                  "occurrence": 0,
                  "final_mark": null,
                  "status": "waiting_for_correction",
                  "validated?": null,
                  "current_team_id": 18,
                  "project": {
                    "id": 1,
                    "name": "Libft",
                    "slug": "libft",
                    "parent_id": null
                  },
                  "cursus_ids": [1],
                  "user": {
                    "id": 25,
                    "login": "bhutt",
                    "url": "https://api.intra.42.fr/v2/users/bhutt"
                  },
                  "teams": [
                    {
                      "id": 18,
                      "name": "bhutt's group",
                      "url": "https://api.intra.42.fr/v2/teams/18",
                      "final_mark": null,
                      "project_id": 1,
                      "created_at": "2017-11-22T13:41:30.835Z",
                      "updated_at": "2017-11-22T13:41:30.920Z",
                      "status": "waiting_for_correction",
                      "terminating_at": null,
                      "users": [
                        {
                          "id": 25,
                          "login": "bhutt",
                          "url": "https://api.intra.42.fr/v2/users/bhutt",
                          "leader": true,
                          "occurrence": 0,
                          "validated": true,
                          "projects_user_id": 18
                        }
                      ],
                      "locked?": true,
                      "validated?": null,
                      "closed?": true,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-0d4153cd-21b7-4f1a-a526-297314ddc61d-18",
                      "locked_at": "2017-11-22T13:41:30.895Z",
                      "closed_at": "2017-11-22T13:41:30.919Z",
                      "project_session_id": 1
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/projects_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/projects_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/register",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "projects_user",
                "full_name": "projects_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "projects_user[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_id",
                    "full_name": "projects_user[project_id]",
                    "description": "The project id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "projects_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given project.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "projects_user[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "projects_user[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occurrence",
                    "full_name": "projects_user[occurrence]",
                    "description": "The occurrence. Default to 0.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "projects_user[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "retriable_at",
                    "full_name": "projects_user[retriable_at]",
                    "description": "The retriable at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "marked_at",
                    "full_name": "projects_user[marked_at]",
                    "description": "The marked at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "status",
                    "full_name": "projects_user[status]",
                    "description": "The status. Default to unknown.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skip_check_permission",
                    "full_name": "projects_user[skip_check_permission]",
                    "description": "The skip check permission.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/projects_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "projects_user": { "project_id": "1", "user_id": "1" }
                },
                "response_data": {
                  "id": 69,
                  "occurrence": 0,
                  "final_mark": null,
                  "status": "in_progress",
                  "validated?": null,
                  "current_team_id": 69,
                  "project": {
                    "id": 1,
                    "name": "Libft",
                    "slug": "libft",
                    "parent_id": null
                  },
                  "cursus_ids": [1],
                  "user": {
                    "id": 1,
                    "login": "jeanne",
                    "url": "https://api.intra.42.fr/v2/users/jeanne"
                  },
                  "teams": [
                    {
                      "id": 69,
                      "name": "jeanne's group",
                      "url": "https://api.intra.42.fr/v2/teams/69",
                      "final_mark": null,
                      "project_id": 1,
                      "created_at": "2017-11-22T13:43:56.555Z",
                      "updated_at": "2017-11-22T13:43:56.625Z",
                      "status": "in_progress",
                      "terminating_at": null,
                      "users": [
                        {
                          "id": 1,
                          "login": "jeanne",
                          "url": "https://api.intra.42.fr/v2/users/jeanne",
                          "leader": true,
                          "occurrence": 0,
                          "validated": true,
                          "projects_user_id": 69
                        }
                      ],
                      "locked?": true,
                      "validated?": null,
                      "closed?": false,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-d9a02ebd-ecdb-46fd-8ce8-ecdc4ef9352c-69",
                      "locked_at": "2017-11-22T13:43:56.581Z",
                      "closed_at": null,
                      "project_session_id": 1
                    }
                  ]
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/projects_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "projects_user",
                "full_name": "projects_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "projects_user[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_id",
                    "full_name": "projects_user[project_id]",
                    "description": "The project id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "projects_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given project.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "projects_user[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "projects_user[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occurrence",
                    "full_name": "projects_user[occurrence]",
                    "description": "The occurrence. Default to 0.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "projects_user[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "retriable_at",
                    "full_name": "projects_user[retriable_at]",
                    "description": "The retriable at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "marked_at",
                    "full_name": "projects_user[marked_at]",
                    "description": "The marked at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "status",
                    "full_name": "projects_user[status]",
                    "description": "The status. Default to unknown.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skip_check_permission",
                    "full_name": "projects_user[skip_check_permission]",
                    "description": "The skip check permission.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/projects_users/18",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "projects_user": { "project_id": "1", "user_id": "1" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/projects_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/projects_users/18",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/compile",
            "name": "compile",
            "apis": [
              {
                "api_url": "/v2/projects_users/:id/compile",
                "http_method": "PATCH",
                "short_description": "Compile a projects user",
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users/:id/compile",
                "http_method": "PUT",
                "short_description": "Compile a projects user",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_users_id",
                "full_name": "project_users_id",
                "description": "The projects_user id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be Fixnum",
                "expected_type": "numeric",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/projects_users/retry",
            "name": "retry",
            "apis": [
              {
                "api_url": "/v2/projects_users/:id/retry",
                "http_method": "PATCH",
                "short_description": "Retry a projects user",
                "deprecated": null
              },
              {
                "api_url": "/v2/projects_users/:id/retry",
                "http_method": "PUT",
                "short_description": "Retry a projects user",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The projects_user id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be Fixnum",
                "expected_type": "numeric",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "force",
                "full_name": "force",
                "description": "Will force the retry if true",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor", "advanced_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "quests": {
        "doc_url": "/apidoc/2.0/quests",
        "api_url": "/api",
        "name": "Quests",
        "short_description": "Quests which can or must be done by \u003ca href='#users'\u003eusers\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/quests/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/quests",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/quests",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/quests",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/quests",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003eancestry\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eguild_size\u003c/code\u003e, \u003ccode\u003eguild_prct\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003egrade_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, \u003ccode\u003emails\u003c/code\u003e, \u003ccode\u003ecertificate_id\u003c/code\u003e, \u003ccode\u003eunlock_all_projects\u003c/code\u003e, \u003ccode\u003etries_number\u003c/code\u003e, \u003ccode\u003esuccess_number\u003c/code\u003e, \u003ccode\u003eclose_on_fail\u003c/code\u003e, \u003ccode\u003emails_from\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "kind",
                      "internal_name",
                      "duration",
                      "ancestry",
                      "description",
                      "guild_size",
                      "guild_prct",
                      "cursus_id",
                      "campus_id",
                      "created_at",
                      "updated_at",
                      "grade_id",
                      "position",
                      "mails",
                      "certificate_id",
                      "unlock_all_projects",
                      "tries_number",
                      "success_number",
                      "close_on_fail",
                      "mails_from"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003egrade_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "kind",
                      "internal_name",
                      "description",
                      "cursus_id",
                      "campus_id",
                      "created_at",
                      "updated_at",
                      "grade_id",
                      "position"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003egrade_id\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "slug",
                      "kind",
                      "internal_name",
                      "description",
                      "cursus_id",
                      "campus_id",
                      "created_at",
                      "updated_at",
                      "grade_id",
                      "position"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/quests",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "Level 14",
                    "slug": "level-14",
                    "kind": "main",
                    "internal_name": null,
                    "description": "Reach the level 14.",
                    "cursus_id": 2,
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "updated_at": "2017-11-22T13:42:11.464Z",
                    "grade_id": null,
                    "position": 1,
                    "grade": null,
                    "cursus": {
                      "id": 2,
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "name": "42",
                      "slug": "42"
                    },
                    "campus": null
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/quests/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/quests/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "name": "Level 14",
                  "slug": "level-14",
                  "kind": "main",
                  "internal_name": null,
                  "description": "Reach the level 14.",
                  "cursus_id": 2,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:42:11.464Z",
                  "updated_at": "2017-11-22T13:42:11.464Z",
                  "grade_id": null,
                  "position": 1,
                  "grade": null,
                  "cursus": {
                    "id": 2,
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "name": "42",
                    "slug": "42"
                  },
                  "campus": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/quests",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "quest",
                "full_name": "quest",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "quest[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "quest[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "quest[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "quest[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003emain\u003c/code\u003e, \u003ccode\u003eoptional\u003c/code\u003e, \u003ccode\u003emandatory\u003c/code\u003e, \u003ccode\u003erepeatable\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internal_name",
                    "full_name": "quest[internal_name]",
                    "description": "The internal name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "quest[duration]",
                    "description": "The duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "ancestry",
                    "full_name": "quest[ancestry]",
                    "description": "The ancestry.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "quest[description]",
                    "description": "The description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "guild_size",
                    "full_name": "quest[guild_size]",
                    "description": "The guild size.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "guild_prct",
                    "full_name": "quest[guild_prct]",
                    "description": "The guild prct.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "quest[cursus_id]",
                    "description": "The cursus id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "quest[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "certificate_id",
                    "full_name": "quest[certificate_id]",
                    "description": "The certificate id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "quest[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "quest[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "grade_id",
                    "full_name": "quest[grade_id]",
                    "description": "The grade id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "position",
                    "full_name": "quest[position]",
                    "description": "The position.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tries_number",
                    "full_name": "quest[tries_number]",
                    "description": "The tries number.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "success_number",
                    "full_name": "quest[success_number]",
                    "description": "The success number.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "close_on_fail",
                    "full_name": "quest[close_on_fail]",
                    "description": "Is it close on fail ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "mails_from",
                    "full_name": "quest[mails_from]",
                    "description": "The mails from.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "parent_id",
                    "full_name": "quest[parent_id]",
                    "description": "The parent id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/quests",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "quest": {
                    "close_on_fail": "",
                    "cursus_id": "1",
                    "description": "You must take a coffee.",
                    "kind": "main",
                    "mails": "",
                    "mails_from": "",
                    "name": "Take a coffee ☕️",
                    "success_number": "",
                    "tries_number": ""
                  }
                },
                "response_data": {
                  "id": 2,
                  "name": "Take a coffee ☕️",
                  "slug": "take-a-coffee",
                  "kind": "main",
                  "internal_name": null,
                  "description": "You must take a coffee.",
                  "cursus_id": 1,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:43:57.270Z",
                  "updated_at": "2017-11-22T13:43:57.270Z",
                  "grade_id": null,
                  "position": 2,
                  "guild_size": null,
                  "guild_prct": null,
                  "mails": null,
                  "duration": null,
                  "ancestry": null,
                  "grade": null,
                  "cursus": {
                    "id": 1,
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  },
                  "campus": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/quests/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/quests/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "quest",
                "full_name": "quest",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "quest[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "quest[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "quest[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "quest[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003emain\u003c/code\u003e, \u003ccode\u003eoptional\u003c/code\u003e, \u003ccode\u003emandatory\u003c/code\u003e, \u003ccode\u003erepeatable\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internal_name",
                    "full_name": "quest[internal_name]",
                    "description": "The internal name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "quest[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "ancestry",
                    "full_name": "quest[ancestry]",
                    "description": "The ancestry.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "quest[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "guild_size",
                    "full_name": "quest[guild_size]",
                    "description": "The guild size.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "guild_prct",
                    "full_name": "quest[guild_prct]",
                    "description": "The guild prct.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "quest[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "quest[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "certificate_id",
                    "full_name": "quest[certificate_id]",
                    "description": "The certificate id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "quest[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "quest[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "grade_id",
                    "full_name": "quest[grade_id]",
                    "description": "The grade id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "position",
                    "full_name": "quest[position]",
                    "description": "The position.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tries_number",
                    "full_name": "quest[tries_number]",
                    "description": "The tries number.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "success_number",
                    "full_name": "quest[success_number]",
                    "description": "The success number.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "close_on_fail",
                    "full_name": "quest[close_on_fail]",
                    "description": "Is it close on fail ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "mails_from",
                    "full_name": "quest[mails_from]",
                    "description": "The mails from.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "parent_id",
                    "full_name": "quest[parent_id]",
                    "description": "The parent id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/quests/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "quest": {
                    "close_on_fail": "",
                    "cursus_id": "2",
                    "description": "You must take a coffee.",
                    "kind": "main",
                    "mails": "",
                    "mails_from": "",
                    "name": "Take a coffee ☕️",
                    "success_number": "",
                    "tries_number": ""
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/quests/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/quests/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "quests_users": {
        "doc_url": "/apidoc/2.0/quests_users",
        "api_url": "/api",
        "name": "Quests users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e which earned an \u003ca href='#quest'\u003equest\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/quests_users/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/quests_users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003equest_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003eprct\u003c/code\u003e, \u003ccode\u003eadvancement\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "quest_id",
                      "user_id",
                      "end_at",
                      "validated_at",
                      "prct",
                      "advancement",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003equest_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003eprct\u003c/code\u003e, \u003ccode\u003eadvancement\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "quest_id",
                      "user_id",
                      "end_at",
                      "validated_at",
                      "prct",
                      "advancement",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "end",
                      "validated"
                    ],
                    "additional": {
                      "campus_id": {
                        "proc": {},
                        "all": [],
                        "description": "Return quests_users with primary campus of user equal to him"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end quests users"
                      },
                      "validated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only validated quests users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003equest_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003eprct\u003c/code\u003e, \u003ccode\u003eadvancement\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "quest_id",
                      "user_id",
                      "end_at",
                      "validated_at",
                      "prct",
                      "advancement",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/quests_users/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 5 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/quests/:quest_id/quests_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/quests_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/quests_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "quest_id",
                "full_name": "quest_id",
                "description": "The quest id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003equest_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003eprct\u003c/code\u003e, \u003ccode\u003eadvancement\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "quest_id",
                      "user_id",
                      "end_at",
                      "validated_at",
                      "prct",
                      "advancement",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003equest_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003eprct\u003c/code\u003e, \u003ccode\u003eadvancement\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "quest_id",
                      "user_id",
                      "end_at",
                      "validated_at",
                      "prct",
                      "advancement",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "end",
                      "validated"
                    ],
                    "additional": {
                      "campus_id": {
                        "proc": {},
                        "all": [],
                        "description": "Return quests_users with primary campus of user equal to him"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end quests users"
                      },
                      "validated": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only validated quests users"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003equest_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003evalidated_at\u003c/code\u003e, \u003ccode\u003eprct\u003c/code\u003e, \u003ccode\u003eadvancement\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "quest_id",
                      "user_id",
                      "end_at",
                      "validated_at",
                      "prct",
                      "advancement",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/quests_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 5,
                    "end_at": null,
                    "quest_id": 1,
                    "validated_at": null,
                    "prct": null,
                    "advancement": null,
                    "created_at": "2017-11-22T13:42:11.488Z",
                    "updated_at": "2017-11-22T13:42:11.488Z",
                    "user": {
                      "id": 113,
                      "login": "bhutt3",
                      "url": "https://api.intra.42.fr/v2/users/bhutt3"
                    },
                    "quest": {
                      "id": 1,
                      "name": "Level 14",
                      "slug": "level-14",
                      "kind": "main",
                      "internal_name": null,
                      "description": "Reach the level 14.",
                      "cursus_id": 2,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:42:11.464Z",
                      "updated_at": "2017-11-22T13:42:11.464Z",
                      "grade_id": null,
                      "position": 1
                    }
                  },
                  {
                    "id": 4,
                    "end_at": null,
                    "quest_id": 1,
                    "validated_at": null,
                    "prct": null,
                    "advancement": null,
                    "created_at": "2017-11-22T13:42:11.484Z",
                    "updated_at": "2017-11-22T13:42:11.484Z",
                    "user": {
                      "id": 53,
                      "login": "dvader",
                      "url": "https://api.intra.42.fr/v2/users/dvader"
                    },
                    "quest": {
                      "id": 1,
                      "name": "Level 14",
                      "slug": "level-14",
                      "kind": "main",
                      "internal_name": null,
                      "description": "Reach the level 14.",
                      "cursus_id": 2,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:42:11.464Z",
                      "updated_at": "2017-11-22T13:42:11.464Z",
                      "grade_id": null,
                      "position": 1
                    }
                  },
                  {
                    "id": 3,
                    "end_at": null,
                    "quest_id": 1,
                    "validated_at": null,
                    "prct": null,
                    "advancement": null,
                    "created_at": "2017-11-22T13:42:11.480Z",
                    "updated_at": "2017-11-22T13:42:11.480Z",
                    "user": {
                      "id": 15,
                      "login": "mwindu",
                      "url": "https://api.intra.42.fr/v2/users/mwindu"
                    },
                    "quest": {
                      "id": 1,
                      "name": "Level 14",
                      "slug": "level-14",
                      "kind": "main",
                      "internal_name": null,
                      "description": "Reach the level 14.",
                      "cursus_id": 2,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:42:11.464Z",
                      "updated_at": "2017-11-22T13:42:11.464Z",
                      "grade_id": null,
                      "position": 1
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/quests_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/quests_users/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "end_at": null,
                  "quest_id": 1,
                  "validated_at": null,
                  "prct": null,
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.480Z",
                  "updated_at": "2017-11-22T13:42:11.480Z",
                  "user": {
                    "id": 15,
                    "login": "mwindu",
                    "url": "https://api.intra.42.fr/v2/users/mwindu"
                  },
                  "quest": {
                    "id": 1,
                    "name": "Level 14",
                    "slug": "level-14",
                    "kind": "main",
                    "internal_name": null,
                    "description": "Reach the level 14.",
                    "cursus_id": 2,
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "updated_at": "2017-11-22T13:42:11.464Z",
                    "grade_id": null,
                    "position": 1
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/quests_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "quests_user",
                "full_name": "quests_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "quest_id",
                    "full_name": "quests_user[quest_id]",
                    "description": "The quest id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "quests_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "quests_user[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated_at",
                    "full_name": "quests_user[validated_at]",
                    "description": "The validated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "prct",
                    "full_name": "quests_user[prct]",
                    "description": "The prct.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "advancement",
                    "full_name": "quests_user[advancement]",
                    "description": "The advancement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/quests_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "quests_user": {
                    "end_at": "2017-11-24 13:43:10 UTC",
                    "prct": "42",
                    "quest_id": "4",
                    "user_id": "117"
                  }
                },
                "response_data": {
                  "id": 6,
                  "end_at": "2017-11-24T13:43:10.000Z",
                  "quest_id": 4,
                  "validated_at": null,
                  "prct": 42,
                  "advancement": null,
                  "created_at": "2017-11-22T13:43:58.265Z",
                  "updated_at": "2017-11-22T13:43:58.265Z",
                  "user": {
                    "id": 117,
                    "login": "leiorgan",
                    "url": "https://api.intra.42.fr/v2/users/leiorgan"
                  },
                  "quest": {
                    "id": 4,
                    "name": "Take a coffee ☕️",
                    "slug": "take-a-coffee",
                    "kind": "main",
                    "internal_name": null,
                    "description": "You must take a coffee.",
                    "cursus_id": 2,
                    "campus_id": null,
                    "created_at": "2017-11-22T13:43:58.221Z",
                    "updated_at": "2017-11-22T13:43:58.221Z",
                    "grade_id": null,
                    "position": 2,
                    "guild_size": null,
                    "guild_prct": null,
                    "mails": null,
                    "duration": null,
                    "ancestry": null
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/quests_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/quests_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "quests_user",
                "full_name": "quests_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "quest_id",
                    "full_name": "quests_user[quest_id]",
                    "description": "The quest id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "quests_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "quests_user[end_at]",
                    "description": "The end at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated_at",
                    "full_name": "quests_user[validated_at]",
                    "description": "The validated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "prct",
                    "full_name": "quests_user[prct]",
                    "description": "The prct.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "advancement",
                    "full_name": "quests_user[advancement]",
                    "description": "The advancement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/quests_users/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "quests_user": {
                    "end_at": "2017-11-24 13:43:10 UTC",
                    "prct": "42",
                    "quest_id": "5",
                    "user_id": "31"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/quests_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/quests_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/quests_users/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "roles": {
        "doc_url": "/apidoc/2.0/roles",
        "api_url": "/api",
        "name": "Roles",
        "short_description": "Grants particular privileges to entities like \u003ca href='#users'\u003eusers\u003c/a\u003e and \u003ca href='#apps'\u003eapplications\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/roles/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/roles",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/roles",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "description",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/roles",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 17,
                    "name": "Companies Manager",
                    "description": "Manage companies"
                  },
                  {
                    "id": 16,
                    "name": "Official App",
                    "description": "Approved application without rate limits"
                  },
                  {
                    "id": 15,
                    "name": "Achievements Manager",
                    "description": "Manage users achievements and titles"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/roles/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/roles/13",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 13,
                  "name": "Basic Tutor",
                  "description": "Manage projects, scales and all cursus related data"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/roles",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "role",
                "full_name": "role",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "role[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "role[description]",
                    "description": "The description.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/roles",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "role": {
                    "description": "Synchronised uniform parallelism",
                    "name": "astronomer"
                  }
                },
                "response_data": {
                  "id": 18,
                  "name": "astronomer",
                  "description": "Synchronised uniform parallelism"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/roles/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/roles/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "role",
                "full_name": "role",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "role[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "role[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/roles/13",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "role": {
                    "description": "Synchronised uniform parallelism",
                    "name": "astronomer"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/roles/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/roles/13",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["intrateam"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "roles_entities": {
        "doc_url": "/apidoc/2.0/roles_entities",
        "api_url": "/api",
        "name": "Roles entities",
        "short_description": "The \u003ca href='#apps'\u003eapplications\u003c/a\u003e linked to a role",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/roles_entities/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/roles_entities/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erole_id\u003c/code\u003e, \u003ccode\u003eentity_id\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eentity_type\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "role_id",
                      "entity_id",
                      "expires_at",
                      "created_at",
                      "updated_at",
                      "entity_type"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erole_id\u003c/code\u003e, \u003ccode\u003eentity_id\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eentity_type\u003c/code\u003e, \u003ccode\u003eexpires\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "role_id",
                      "entity_id",
                      "expires_at",
                      "created_at",
                      "updated_at",
                      "entity_type",
                      "expires"
                    ],
                    "additional": {
                      "expires": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only expires roles entities"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erole_id\u003c/code\u003e, \u003ccode\u003eentity_id\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eentity_type\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "role_id",
                      "entity_id",
                      "expires_at",
                      "created_at",
                      "updated_at",
                      "entity_type"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/roles_entities/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 20 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles_entities/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/roles/:role_id/roles_entities",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/roles_entities",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "role_id",
                "full_name": "role_id",
                "description": "The role id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erole_id\u003c/code\u003e, \u003ccode\u003eentity_id\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eentity_type\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "role_id",
                      "entity_id",
                      "expires_at",
                      "created_at",
                      "updated_at",
                      "entity_type"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erole_id\u003c/code\u003e, \u003ccode\u003eentity_id\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eentity_type\u003c/code\u003e, \u003ccode\u003eexpires\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "role_id",
                      "entity_id",
                      "expires_at",
                      "created_at",
                      "updated_at",
                      "entity_type",
                      "expires"
                    ],
                    "additional": {
                      "expires": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only expires roles entities"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003erole_id\u003c/code\u003e, \u003ccode\u003eentity_id\u003c/code\u003e, \u003ccode\u003eexpires_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eentity_type\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "role_id",
                      "entity_id",
                      "expires_at",
                      "created_at",
                      "updated_at",
                      "entity_type"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/roles_entities",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 20,
                    "entity_id": 7,
                    "entity_type": "Doorkeeper::Application",
                    "created_at": "2017-11-22T13:43:11.431Z",
                    "expires_at": null,
                    "entity": {
                      "id": 7,
                      "name": "test intrateam staff oauth application",
                      "description": null,
                      "image": null,
                      "website": null,
                      "public": true,
                      "scopes": [],
                      "created_at": "2017-11-22T13:43:11.377Z",
                      "updated_at": "2017-11-22T13:43:11.434Z",
                      "owner": {
                        "id": 74,
                        "login": "pamidala",
                        "url": "https://api.intra.42.fr/v2/users/pamidala"
                      },
                      "rate_limit": 1800
                    },
                    "role": {
                      "id": 1,
                      "name": "Intrateam",
                      "description": "manage all"
                    }
                  },
                  {
                    "id": 19,
                    "entity_id": 7,
                    "entity_type": "Doorkeeper::Application",
                    "created_at": "2017-11-22T13:43:11.413Z",
                    "expires_at": null,
                    "entity": {
                      "id": 7,
                      "name": "test intrateam staff oauth application",
                      "description": null,
                      "image": null,
                      "website": null,
                      "public": true,
                      "scopes": [],
                      "created_at": "2017-11-22T13:43:11.377Z",
                      "updated_at": "2017-11-22T13:43:11.434Z",
                      "owner": {
                        "id": 74,
                        "login": "pamidala",
                        "url": "https://api.intra.42.fr/v2/users/pamidala"
                      },
                      "rate_limit": 1800
                    },
                    "role": {
                      "id": 11,
                      "name": "Advanced Staff",
                      "description": "Member of the staff, with higher privileges"
                    }
                  },
                  {
                    "id": 18,
                    "entity_id": 7,
                    "entity_type": "Doorkeeper::Application",
                    "created_at": "2017-11-22T13:43:11.399Z",
                    "expires_at": null,
                    "entity": {
                      "id": 7,
                      "name": "test intrateam staff oauth application",
                      "description": null,
                      "image": null,
                      "website": null,
                      "public": true,
                      "scopes": [],
                      "created_at": "2017-11-22T13:43:11.377Z",
                      "updated_at": "2017-11-22T13:43:11.434Z",
                      "owner": {
                        "id": 74,
                        "login": "pamidala",
                        "url": "https://api.intra.42.fr/v2/users/pamidala"
                      },
                      "rate_limit": 1800
                    },
                    "role": {
                      "id": 7,
                      "name": "Basic Staff",
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles_entities/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/roles_entities/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/roles_entities/9",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 9,
                  "entity_id": 4,
                  "entity_type": "Doorkeeper::Application",
                  "created_at": "2017-11-22T13:43:11.249Z",
                  "expires_at": null,
                  "entity": {
                    "id": 4,
                    "name": "test shop staff oauth application",
                    "description": null,
                    "image": null,
                    "website": null,
                    "public": true,
                    "scopes": [],
                    "created_at": "2017-11-22T13:43:11.203Z",
                    "updated_at": "2017-11-22T13:43:11.253Z",
                    "owner": {},
                    "rate_limit": 1800
                  },
                  "role": {
                    "id": 10,
                    "name": "Shop Manager",
                    "description": "je suis un super manager"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles_entities/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/roles_entities",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "roles_entity",
                "full_name": "roles_entity",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "role_id",
                    "full_name": "roles_entity[role_id]",
                    "description": "The role id. Must be unique in the scope of a given entity id and entity type.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "entity_id",
                    "full_name": "roles_entity[entity_id]",
                    "description": "The entity id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "expires_at",
                    "full_name": "roles_entity[expires_at]",
                    "description": "The expires at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "entity_type",
                    "full_name": "roles_entity[entity_type]",
                    "description": "The entity type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003eDoorkeeper::Application\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/roles_entities",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "roles_entity": {
                    "entity_id": "8",
                    "entity_type": "Doorkeeper::Application",
                    "role_id": "8"
                  }
                },
                "response_data": {
                  "id": 21,
                  "entity_id": 8,
                  "entity_type": "Doorkeeper::Application",
                  "created_at": "2017-11-22T13:43:59.468Z",
                  "expires_at": null,
                  "entity": {
                    "id": 8,
                    "name": "test forbidden application",
                    "description": null,
                    "image": null,
                    "website": null,
                    "public": false,
                    "scopes": [],
                    "created_at": "2017-11-22T13:43:11.638Z",
                    "updated_at": "2017-11-22T13:43:59.474Z",
                    "owner": {
                      "id": 116,
                      "login": "mwindu2",
                      "url": "https://api.intra.42.fr/v2/users/mwindu2"
                    },
                    "rate_limit": 1800
                  },
                  "role": {
                    "id": 8,
                    "name": "Translater",
                    "description": "Ability to create and manage content translations"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles_entities/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/roles_entities/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/roles_entities/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "roles_entity",
                "full_name": "roles_entity",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "role_id",
                    "full_name": "roles_entity[role_id]",
                    "description": "The role id. Must be unique in the scope of a given entity id and entity type.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "entity_id",
                    "full_name": "roles_entity[entity_id]",
                    "description": "The entity id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "expires_at",
                    "full_name": "roles_entity[expires_at]",
                    "description": "The expires at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "entity_type",
                    "full_name": "roles_entity[entity_type]",
                    "description": "The entity type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003eDoorkeeper::Application\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/roles_entities/9",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "roles_entity": {
                    "entity_id": "8",
                    "entity_type": "Doorkeeper::Application",
                    "role_id": "8"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/roles_entities/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/roles_entities/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/roles_entities/9",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "rules": {
        "doc_url": "/apidoc/2.0/rules",
        "api_url": "/api",
        "name": "Rules",
        "short_description": "A rule for a \u003ca href='#projects'\u003eproject\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/rules/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/rules",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/rules",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "kind",
                      "name",
                      "description",
                      "created_at",
                      "updated_at",
                      "slug",
                      "internal_name"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "kind",
                      "name",
                      "description",
                      "created_at",
                      "updated_at",
                      "slug",
                      "internal_name"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003einternal_name\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "kind",
                      "name",
                      "description",
                      "created_at",
                      "updated_at",
                      "slug",
                      "internal_name"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/rules",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 34,
                    "kind": "inscription",
                    "name": "First name starting by",
                    "description": "The user first name must start by the #{letter} letter",
                    "created_at": "2016-05-31T15:00:49.898Z",
                    "updated_at": "2016-05-31T15:00:49.898Z",
                    "slug": "inscription-first-name-starting-by",
                    "internal_name": "FirstNameStartingBy",
                    "params": [
                      {
                        "id": 27,
                        "name": "letter",
                        "default_value": "",
                        "rule_id": 34,
                        "created_at": "2016-05-31T15:00:49.905Z",
                        "updated_at": "2016-05-31T15:00:49.905Z",
                        "data_type": "string"
                      }
                    ],
                    "project_sessions_rules": []
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/rules/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/rules/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/rules/34",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 34,
                  "kind": "inscription",
                  "name": "First name starting by",
                  "description": "The user first name must start by the #{letter} letter",
                  "created_at": "2016-05-31T15:00:49.898Z",
                  "updated_at": "2016-05-31T15:00:49.898Z",
                  "slug": "inscription-first-name-starting-by",
                  "internal_name": "FirstNameStartingBy",
                  "params": [
                    {
                      "id": 27,
                      "name": "letter",
                      "default_value": "",
                      "rule_id": 34,
                      "created_at": "2016-05-31T15:00:49.905Z",
                      "updated_at": "2016-05-31T15:00:49.905Z",
                      "data_type": "string"
                    }
                  ],
                  "project_sessions_rules": []
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              },
              {
                "verb": "GET",
                "path": "/v2/rules/6",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 6,
                  "kind": "inscription",
                  "name": "Skill level min",
                  "description": "be at least level %{level} at %{skill} in cursus %{cursus}",
                  "created_at": "2017-11-22T13:41:01.907Z",
                  "updated_at": "2017-11-22T13:41:01.907Z",
                  "slug": "inscription-skill-level-min",
                  "internal_name": "SkillLevelMin",
                  "params": []
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/rules/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/rules",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/rules",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "rule",
                "full_name": "rule",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "rule[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "rule[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003einscription\u003c/code\u003e, \u003ccode\u003eretry_inscription\u003c/code\u003e, \u003ccode\u003ecorrection\u003c/code\u003e, \u003ccode\u003efinal_compilation\u003c/code\u003e, \u003ccode\u003eeval_compilation\u003c/code\u003e, \u003ccode\u003eretriable\u003c/code\u003e, \u003ccode\u003egroup_validation\u003c/code\u003e, \u003ccode\u003eteam_generation\u003c/code\u003e, \u003ccode\u003eexperience_modification\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "rule[name]",
                    "description": "The name. Must be unique in the scope of a given kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "rule[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "rule[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "rule[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "rule[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internal_name",
                    "full_name": "rule[internal_name]",
                    "description": "The internal name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "params_attributes",
                    "full_name": "rule[params_attributes]",
                    "description": "The params attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "rule[params_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "name",
                        "full_name": "rule[params_attributes][name]",
                        "description": "The name.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "default_value",
                        "full_name": "rule[params_attributes][default_value]",
                        "description": "The default value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "rule_id",
                        "full_name": "rule[params_attributes][rule_id]",
                        "description": "The rule id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "data_type",
                        "full_name": "rule[params_attributes][data_type]",
                        "description": "The data type.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003estring\u003c/code\u003e, \u003ccode\u003eparsed_string\u003c/code\u003e, \u003ccode\u003einteger\u003c/code\u003e, \u003ccode\u003earray\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "rule[params_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/rules",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "rule": {
                    "description": "The user first name must start by the #{letter} letter",
                    "internal_name": "FirstNameStartingBy",
                    "kind": "inscription",
                    "name": "First name starting by",
                    "params_attributes": [
                      {
                        "data_type": "string",
                        "default_value": "",
                        "name": "letter"
                      }
                    ]
                  }
                },
                "response_data": {
                  "id": 11,
                  "kind": "inscription",
                  "name": "First name starting by",
                  "description": "The user first name must start by the #{letter} letter",
                  "created_at": "2017-11-22T13:43:59.860Z",
                  "updated_at": "2017-11-22T13:43:59.860Z",
                  "slug": "inscription-first-name-starting-by",
                  "internal_name": "FirstNameStartingBy",
                  "params": [
                    {
                      "id": 1,
                      "name": "letter",
                      "default_value": "",
                      "rule_id": 11,
                      "created_at": "2017-11-22T13:43:59.863Z",
                      "updated_at": "2017-11-22T13:43:59.863Z",
                      "data_type": "string"
                    }
                  ]
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/rules/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/rules/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/rules/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "rule",
                "full_name": "rule",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "rule[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "rule[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003einscription\u003c/code\u003e, \u003ccode\u003eretry_inscription\u003c/code\u003e, \u003ccode\u003ecorrection\u003c/code\u003e, \u003ccode\u003efinal_compilation\u003c/code\u003e, \u003ccode\u003eeval_compilation\u003c/code\u003e, \u003ccode\u003eretriable\u003c/code\u003e, \u003ccode\u003egroup_validation\u003c/code\u003e, \u003ccode\u003eteam_generation\u003c/code\u003e, \u003ccode\u003eexperience_modification\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "rule[name]",
                    "description": "The name. Must be unique in the scope of a given kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "description",
                    "full_name": "rule[description]",
                    "description": "The description.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "rule[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "rule[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "slug",
                    "full_name": "rule[slug]",
                    "description": "The slug.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "internal_name",
                    "full_name": "rule[internal_name]",
                    "description": "The internal name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "params_attributes",
                    "full_name": "rule[params_attributes]",
                    "description": "The params attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "rule[params_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "name",
                        "full_name": "rule[params_attributes][name]",
                        "description": "The name.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "default_value",
                        "full_name": "rule[params_attributes][default_value]",
                        "description": "The default value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "rule_id",
                        "full_name": "rule[params_attributes][rule_id]",
                        "description": "The rule id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "data_type",
                        "full_name": "rule[params_attributes][data_type]",
                        "description": "The data type.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be one of: \u003ccode\u003estring\u003c/code\u003e, \u003ccode\u003eparsed_string\u003c/code\u003e, \u003ccode\u003einteger\u003c/code\u003e, \u003ccode\u003earray\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "rule[params_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/rules/6",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "rule": {
                    "description": "The user first name must start by the #{letter} letter",
                    "internal_name": "FirstNameStartingBy",
                    "kind": "inscription",
                    "name": "First name starting by",
                    "params_attributes": [
                      {
                        "data_type": "string",
                        "default_value": "",
                        "name": "letter"
                      }
                    ]
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/rules/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/rules/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/rules/6",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "scale_teams": {
        "doc_url": "/apidoc/2.0/scale_teams",
        "api_url": "/api",
        "name": "Scale teams",
        "short_description": "A defence of a \u003ca href='#teams'\u003eteam\u003c/a\u003e (on a \u003ca href='#projects'\u003eproject\u003c/a\u003e), involving an evaluator",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/scale_teams/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/scale_teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/scale_teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/scale_teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003escale_id\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eold_feedback\u003c/code\u003e, \u003ccode\u003efeedback_rating\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003etruant_id\u003c/code\u003e, \u003ccode\u003eflag_id\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003eip\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003efilled_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "scale_id",
                      "team_id",
                      "comment",
                      "old_feedback",
                      "feedback_rating",
                      "final_mark",
                      "truant_id",
                      "flag_id",
                      "token",
                      "ip",
                      "internship_id",
                      "filled_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003escale_id\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eold_feedback\u003c/code\u003e, \u003ccode\u003efeedback_rating\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003etruant_id\u003c/code\u003e, \u003ccode\u003eflag_id\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003eip\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003efilled_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003efilled\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "scale_id",
                      "team_id",
                      "comment",
                      "old_feedback",
                      "feedback_rating",
                      "final_mark",
                      "truant_id",
                      "flag_id",
                      "token",
                      "ip",
                      "internship_id",
                      "filled_at",
                      "campus_id",
                      "cursus_id",
                      "future",
                      "filled"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "cursus_id": { "proc": {}, "all": [], "description": "" },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only scale teams which begins in the future"
                      },
                      "filled": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only filled scale teams"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003escale_id\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eold_feedback\u003c/code\u003e, \u003ccode\u003efeedback_rating\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003etruant_id\u003c/code\u003e, \u003ccode\u003eflag_id\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003eip\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003efilled_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "scale_id",
                      "team_id",
                      "comment",
                      "old_feedback",
                      "feedback_rating",
                      "final_mark",
                      "truant_id",
                      "flag_id",
                      "token",
                      "ip",
                      "internship_id",
                      "filled_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/scale_teams/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 1 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scale_teams/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/scale_teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/scale_teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/scale_teams/as_corrector",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/scale_teams/as_corrected",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/scale_teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/me/scale_teams/as_corrector",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/me/scale_teams/as_corrected",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/me/scale_teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by begin_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003escale_id\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eold_feedback\u003c/code\u003e, \u003ccode\u003efeedback_rating\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003etruant_id\u003c/code\u003e, \u003ccode\u003eflag_id\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003eip\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003efilled_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "begin_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "scale_id",
                      "team_id",
                      "comment",
                      "old_feedback",
                      "feedback_rating",
                      "final_mark",
                      "truant_id",
                      "flag_id",
                      "token",
                      "ip",
                      "internship_id",
                      "filled_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003escale_id\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eold_feedback\u003c/code\u003e, \u003ccode\u003efeedback_rating\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003etruant_id\u003c/code\u003e, \u003ccode\u003eflag_id\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003eip\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003efilled_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003efilled\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "scale_id",
                      "team_id",
                      "comment",
                      "old_feedback",
                      "feedback_rating",
                      "final_mark",
                      "truant_id",
                      "flag_id",
                      "token",
                      "ip",
                      "internship_id",
                      "filled_at",
                      "campus_id",
                      "cursus_id",
                      "future",
                      "filled"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "cursus_id": { "proc": {}, "all": [], "description": "" },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only scale teams which begins in the future"
                      },
                      "filled": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only filled scale teams"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003escale_id\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eold_feedback\u003c/code\u003e, \u003ccode\u003efeedback_rating\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003etruant_id\u003c/code\u003e, \u003ccode\u003eflag_id\u003c/code\u003e, \u003ccode\u003etoken\u003c/code\u003e, \u003ccode\u003eip\u003c/code\u003e, \u003ccode\u003einternship_id\u003c/code\u003e, \u003ccode\u003efilled_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "begin_at",
                      "created_at",
                      "updated_at",
                      "scale_id",
                      "team_id",
                      "comment",
                      "old_feedback",
                      "feedback_rating",
                      "final_mark",
                      "truant_id",
                      "flag_id",
                      "token",
                      "ip",
                      "internship_id",
                      "filled_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/scale_teams",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scale_teams/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/scale_teams/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/scale_teams/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "scale_id": 1,
                  "comment": null,
                  "created_at": "2017-11-22T13:42:09.187Z",
                  "updated_at": "2017-11-22T13:42:09.187Z",
                  "feedback": null,
                  "feedback_rating": null,
                  "final_mark": null,
                  "flag": {
                    "id": 1,
                    "name": "Ok",
                    "positive": true,
                    "icon": "check-4",
                    "created_at": "2017-11-22T13:41:01.837Z",
                    "updated_at": "2017-11-22T13:41:01.837Z"
                  },
                  "begin_at": "2017-11-24T18:00:00.000Z",
                  "correcteds": "invisible",
                  "corrector": "invisible",
                  "truant": {},
                  "filled_at": null,
                  "scale": {
                    "id": 1,
                    "evaluation_id": 1,
                    "name": "Utah ducks",
                    "is_primary": true,
                    "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                    "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                    "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                    "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                    "created_at": "2017-11-22T13:41:27.388Z",
                    "correction_number": 3,
                    "duration": 1800,
                    "manual_subscription": true,
                    "languages": [
                      {
                        "id": 3,
                        "name": "Romanian",
                        "identifier": "ro",
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      }
                    ]
                  },
                  "feedbacks": []
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scale_teams/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/scale_teams",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "With this call, the evaluator is set as the token’s user_id. If you want to set an evaluation for a particular user, use the \u003ca href=\"/apidoc/2.0/scale_teams/multiple_create.html\"\u003emultiple_create\u003c/a\u003e call",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team",
                "full_name": "scale_team",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "team_id",
                    "full_name": "scale_team[team_id]",
                    "description": "The team id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "scale_id",
                    "full_name": "scale_team[scale_id]",
                    "description": "The scale id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "scale_team[comment]",
                    "description": "The comment. Maximum length is 1024.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "flag_id",
                    "full_name": "scale_team[flag_id]",
                    "description": "The flag id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "scale_team[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "truant_id",
                    "full_name": "scale_team[truant_id]",
                    "description": "The truant id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "answers_attributes",
                    "full_name": "scale_team[answers_attributes]",
                    "description": "The answers attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "question_id",
                        "full_name": "scale_team[answers_attributes][question_id]",
                        "description": "The question id. Must be unique in the scope of a given scalable entity.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "scale_team[answers_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "scale_team[answers_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/scale_teams",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "scale_team": {
                    "begin_at": "2017-11-27 09:00:00 UTC",
                    "scale_id": "1",
                    "team_id": "68"
                  }
                },
                "response_data": {
                  "id": 2,
                  "scale_id": 1,
                  "comment": null,
                  "created_at": "2017-11-22T13:44:01.281Z",
                  "updated_at": "2017-11-22T13:44:01.281Z",
                  "feedback": null,
                  "feedback_rating": null,
                  "final_mark": null,
                  "flag": {
                    "id": 1,
                    "name": "Ok",
                    "positive": true,
                    "icon": "check-4",
                    "created_at": "2017-11-22T13:41:01.837Z",
                    "updated_at": "2017-11-22T13:41:01.837Z"
                  },
                  "begin_at": null,
                  "correcteds": [
                    {
                      "id": 125,
                      "login": "sebulseb",
                      "url": "https://api.intra.42.fr/v2/users/sebulseb"
                    }
                  ],
                  "corrector": {},
                  "truant": {},
                  "filled_at": null,
                  "scale": {
                    "id": 1,
                    "evaluation_id": 1,
                    "name": "Utah ducks",
                    "is_primary": true,
                    "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                    "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                    "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                    "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                    "created_at": "2017-11-22T13:41:27.388Z",
                    "correction_number": 3,
                    "duration": 1800,
                    "manual_subscription": true,
                    "languages": [
                      {
                        "id": 3,
                        "name": "Romanian",
                        "identifier": "ro",
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      }
                    ]
                  },
                  "team": {
                    "id": 68,
                    "name": "sebulseb's group",
                    "url": "https://api.intra.42.fr/v2/teams/68",
                    "final_mark": null,
                    "project_id": 1,
                    "created_at": "2017-11-22T13:41:37.418Z",
                    "updated_at": "2017-11-22T13:44:01.294Z",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "users": [
                      {
                        "id": 125,
                        "login": "sebulseb",
                        "url": "https://api.intra.42.fr/v2/users/sebulseb",
                        "leader": true,
                        "occurrence": 0,
                        "validated": true,
                        "projects_user_id": 68
                      }
                    ],
                    "locked?": true,
                    "validated?": null,
                    "closed?": true,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                    "locked_at": "2017-11-22T13:41:37.471Z",
                    "closed_at": "2017-11-22T13:41:37.496Z",
                    "project_session_id": 1
                  },
                  "feedbacks": []
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scale_teams/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/scale_teams/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/scale_teams/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "The final_mark of the scale_team is calculated automatically from the answers values. If you want to patch the mark of a project for a student, patching the \u003ccode\u003eteam.final_mark\u003c/code\u003e is the right way to do. It will recompile the \u003ccode\u003eproject_user.final_mark\u003c/code\u003e. If you really want to update the final_mark of the scale_team, you need to patch the \u003ccode\u003eanswers_attributes\u003c/code\u003e.",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale_team",
                "full_name": "scale_team",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "team_id",
                    "full_name": "scale_team[team_id]",
                    "description": "The team id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "scale_id",
                    "full_name": "scale_team[scale_id]",
                    "description": "The scale id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "scale_team[comment]",
                    "description": "The comment. Maximum length is 1024.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "flag_id",
                    "full_name": "scale_team[flag_id]",
                    "description": "The flag id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "scale_team[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "truant_id",
                    "full_name": "scale_team[truant_id]",
                    "description": "The truant id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "answers_attributes",
                    "full_name": "scale_team[answers_attributes]",
                    "description": "The answers attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "question_id",
                        "full_name": "scale_team[answers_attributes][question_id]",
                        "description": "The question id. Must be unique in the scope of a given scalable entity.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "value",
                        "full_name": "scale_team[answers_attributes][value]",
                        "description": "The value.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "scale_team[answers_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/scale_teams/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "scale_team": {
                    "begin_at": "2017-11-27 09:00:00 UTC",
                    "scale_id": "1",
                    "team_id": "68",
                    "answers_attributes": [
                      { "question_id": "1", "value": "1", "id": "1" },
                      { "question_id": "2", "value": "1", "id": "2" }
                    ]
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scale_teams/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/scale_teams/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scale_teams/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/scale_teams/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scale_teams/multiple_create",
            "name": "multiple_create",
            "apis": [
              {
                "api_url": "/v2/scale_teams/multiple_create",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "This calls allow the creation of one or multiple \u003ccode\u003escale_teams\u003c/code\u003e in a single call. Creating a new scale_team without an \u003ccode\u003euser_id\u003c/code\u003e and with a \u003ccode\u003efinal_mark\u003c/code\u003e will act as a \u003cem\u003emoulinette\u003c/em\u003e mark. To be more comfortable, and for readability, we recommend that you send the data as an array of JSON objects.",
            "errors": [],
            "params": [
              {
                "name": "scale_teams",
                "full_name": "scale_teams",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be an Array of nested elements",
                "expected_type": "array",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": []
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/scale_teams/multiple_create",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "scale_teams": [
                    {
                      "begin_at": "2017-11-27 09:00:00 UTC",
                      "scale_id": "1",
                      "team_id": "68"
                    }
                  ]
                },
                "response_data": [
                  {
                    "id": 4,
                    "scale_id": 1,
                    "comment": null,
                    "created_at": "2017-11-22T13:44:01.678Z",
                    "updated_at": "2017-11-22T13:44:01.678Z",
                    "feedback": null,
                    "feedback_rating": null,
                    "final_mark": null,
                    "flag": {
                      "id": 1,
                      "name": "Ok",
                      "positive": true,
                      "icon": "check-4",
                      "created_at": "2017-11-22T13:41:01.837Z",
                      "updated_at": "2017-11-22T13:41:01.837Z"
                    },
                    "begin_at": "2017-11-27T09:00:00.000Z",
                    "correcteds": [
                      {
                        "id": 125,
                        "login": "sebulseb",
                        "url": "https://api.intra.42.fr/v2/users/sebulseb"
                      }
                    ],
                    "corrector": {},
                    "truant": {},
                    "filled_at": null,
                    "scale": {
                      "id": 1,
                      "evaluation_id": 1,
                      "name": "Utah ducks",
                      "is_primary": true,
                      "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                      "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                      "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                      "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                      "created_at": "2017-11-22T13:41:27.388Z",
                      "correction_number": 3,
                      "duration": 1800,
                      "manual_subscription": true,
                      "languages": [
                        {
                          "id": 3,
                          "name": "Romanian",
                          "identifier": "ro",
                          "created_at": "2017-11-22T13:40:59.468Z",
                          "updated_at": "2017-11-22T13:41:26.139Z"
                        }
                      ]
                    },
                    "team": {
                      "id": 68,
                      "name": "sebulseb's group",
                      "url": "https://api.intra.42.fr/v2/teams/68",
                      "final_mark": null,
                      "project_id": 1,
                      "created_at": "2017-11-22T13:41:37.418Z",
                      "updated_at": "2017-11-22T13:44:01.687Z",
                      "status": "waiting_for_correction",
                      "terminating_at": null,
                      "users": [
                        {
                          "id": 125,
                          "login": "sebulseb",
                          "url": "https://api.intra.42.fr/v2/users/sebulseb",
                          "leader": true,
                          "occurrence": 0,
                          "validated": true,
                          "projects_user_id": 68
                        }
                      ],
                      "locked?": true,
                      "validated?": null,
                      "closed?": true,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                      "locked_at": "2017-11-22T13:41:37.471Z",
                      "closed_at": "2017-11-22T13:41:37.496Z",
                      "project_session_id": 1
                    },
                    "feedbacks": []
                  }
                ],
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "scales": {
        "doc_url": "/apidoc/2.0/scales",
        "api_url": "/api",
        "name": "Scales",
        "short_description": "A scale is composed by questions which allows an \u003ca href='#users'\u003eusers\u003c/a\u003e to rate the quality of a \u003ca href='#projects'\u003eproject\u003c/a\u003e .",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/scales/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/project_sessions/:project_session_id/scales",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scales",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/scales",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/scales",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by name asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eintroduction_md\u003c/code\u003e, \u003ccode\u003edisclaimer_md\u003c/code\u003e, \u003ccode\u003eguidelines_md\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eevaluation_id\u003c/code\u003e, \u003ccode\u003eis_primary\u003c/code\u003e, \u003ccode\u003ecorrection_number\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003emanual_subscription\u003c/code\u003e, \u003ccode\u003eis_external\u003c/code\u003e, \u003ccode\u003efree\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "name": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "comment",
                      "introduction_md",
                      "disclaimer_md",
                      "guidelines_md",
                      "created_at",
                      "updated_at",
                      "evaluation_id",
                      "is_primary",
                      "correction_number",
                      "duration",
                      "manual_subscription",
                      "is_external",
                      "free"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eintroduction_md\u003c/code\u003e, \u003ccode\u003edisclaimer_md\u003c/code\u003e, \u003ccode\u003eguidelines_md\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eevaluation_id\u003c/code\u003e, \u003ccode\u003eis_primary\u003c/code\u003e, \u003ccode\u003ecorrection_number\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003emanual_subscription\u003c/code\u003e, \u003ccode\u003eis_external\u003c/code\u003e, \u003ccode\u003efree\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "comment",
                      "introduction_md",
                      "disclaimer_md",
                      "guidelines_md",
                      "created_at",
                      "updated_at",
                      "evaluation_id",
                      "is_primary",
                      "correction_number",
                      "duration",
                      "manual_subscription",
                      "is_external",
                      "free"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003eintroduction_md\u003c/code\u003e, \u003ccode\u003edisclaimer_md\u003c/code\u003e, \u003ccode\u003eguidelines_md\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eevaluation_id\u003c/code\u003e, \u003ccode\u003eis_primary\u003c/code\u003e, \u003ccode\u003ecorrection_number\u003c/code\u003e, \u003ccode\u003eduration\u003c/code\u003e, \u003ccode\u003emanual_subscription\u003c/code\u003e, \u003ccode\u003eis_external\u003c/code\u003e, \u003ccode\u003efree\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "comment",
                      "introduction_md",
                      "disclaimer_md",
                      "guidelines_md",
                      "created_at",
                      "updated_at",
                      "evaluation_id",
                      "is_primary",
                      "correction_number",
                      "duration",
                      "manual_subscription",
                      "is_external",
                      "free"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/scales",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 531,
                    "evaluation_id": 168,
                    "name": "Unicooooorn !",
                    "is_primary": true,
                    "comment": "Banh mi dreamcatcher ad natus. Aut blog sunt nostrum est repellendus. Fingerstache hammock echo sed.",
                    "introduction_md": "Chambray mumblecore non harum mustache wayfarers eius. Sartorial lumbersexual street tenetur keffiyeh. Dolorum pbr\u0026b eveniet nihil neque dolores non. Banh mi atque officia eaque cumque.",
                    "disclaimer_md": "Adipisci iusto qui laborum tote bag letterpress brooklyn. Voluptatibus fanny pack ea wayfarers.",
                    "guidelines_md": "Chartreuse sequi repellendus squid franzen qui. Voluptatum sint cornhole mustache single-origin coffee typewriter. Qui omnis ramps vitae gluten-free corrupti 8-bit nam.",
                    "created_at": "2016-05-04T10:45:05.519Z",
                    "correction_number": 3,
                    "duration": 1800,
                    "manual_subscription": true,
                    "languages": [
                      {
                        "id": 2,
                        "name": "English",
                        "identifier": "en",
                        "created_at": "2015-04-14T16:07:38.122Z",
                        "updated_at": "2015-04-14T16:07:38.122Z"
                      }
                    ],
                    "sections": [
                      {
                        "id": 1975,
                        "name": "Nebraska druids",
                        "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                        "questions": [
                          {
                            "id": 5854,
                            "name": "Florida buffalo",
                            "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                            "rating": "bool",
                            "kind": "standard",
                            "created_at": "2016-05-04T10:45:05.785Z"
                          }
                        ]
                      },
                      {
                        "id": 1976,
                        "name": "Nebraska druids",
                        "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                        "questions": [
                          {
                            "id": 5855,
                            "name": "Florida buffalo",
                            "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                            "rating": "bool",
                            "kind": "standard",
                            "created_at": "2016-05-04T10:45:06.131Z"
                          }
                        ]
                      },
                      {
                        "id": 1977,
                        "name": "Nebraska druids",
                        "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                        "questions": [
                          {
                            "id": 5856,
                            "name": "Florida buffalo",
                            "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                            "rating": "bool",
                            "kind": "standard",
                            "created_at": "2016-05-04T10:45:06.457Z"
                          }
                        ]
                      },
                      {
                        "id": 1978,
                        "name": "Nebraska druids",
                        "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                        "questions": [
                          {
                            "id": 5857,
                            "name": "Florida buffalo",
                            "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                            "rating": "bool",
                            "kind": "standard",
                            "created_at": "2016-05-04T10:45:07.035Z"
                          }
                        ]
                      }
                    ],
                    "evaluation": { "id": 168, "kind": "scale" }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scales/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/scales/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/scales/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "evaluation_id": 168,
                  "name": "Wyoming black cats",
                  "is_primary": true,
                  "comment": "Banh mi dreamcatcher ad natus. Aut blog sunt nostrum est repellendus. Fingerstache hammock echo sed.",
                  "introduction_md": "Chambray mumblecore non harum mustache wayfarers eius. Sartorial lumbersexual street tenetur keffiyeh. Dolorum pbr\u0026b eveniet nihil neque dolores non. Banh mi atque officia eaque cumque.",
                  "disclaimer_md": "Adipisci iusto qui laborum tote bag letterpress brooklyn. Voluptatibus fanny pack ea wayfarers.",
                  "guidelines_md": "Chartreuse sequi repellendus squid franzen qui. Voluptatum sint cornhole mustache single-origin coffee typewriter. Qui omnis ramps vitae gluten-free corrupti 8-bit nam.",
                  "created_at": "2016-05-04T10:45:05.519Z",
                  "correction_number": 3,
                  "duration": 1800,
                  "manual_subscription": true,
                  "languages": [
                    {
                      "id": 2,
                      "name": "English",
                      "identifier": "en",
                      "created_at": "2015-04-14T16:07:38.122Z",
                      "updated_at": "2015-04-14T16:07:38.122Z"
                    }
                  ],
                  "sections": [
                    {
                      "id": 1975,
                      "name": "Nebraska druids",
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "questions": [
                        {
                          "id": 5854,
                          "name": "Florida buffalo",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "rating": "bool",
                          "kind": "standard",
                          "created_at": "2016-05-04T10:45:05.785Z"
                        }
                      ]
                    },
                    {
                      "id": 1976,
                      "name": "Nebraska druids",
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "questions": [
                        {
                          "id": 5855,
                          "name": "Florida buffalo",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "rating": "bool",
                          "kind": "standard",
                          "created_at": "2016-05-04T10:45:06.131Z"
                        }
                      ]
                    },
                    {
                      "id": 1977,
                      "name": "Nebraska druids",
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "questions": [
                        {
                          "id": 5856,
                          "name": "Florida buffalo",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "rating": "bool",
                          "kind": "standard",
                          "created_at": "2016-05-04T10:45:06.457Z"
                        }
                      ]
                    },
                    {
                      "id": 1978,
                      "name": "Nebraska druids",
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "questions": [
                        {
                          "id": 5857,
                          "name": "Florida buffalo",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "rating": "bool",
                          "kind": "standard",
                          "created_at": "2016-05-04T10:45:07.035Z"
                        }
                      ]
                    }
                  ],
                  "evaluation": { "id": 168, "kind": "scale" }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              },
              {
                "verb": "GET",
                "path": "/v2/scales/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "evaluation_id": 3,
                  "name": "Tennessee prophets",
                  "is_primary": true,
                  "comment": "Quidem pork belly before they sold out non vegan. Portland lo-fi sunt dolorum raw denim similique non. Accusantium consequatur quis retro. Maiores blanditiis fap chambray vice similique intelligentsia tattooed.",
                  "introduction_md": "Sapiente plaid +1 ea wes anderson mlkshk mumblecore. Eaque repellendus eveniet slow-carb.",
                  "disclaimer_md": "Ugh kitsch molestiae dicta keffiyeh eius tumblr gastropub. Earum repellendus sequi tilde velit error.",
                  "guidelines_md": "Wolf voluptas itaque. Sunt art party farm-to-table sapiente. Ea voluptatum voluptas culpa listicle facilis.",
                  "created_at": "2017-11-22T13:41:27.957Z",
                  "correction_number": 3,
                  "duration": 1800,
                  "manual_subscription": true,
                  "languages": [
                    {
                      "id": 3,
                      "name": "Romanian",
                      "identifier": "ro",
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    }
                  ],
                  "sections": [
                    {
                      "id": 3,
                      "name": "Wyoming ants",
                      "description": "Cum messenger bag praesentium hella wes anderson tofu butcher. Xoxo pabst ut quod. Tattooed adipisci bushwick. Hammock aut accusamus salvia schlitz corporis kitsch tote bag.",
                      "questions": [
                        {
                          "name": "Idaho rabbits",
                          "id": 5,
                          "questions_skills": [
                            {
                              "id": 9,
                              "question_id": 5,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.006Z",
                              "updated_at": "2017-11-22T13:41:28.006Z"
                            },
                            {
                              "id": 10,
                              "question_id": 5,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.020Z",
                              "updated_at": "2017-11-22T13:41:28.020Z"
                            }
                          ]
                        },
                        {
                          "name": "Oklahoma elves",
                          "id": 6,
                          "questions_skills": [
                            {
                              "id": 11,
                              "question_id": 6,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.064Z",
                              "updated_at": "2017-11-22T13:41:28.064Z"
                            },
                            {
                              "id": 12,
                              "question_id": 6,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.068Z",
                              "updated_at": "2017-11-22T13:41:28.068Z"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 4,
                      "name": "New York gooses",
                      "description": "Modi polaroid odio lomo chillwave. Cold-pressed everyday quasi possimus 90's flexitarian. Fingerstache ullam quia et distillery cupiditate shoreditch tousled. Quis tousled keffiyeh debitis. Earum sunt quis repellat quasi green juice knausgaard.",
                      "questions": [
                        {
                          "name": "Virginia ghosts",
                          "id": 7,
                          "questions_skills": [
                            {
                              "id": 13,
                              "question_id": 7,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.144Z",
                              "updated_at": "2017-11-22T13:41:28.144Z"
                            },
                            {
                              "id": 14,
                              "question_id": 7,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.158Z",
                              "updated_at": "2017-11-22T13:41:28.158Z"
                            }
                          ]
                        },
                        {
                          "name": "Idaho witches",
                          "id": 8,
                          "questions_skills": [
                            {
                              "id": 15,
                              "question_id": 8,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.210Z",
                              "updated_at": "2017-11-22T13:41:28.210Z"
                            },
                            {
                              "id": 16,
                              "question_id": 8,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:41:28.215Z",
                              "updated_at": "2017-11-22T13:41:28.215Z"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "evaluation": { "id": 3, "kind": "scale" }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scales/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/scales",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "scale",
                "full_name": "scale",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "scale[name]",
                    "description": "The name. Must be unique in the scope of a given evaluation.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "lg",
                    "full_name": "scale[lg]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_primary",
                    "full_name": "scale[is_primary]",
                    "description": "Is it is primary ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_external",
                    "full_name": "scale[is_external]",
                    "description": "Is it is external ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "manual_subscription",
                    "full_name": "scale[manual_subscription]",
                    "description": "Is it manual subscription ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "scale[comment]",
                    "description": "The comment.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "introduction_md",
                    "full_name": "scale[introduction_md]",
                    "description": "The introduction md.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "disclaimer_md",
                    "full_name": "scale[disclaimer_md]",
                    "description": "The disclaimer md.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "guidelines_md",
                    "full_name": "scale[guidelines_md]",
                    "description": "The guidelines md.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "correction_number",
                    "full_name": "scale[correction_number]",
                    "description": "The correction number.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "scale[duration]",
                    "description": "The duration.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "free",
                    "full_name": "scale[free]",
                    "description": "Is it free ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "evaluation_id",
                    "full_name": "scale[evaluation_id]",
                    "description": "The evaluation id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "flag_ids",
                    "full_name": "scale[flag_ids]",
                    "description": "The flag ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "attachments_attributes",
                    "full_name": "scale[attachments_attributes]",
                    "description": "The attachments attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "scale[attachments_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "scale[attachments_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "scale[attachments_attributes][language_id]",
                        "description": "The language id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "scale[attachments_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "untranslatable",
                        "full_name": "scale[attachments_attributes][untranslatable]",
                        "description": "Is it untranslatable ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_attributes",
                        "full_name": "scale[attachments_attributes][attachable_attributes]",
                        "description": "The attachable attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": []
                      }
                    ]
                  },
                  {
                    "name": "sections_attributes",
                    "full_name": "scale[sections_attributes]",
                    "description": "The sections attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "scale[sections_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "description",
                        "full_name": "scale[sections_attributes][description]",
                        "description": "The description.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "questions_attributes",
                        "full_name": "scale[sections_attributes][questions_attributes]",
                        "description": "The questions attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": [
                          {
                            "name": "id",
                            "full_name": "scale[sections_attributes][questions_attributes][id]",
                            "description": "The id.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "name",
                            "full_name": "scale[sections_attributes][questions_attributes][name]",
                            "description": "The name.",
                            "required": true,
                            "allow_nil": false,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "kind",
                            "full_name": "scale[sections_attributes][questions_attributes][kind]",
                            "description": "The kind.",
                            "required": true,
                            "allow_nil": false,
                            "validator": "Must be one of: \u003ccode\u003estandard\u003c/code\u003e, \u003ccode\u003ebonus\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "rating",
                            "full_name": "scale[sections_attributes][questions_attributes][rating]",
                            "description": "The rating.",
                            "required": true,
                            "allow_nil": false,
                            "validator": "Must be one of: \u003ccode\u003ebool\u003c/code\u003e, \u003ccode\u003emulti\u003c/code\u003e, \u003ccode\u003etext\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "guidelines",
                            "full_name": "scale[sections_attributes][questions_attributes][guidelines]",
                            "description": "The guidelines.",
                            "required": true,
                            "allow_nil": false,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "_destroy",
                            "full_name": "scale[sections_attributes][questions_attributes][_destroy]",
                            "description": "The destroy.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "questions_skills_attributes",
                            "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes]",
                            "description": "The questions skills attributes.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be an Array of nested elements",
                            "expected_type": "array",
                            "metadata": null,
                            "show": true,
                            "validations": [],
                            "params": [
                              {
                                "name": "id",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][id]",
                                "description": "The id.",
                                "required": false,
                                "allow_nil": true,
                                "validator": "Must be Fixnum",
                                "expected_type": "numeric",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              },
                              {
                                "name": "skill_id",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][skill_id]",
                                "description": "The skill id.",
                                "required": true,
                                "allow_nil": false,
                                "validator": "Must be Fixnum",
                                "expected_type": "numeric",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              },
                              {
                                "name": "percentage",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][percentage]",
                                "description": "The percentage.",
                                "required": true,
                                "allow_nil": false,
                                "validator": "Must be Fixnum",
                                "expected_type": "numeric",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              },
                              {
                                "name": "_destroy",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][_destroy]",
                                "description": "The destroy.",
                                "required": false,
                                "allow_nil": true,
                                "validator": "Must be String",
                                "expected_type": "string",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "name",
                        "full_name": "scale[sections_attributes][name]",
                        "description": "The name.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "scale[sections_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/scales",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "scale": {
                    "comment": "Dolores facere letterpress. Facilis pork belly church-key rem enim ut twee.",
                    "correction_number": "3",
                    "disclaimer_md": "Narwhal harum et voluptatum dolor similique minus biodiesel. Mlkshk architecto sapiente harum ipsum. Ut selvage paleo. Quia franzen listicle occupy.",
                    "duration": "2",
                    "evaluation_id": "4",
                    "guidelines_md": "Ut kickstarter aut wolf harum vel cornhole stumptown. Next level semiotics ab squid sit ethical lumbersexual. Venmo aspernatur retro letterpress quae ea pickled provident. Small batch ugh quia flexitarian.",
                    "introduction_md": "Amet sed sint perferendis sriracha. Thundercats consequuntur salvia. Jean shorts church-key ut enim est selvage aut. Alias cray paleo quia ea nulla five dollar toast in. Vitae eos vegan aut inventore at dolorem quo.",
                    "is_external": "false",
                    "is_primary": "true",
                    "lg": "3",
                    "manual_subscription": "false",
                    "name": "Tennessee ducks",
                    "sections_attributes": [
                      {
                        "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                        "name": "Maine sheep",
                        "questions_attributes": [
                          {
                            "guidelines": "Single-origin coffee chia bushwick sriracha drinking. Drinking raw denim sartorial austin echo shabby chic tilde pinterest. Raw denim retro taxidermy pbr\u0026b small batch tilde kale chips wolf. Kombucha tousled quinoa.",
                            "kind": "standard",
                            "name": "South Dakota banshees",
                            "questions_skills_attributes": [
                              { "percentage": "25", "skill_id": "6" },
                              { "percentage": "25", "skill_id": "1" }
                            ],
                            "rating": "bool"
                          }
                        ]
                      },
                      {
                        "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                        "name": "Maine sheep",
                        "questions_attributes": [
                          {
                            "guidelines": "Single-origin coffee chia bushwick sriracha drinking. Drinking raw denim sartorial austin echo shabby chic tilde pinterest. Raw denim retro taxidermy pbr\u0026b small batch tilde kale chips wolf. Kombucha tousled quinoa.",
                            "kind": "standard",
                            "name": "South Dakota banshees",
                            "questions_skills_attributes": [
                              { "percentage": "25", "skill_id": "6" },
                              { "percentage": "25", "skill_id": "1" }
                            ],
                            "rating": "bool"
                          }
                        ]
                      },
                      {
                        "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                        "name": "Maine sheep",
                        "questions_attributes": [
                          {
                            "guidelines": "Single-origin coffee chia bushwick sriracha drinking. Drinking raw denim sartorial austin echo shabby chic tilde pinterest. Raw denim retro taxidermy pbr\u0026b small batch tilde kale chips wolf. Kombucha tousled quinoa.",
                            "kind": "standard",
                            "name": "South Dakota banshees",
                            "questions_skills_attributes": [
                              { "percentage": "25", "skill_id": "6" },
                              { "percentage": "25", "skill_id": "1" }
                            ],
                            "rating": "bool"
                          }
                        ]
                      },
                      {
                        "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                        "name": "Maine sheep",
                        "questions_attributes": [
                          {
                            "guidelines": "Single-origin coffee chia bushwick sriracha drinking. Drinking raw denim sartorial austin echo shabby chic tilde pinterest. Raw denim retro taxidermy pbr\u0026b small batch tilde kale chips wolf. Kombucha tousled quinoa.",
                            "kind": "standard",
                            "name": "South Dakota banshees",
                            "questions_skills_attributes": [
                              { "percentage": "25", "skill_id": "6" },
                              { "percentage": "25", "skill_id": "1" }
                            ],
                            "rating": "bool"
                          }
                        ]
                      }
                    ]
                  }
                },
                "response_data": {
                  "id": 3,
                  "evaluation_id": 4,
                  "name": "Tennessee ducks",
                  "is_primary": true,
                  "comment": "Dolores facere letterpress. Facilis pork belly church-key rem enim ut twee.",
                  "introduction_md": "Amet sed sint perferendis sriracha. Thundercats consequuntur salvia. Jean shorts church-key ut enim est selvage aut. Alias cray paleo quia ea nulla five dollar toast in. Vitae eos vegan aut inventore at dolorem quo.",
                  "disclaimer_md": "Narwhal harum et voluptatum dolor similique minus biodiesel. Mlkshk architecto sapiente harum ipsum. Ut selvage paleo. Quia franzen listicle occupy.",
                  "guidelines_md": "Ut kickstarter aut wolf harum vel cornhole stumptown. Next level semiotics ab squid sit ethical lumbersexual. Venmo aspernatur retro letterpress quae ea pickled provident. Small batch ugh quia flexitarian.",
                  "created_at": "2017-11-22T13:44:02.886Z",
                  "correction_number": 3,
                  "duration": 1800,
                  "manual_subscription": true,
                  "languages": [
                    {
                      "id": 3,
                      "name": "Romanian",
                      "identifier": "ro",
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    }
                  ],
                  "sections": [
                    {
                      "id": 6,
                      "name": "Maine sheep",
                      "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                      "questions": [
                        {
                          "name": "South Dakota banshees",
                          "id": 10,
                          "questions_skills": [
                            {
                              "id": 17,
                              "question_id": 10,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:02.903Z",
                              "updated_at": "2017-11-22T13:44:02.903Z"
                            },
                            {
                              "id": 18,
                              "question_id": 10,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:02.917Z",
                              "updated_at": "2017-11-22T13:44:02.917Z"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 7,
                      "name": "Maine sheep",
                      "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                      "questions": [
                        {
                          "name": "South Dakota banshees",
                          "id": 11,
                          "questions_skills": [
                            {
                              "id": 19,
                              "question_id": 11,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:02.991Z",
                              "updated_at": "2017-11-22T13:44:02.991Z"
                            },
                            {
                              "id": 20,
                              "question_id": 11,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:03.002Z",
                              "updated_at": "2017-11-22T13:44:03.002Z"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 8,
                      "name": "Maine sheep",
                      "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                      "questions": [
                        {
                          "name": "South Dakota banshees",
                          "id": 12,
                          "questions_skills": [
                            {
                              "id": 21,
                              "question_id": 12,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:03.060Z",
                              "updated_at": "2017-11-22T13:44:03.060Z"
                            },
                            {
                              "id": 22,
                              "question_id": 12,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:03.070Z",
                              "updated_at": "2017-11-22T13:44:03.070Z"
                            }
                          ]
                        }
                      ]
                    },
                    {
                      "id": 9,
                      "name": "Maine sheep",
                      "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                      "questions": [
                        {
                          "name": "South Dakota banshees",
                          "id": 13,
                          "questions_skills": [
                            {
                              "id": 23,
                              "question_id": 13,
                              "skill_id": 6,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:03.128Z",
                              "updated_at": "2017-11-22T13:44:03.128Z"
                            },
                            {
                              "id": 24,
                              "question_id": 13,
                              "skill_id": 1,
                              "percentage": 25,
                              "created_at": "2017-11-22T13:44:03.136Z",
                              "updated_at": "2017-11-22T13:44:03.136Z"
                            }
                          ]
                        }
                      ]
                    }
                  ],
                  "evaluation": { "id": 4, "kind": "scale" }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scales/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/scales/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/scales/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "scale",
                "full_name": "scale",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "scale[name]",
                    "description": "The name. Must be unique in the scope of a given evaluation.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "lg",
                    "full_name": "scale[lg]",
                    "description": "The language id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_primary",
                    "full_name": "scale[is_primary]",
                    "description": "Is it is primary ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "is_external",
                    "full_name": "scale[is_external]",
                    "description": "Is it is external ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "manual_subscription",
                    "full_name": "scale[manual_subscription]",
                    "description": "Is it manual subscription ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "scale[comment]",
                    "description": "The comment.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "introduction_md",
                    "full_name": "scale[introduction_md]",
                    "description": "The introduction md.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "disclaimer_md",
                    "full_name": "scale[disclaimer_md]",
                    "description": "The disclaimer md.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "guidelines_md",
                    "full_name": "scale[guidelines_md]",
                    "description": "The guidelines md.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "correction_number",
                    "full_name": "scale[correction_number]",
                    "description": "The correction number.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "duration",
                    "full_name": "scale[duration]",
                    "description": "The duration.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "free",
                    "full_name": "scale[free]",
                    "description": "Is it free ?",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "evaluation_id",
                    "full_name": "scale[evaluation_id]",
                    "description": "The evaluation id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "flag_ids",
                    "full_name": "scale[flag_ids]",
                    "description": "The flag ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "attachments_attributes",
                    "full_name": "scale[attachments_attributes]",
                    "description": "The attachments attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "scale[attachments_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "scale[attachments_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "scale[attachments_attributes][language_id]",
                        "description": "The language id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "scale[attachments_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "untranslatable",
                        "full_name": "scale[attachments_attributes][untranslatable]",
                        "description": "Is it untranslatable ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_attributes",
                        "full_name": "scale[attachments_attributes][attachable_attributes]",
                        "description": "The attachable attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": []
                      }
                    ]
                  },
                  {
                    "name": "sections_attributes",
                    "full_name": "scale[sections_attributes]",
                    "description": "The sections attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "scale[sections_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "description",
                        "full_name": "scale[sections_attributes][description]",
                        "description": "The description.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "questions_attributes",
                        "full_name": "scale[sections_attributes][questions_attributes]",
                        "description": "The questions attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": [
                          {
                            "name": "id",
                            "full_name": "scale[sections_attributes][questions_attributes][id]",
                            "description": "The id.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be Fixnum",
                            "expected_type": "numeric",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "name",
                            "full_name": "scale[sections_attributes][questions_attributes][name]",
                            "description": "The name.",
                            "required": false,
                            "allow_nil": false,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "kind",
                            "full_name": "scale[sections_attributes][questions_attributes][kind]",
                            "description": "The kind.",
                            "required": false,
                            "allow_nil": false,
                            "validator": "Must be one of: \u003ccode\u003estandard\u003c/code\u003e, \u003ccode\u003ebonus\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "rating",
                            "full_name": "scale[sections_attributes][questions_attributes][rating]",
                            "description": "The rating.",
                            "required": false,
                            "allow_nil": false,
                            "validator": "Must be one of: \u003ccode\u003ebool\u003c/code\u003e, \u003ccode\u003emulti\u003c/code\u003e, \u003ccode\u003etext\u003c/code\u003e.",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "guidelines",
                            "full_name": "scale[sections_attributes][questions_attributes][guidelines]",
                            "description": "The guidelines.",
                            "required": false,
                            "allow_nil": false,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "_destroy",
                            "full_name": "scale[sections_attributes][questions_attributes][_destroy]",
                            "description": "The destroy.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be String",
                            "expected_type": "string",
                            "metadata": null,
                            "show": true,
                            "validations": []
                          },
                          {
                            "name": "questions_skills_attributes",
                            "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes]",
                            "description": "The questions skills attributes.",
                            "required": false,
                            "allow_nil": true,
                            "validator": "Must be an Array of nested elements",
                            "expected_type": "array",
                            "metadata": null,
                            "show": true,
                            "validations": [],
                            "params": [
                              {
                                "name": "id",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][id]",
                                "description": "The id.",
                                "required": false,
                                "allow_nil": true,
                                "validator": "Must be Fixnum",
                                "expected_type": "numeric",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              },
                              {
                                "name": "skill_id",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][skill_id]",
                                "description": "The skill id.",
                                "required": false,
                                "allow_nil": false,
                                "validator": "Must be Fixnum",
                                "expected_type": "numeric",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              },
                              {
                                "name": "percentage",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][percentage]",
                                "description": "The percentage.",
                                "required": false,
                                "allow_nil": false,
                                "validator": "Must be Fixnum",
                                "expected_type": "numeric",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              },
                              {
                                "name": "_destroy",
                                "full_name": "scale[sections_attributes][questions_attributes][questions_skills_attributes][_destroy]",
                                "description": "The destroy.",
                                "required": false,
                                "allow_nil": true,
                                "validator": "Must be String",
                                "expected_type": "string",
                                "metadata": null,
                                "show": true,
                                "validations": []
                              }
                            ]
                          }
                        ]
                      },
                      {
                        "name": "name",
                        "full_name": "scale[sections_attributes][name]",
                        "description": "The name.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "scale[sections_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/scales/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "scale": {
                    "comment": "Dolores facere letterpress. Facilis pork belly church-key rem enim ut twee.",
                    "disclaimer_md": "Narwhal harum et voluptatum dolor similique minus biodiesel. Mlkshk architecto sapiente harum ipsum. Ut selvage paleo. Quia franzen listicle occupy.",
                    "guidelines_md": "Ut kickstarter aut wolf harum vel cornhole stumptown. Next level semiotics ab squid sit ethical lumbersexual. Venmo aspernatur retro letterpress quae ea pickled provident. Small batch ugh quia flexitarian.",
                    "introduction_md": "Amet sed sint perferendis sriracha. Thundercats consequuntur salvia. Jean shorts church-key ut enim est selvage aut. Alias cray paleo quia ea nulla five dollar toast in. Vitae eos vegan aut inventore at dolorem quo."
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scales/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/scales/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/scales/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "scores": {
        "doc_url": "/apidoc/2.0/scores",
        "api_url": "/api",
        "name": "Scores",
        "short_description": "Points given to a \u003ca href='#coalitions'\u003ecoalition\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/scores/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/scores",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions/:coalition_id/scores",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions_users/:coalitions_user_id/scores",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/blocs/:bloc_id/scores",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalition_id",
                "full_name": "coalition_id",
                "description": "The coalition id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalitions_user_id",
                "full_name": "coalitions_user_id",
                "description": "The coalitions_user id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ecoalitions_user_id\u003c/code\u003e, \u003ccode\u003ecalculation_id\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecoalition_id\u003c/code\u003e, \u003ccode\u003escoreable_id\u003c/code\u003e, \u003ccode\u003escoreable_type\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "coalitions_user_id",
                      "calculation_id",
                      "reason",
                      "created_at",
                      "updated_at",
                      "coalition_id",
                      "scoreable_id",
                      "scoreable_type",
                      "value"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scores/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/scores/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions/:coalition_id/scores/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/coalitions_users/:coalitions_user_id/scores/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/blocs/:bloc_id/scores/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalition_id",
                "full_name": "coalition_id",
                "description": "The coalition id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "coalitions_user_id",
                "full_name": "coalitions_user_id",
                "description": "The coalitions_user id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/scores/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "coalition_id": 1,
                  "scoreable_id": 5,
                  "scoreable_type": "Location",
                  "coalitions_user_id": 3,
                  "calculation_id": 3,
                  "value": 54,
                  "reason": "Who's the more foolish; the fool, or the fool who follows him?",
                  "created_at": "2017-11-22T13:42:09.850Z",
                  "updated_at": "2017-11-22T13:42:09.850Z"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scores/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/coalitions/:coalition_id/scores",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalition_id",
                "full_name": "coalition_id",
                "description": "The coalition id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/scores/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/coalitions/:coalition_id/scores/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalition_id",
                "full_name": "coalition_id",
                "description": "The coalition id or slug",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "skills": {
        "doc_url": "/apidoc/2.0/skills",
        "api_url": "/api",
        "name": "Skills",
        "short_description": "A particlar skill.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/skills/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/skills",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/skills",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by name asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "name": "asc", "id": "desc" },
                    "keys": ["id", "name", "created_at", "updated_at", "slug"]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": ["id", "name", "created_at", "updated_at", "slug"],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": ["id", "name", "created_at", "updated_at", "slug"],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/skills/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/skills/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/skills/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/skills",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "skill",
                "full_name": "skill",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "skill[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor", "42Network"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/skills/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/skills/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "skill",
                "full_name": "skill",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "skill[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor", "42Network"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/skills/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/skills/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/skills/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor", "42Network"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "slots": {
        "doc_url": "/apidoc/2.0/slots",
        "api_url": "/api",
        "name": "Slots",
        "short_description": "The slots available to \u003ca href='#users'\u003eusers\u003c/a\u003e for booking a \u003ca href='#projects'\u003eproject\u003c/a\u003e \u003ca href='#scale_teams'\u003escale team\u003c/a\u003e.",
        "full_description": "A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/slots/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/slots/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/slots/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/slots/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003escale_team_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "user_id",
                      "created_at",
                      "scale_team_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "created_at",
                      "campus_id",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only slots which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end slots"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": ["id", "begin_at", "end_at", "created_at"],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/slots/graph/on/begin_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "2017-11-20": 123,
                  "2017-11-21": 0,
                  "2017-11-22": 0,
                  "2017-11-23": 0,
                  "2017-11-24": 1266
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/slots/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/slots",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/slots",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/slots",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/me/slots",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\n\u003cblockquote\u003eA Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.\u003c/blockquote\u003e\nThis call obviously lists all slots.An user without the \u003ccode\u003eadvanced tutor\u003c/code\u003e role can’t set the \u003ccode\u003euser_id\u003c/code\u003e or the \u003ccode\u003escale_team_id\u003c/code\u003e parameter.\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eif there is a resource owner\u003c/strong\u003e (an user uses this api trough your app, with the \u003ca href=\"http://api.intra.42.fr/apidoc/guides/web_application_flow\"\u003eweb application flow\u003c/a\u003e):\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e/me/slots\u003c/code\u003e endpoint will list all the slots set by the current user.\u003c/li\u003e\n\n\u003cli\u003eThe \u003ccode\u003e/projects/:project_id/slots\u003c/code\u003e endpoint will list all the available slots for the given project. Theses slots can be booked by the current user in order to make a defense.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\n\u003cli\u003e\u003cstrong\u003eif there isn’t a resource owner\u003c/strong\u003e\n\u003cul\u003e\n\u003cli\u003eThe \u003ccode\u003e/projects/:project_id/slots\u003c/code\u003e endpoint lists all the slots scheduled (with a \u003ccode\u003escale_team\u003c/code\u003e) on this project, including all the past ones.\u003c/li\u003e\n\n\u003cli\u003eThe \u003ccode\u003e/users/:user_id/slots\u003c/code\u003e endpoint lists all the slots for the requested user, as evaluator and as evaluated. This call is restricted.\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\nIn all the cases, the \u003ccode\u003e/slots\u003c/code\u003e endpoint lists all the slots, booked or not, including all the past ones.",
            "errors": [],
            "params": [
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003escale_team_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "user_id",
                      "created_at",
                      "scale_team_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efuture\u003c/code\u003e, \u003ccode\u003eend\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "begin_at",
                      "end_at",
                      "created_at",
                      "campus_id",
                      "future",
                      "end"
                    ],
                    "additional": {
                      "campus_id": { "proc": {}, "all": [], "description": "" },
                      "future": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only slots which begins in the future"
                      },
                      "end": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only end slots"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebegin_at\u003c/code\u003e, \u003ccode\u003eend_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": ["id", "begin_at", "end_at", "created_at"],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/slots",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 27,
                    "begin_at": "2017-11-24T20:15:00.000Z",
                    "end_at": "2017-11-24T20:30:00.000Z",
                    "scale_team": null,
                    "user": "invisible"
                  },
                  {
                    "id": 76,
                    "begin_at": "2017-11-24T20:15:00.000Z",
                    "end_at": "2017-11-24T20:30:00.000Z",
                    "scale_team": null,
                    "user": "invisible"
                  },
                  {
                    "id": 110,
                    "begin_at": "2017-11-24T20:15:00.000Z",
                    "end_at": "2017-11-24T20:30:00.000Z",
                    "scale_team": null,
                    "user": "invisible"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "authentication": "user",
              "required_scopes": ["projects"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/slots/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/slots/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/slots/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/slots",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\n\u003cblockquote\u003eA Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.\u003c/blockquote\u003e\nAn user without the \u003ccode\u003eadvanced tutor\u003c/code\u003e role can’t set the \u003ccode\u003euser_id\u003c/code\u003e or the \u003ccode\u003escale_team_id\u003c/code\u003e parameter.\u003cstrong\u003eAn app without resource owner cannot make this call\u003c/strong\u003e.If there is a resource owner, the \u003ccode\u003euser_id\u003c/code\u003e parameter must be set to his id. The date intervals are automaticaly scaled to a 15 minutes granularity. If the duration exceeds 15 minutes, multiple slots will be created.",
            "errors": [],
            "params": [
              {
                "name": "slot",
                "full_name": "slot",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "slot[user_id]",
                    "description": "The user wich set this slot",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "slot[begin_at]",
                    "description": "The beginning of the slot",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "slot[end_at]",
                    "description": "The ending of the slot",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "scale_team_id",
                    "full_name": "slot[scale_team_id]",
                    "description": "The defense linked to this slot",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/slots/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/slots/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/slots/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\n\u003cblockquote\u003eA Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.\u003c/blockquote\u003e\nAn user without the \u003ccode\u003eadvanced tutor\u003c/code\u003e role can’t set the \u003ccode\u003euser_id\u003c/code\u003e or the \u003ccode\u003escale_team_id\u003c/code\u003e parameter.\u003cstrong\u003eAn app without resource owner cannot make this call\u003c/strong\u003e.If there is a resource owner, the \u003ccode\u003euser_id\u003c/code\u003e parameter must be set to his id. The date intervals are automaticaly scaled to a 15 minutes granularity. If the duration exceeds 15 minutes, multiple slots will be created.",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "slot",
                "full_name": "slot",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "user_id",
                    "full_name": "slot[user_id]",
                    "description": "The user wich set this slot",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "begin_at",
                    "full_name": "slot[begin_at]",
                    "description": "The beginning of the slot",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "end_at",
                    "full_name": "slot[end_at]",
                    "description": "The ending of the slot",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "scale_team_id",
                    "full_name": "slot[scale_team_id]",
                    "description": "The defense linked to this slot",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/slots/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/slots/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/slots/471",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "squads": {
        "doc_url": "/apidoc/2.0/squads",
        "api_url": "/api",
        "name": "Squads",
        "short_description": "A \u003ca href='#squads'\u003esquads\u003c/a\u003e is the managing container of \u003ca href='#squads_users'\u003esquads_users\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/squads/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "squad",
                "full_name": "squad",
                "description": "",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "bloc_id",
                    "full_name": "squad[bloc_id]",
                    "description": "The bloc id",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "locked_at",
                    "full_name": "squad[locked_at]",
                    "description": "When the squad was locked",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "squads_users_attributes",
                    "full_name": "squad[squads_users_attributes]",
                    "description": "The users registration to this squad",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be an array of any type",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/blocs/:id/squads",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "bloc_id": 21,
                  "locked_at": null,
                  "squads_users_attributes": [
                    { "user_id": 18763, "leader": true, "validated": true }
                  ]
                },
                "response_data": {
                  "id": 4934,
                  "bloc_id": 21,
                  "locked_at": null,
                  "squads_users": [
                    {
                      "id": 10717,
                      "squad_id": 4934,
                      "leader": true,
                      "validated": false,
                      "created_at": "2019-11-08T13:53:26.408Z",
                      "updated_at": "2019-11-08T13:53:26.408Z",
                      "user": { "id": 18763, "login": "gmonein" }
                    }
                  ],
                  "created_at": "2019-11-08T13:53:26.404Z",
                  "updated_at": "2019-11-08T13:53:26.404Z",
                  "bloc": {
                    "id": 21,
                    "campus_id": 22,
                    "cursus_id": 21,
                    "squad_size": 4,
                    "created_at": "2019-10-24T23:57:59.098Z",
                    "updated_at": "2019-11-06T11:15:35.845Z"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/squads/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebloc_id\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "bloc_id",
                      "locked_at",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ebloc_id\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "bloc_id",
                      "locked_at",
                      "created_at",
                      "updated_at",
                      "locked"
                    ],
                    "additional": {
                      "locked": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only locked squads"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/squads/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/squads/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/squads/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "squads_users": {
        "doc_url": "/apidoc/2.0/squads_users",
        "api_url": "/api",
        "name": "Squads users",
        "short_description": "A \u003ca href='#squads_users'\u003esquads_users\u003c/a\u003e will group users inside a same coalition",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/squads_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/squads_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/blocs/:bloc_id/squads_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "bloc_id",
                "full_name": "bloc_id",
                "description": "The bloc id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esquad_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eleader\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "squad_id",
                      "user_id",
                      "leader",
                      "validated",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esquad_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eleader\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "squad_id",
                      "user_id",
                      "leader",
                      "validated",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/squads_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/squads_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/squads_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "subnotions": {
        "doc_url": "/apidoc/2.0/subnotions",
        "api_url": "/api",
        "name": "Subnotions",
        "short_description": "The elearning subnotion in a \u003ca href='#notions'\u003enotion\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/subnotions/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/notions/:notion_id/subnotions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/subnotions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "notion_id",
                "full_name": "notion_id",
                "description": "The notion id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by name asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003enotion_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "name": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "notion_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "slug",
                      "position"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003enotion_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "notion_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "slug",
                      "position"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003enotion_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eslug\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "notion_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "slug",
                      "position"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/subnotions",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 10,
                    "name": "Conclusion",
                    "slug": "piscine-php-d08-even-moar-object-oriented-programming-conclusion",
                    "created_at": "2017-11-22T13:41:24.254Z",
                    "notepad": null,
                    "attachments": [],
                    "notion": null
                  },
                  {
                    "id": 5,
                    "name": "Cosinus",
                    "slug": "fract-ol-cosinus",
                    "created_at": "2017-11-22T13:41:24.204Z",
                    "notepad": null,
                    "attachments": [],
                    "notion": null
                  },
                  {
                    "id": 4,
                    "name": "Démonstration",
                    "slug": "wolf3d-demonstration",
                    "created_at": "2017-11-22T13:41:24.195Z",
                    "notepad": null,
                    "attachments": [],
                    "notion": null
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/subnotions/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/subnotions/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/subnotions/6",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 6,
                  "name": "Julia",
                  "slug": "fract-ol-julia",
                  "created_at": "2017-11-22T13:41:24.215Z",
                  "notepad": null,
                  "attachments": [],
                  "notion": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/subnotions/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/subnotions",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "subnotion",
                "full_name": "subnotion",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "subnotion[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "subnotion[name]",
                    "description": "The name. Must be unique in the scope of a given notion.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "notion_id",
                    "full_name": "subnotion[notion_id]",
                    "description": "The notion id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "attachments_attributes",
                    "full_name": "subnotion[attachments_attributes]",
                    "description": "The attachments attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "subnotion[attachments_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "subnotion[attachments_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "subnotion[attachments_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "subnotion[attachments_attributes][language_id]",
                        "description": "The language id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "untranslatable",
                        "full_name": "subnotion[attachments_attributes][untranslatable]",
                        "description": "Is it untranslatable ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_attributes",
                        "full_name": "subnotion[attachments_attributes][attachable_attributes]",
                        "description": "The attachable attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/subnotions",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "subnotion": {
                    "name": "By Grand Central Station I Sat Down and Wept",
                    "notion_id": "1"
                  }
                },
                "response_data": {
                  "id": 15,
                  "name": "By Grand Central Station I Sat Down and Wept",
                  "slug": "by-grand-central-station-i-sat-down-and-wept",
                  "created_at": "2017-11-22T13:44:04.723Z",
                  "notepad": null,
                  "attachments": [],
                  "notion": {
                    "id": 1,
                    "name": "42run Demo",
                    "slug": "42run-demo",
                    "created_at": "2017-11-22T13:41:23.730Z"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "video_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/subnotions/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/subnotions/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/subnotions/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "subnotion",
                "full_name": "subnotion",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "subnotion[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "subnotion[name]",
                    "description": "The name. Must be unique in the scope of a given notion.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "notion_id",
                    "full_name": "subnotion[notion_id]",
                    "description": "The notion id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "attachments_attributes",
                    "full_name": "subnotion[attachments_attributes]",
                    "description": "The attachments attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "subnotion[attachments_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "kind",
                        "full_name": "subnotion[attachments_attributes][kind]",
                        "description": "The kind.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003ecode\u003c/code\u003e, \u003ccode\u003epdf\u003c/code\u003e, \u003ccode\u003elink\u003c/code\u003e, \u003ccode\u003edocument\u003c/code\u003e, \u003ccode\u003evideo\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "subnotion[attachments_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "subnotion[attachments_attributes][language_id]",
                        "description": "The language id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "untranslatable",
                        "full_name": "subnotion[attachments_attributes][untranslatable]",
                        "description": "Is it untranslatable ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "attachable_attributes",
                        "full_name": "subnotion[attachments_attributes][attachable_attributes]",
                        "description": "The attachable attributes.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be an Array of nested elements",
                        "expected_type": "array",
                        "metadata": null,
                        "show": true,
                        "validations": [],
                        "params": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/subnotions/6",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "subnotion": {
                    "name": "By Grand Central Station I Sat Down and Wept",
                    "notion_id": "2"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "video_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/subnotions/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/subnotions/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/subnotions/6",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor", "video_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "tags": {
        "doc_url": "/apidoc/2.0/tags",
        "api_url": "/api",
        "name": "Tags",
        "short_description": "Non-hierarchical keyword, acting as a meta-data and helping to describe entities.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/tags/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/projects/:project_id/tags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/issues/:issue_id/tags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/notions/:notion_id/tags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/tags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/tags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/tags",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "issue_id",
                "full_name": "issue_id",
                "description": "The issue id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "notion_id",
                "full_name": "notion_id",
                "description": "The notion id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by name asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epinner_id\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "name": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "pinner_id",
                      "kind",
                      "description"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epinner_id\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "pinner_id",
                      "kind",
                      "description",
                      "cursus_id"
                    ],
                    "additional": {
                      "cursus_id": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": ""
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epinner_id\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "name",
                      "created_at",
                      "updated_at",
                      "pinner_id",
                      "kind",
                      "description"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/tags",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 11,
                    "name": "Archived",
                    "kind": "archived",
                    "users": [],
                    "subnotions": []
                  },
                  {
                    "id": 7,
                    "name": "Bocal",
                    "kind": "general",
                    "users": [],
                    "subnotions": [
                      {
                        "id": 1,
                        "name": "Emacs",
                        "slug": "piscine-c-text-editors-emacs",
                        "created_at": "2017-11-22T13:41:24.154Z",
                        "notepad": null
                      }
                    ]
                  },
                  {
                    "id": 4,
                    "name": "Colle 08",
                    "kind": "project",
                    "users": [],
                    "subnotions": []
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/tags/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/tags/6",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 6,
                  "name": "Jour 13",
                  "kind": "project",
                  "users": [],
                  "subnotions": []
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/tags",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "tag",
                "full_name": "tag",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "tag[name]",
                    "description": "The name. Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tags_users_attributes",
                    "full_name": "tag[tags_users_attributes]",
                    "description": "The tags users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "user_id",
                        "full_name": "tag[tags_users_attributes][user_id]",
                        "description": "The user id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "tag[tags_users_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "tag[tags_users_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "tag[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/tags",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "tag": { "kind": "general", "name": "Legend" }
                },
                "response_data": {
                  "id": 18,
                  "name": "Legend",
                  "kind": "general",
                  "users": [],
                  "subnotions": []
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/tags/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/tags/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "tag",
                "full_name": "tag",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "tag[name]",
                    "description": "The name. Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "tags_users_attributes",
                    "full_name": "tag[tags_users_attributes]",
                    "description": "The tags users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "user_id",
                        "full_name": "tag[tags_users_attributes][user_id]",
                        "description": "The user id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "id",
                        "full_name": "tag[tags_users_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "tag[tags_users_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "cursus_ids",
                    "full_name": "tag[cursus_ids]",
                    "description": "The cursus ids.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an array of Integer",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/tags/6",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "tag": { "kind": "general", "name": "Legend" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/tags/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/tags/6",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "tags_users": {
        "doc_url": "/apidoc/2.0/tags_users",
        "api_url": "/api",
        "name": "Tags users",
        "short_description": "Resource associating a \u003ca href=\"#users\"\u003eUser\u003c/a\u003e and a \u003ca href=\"#tags\"\u003eTag\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/tags_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/tags_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/tags_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/tags_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/tags_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/tags/:tag_id/tags_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "tag_id",
                "full_name": "tag_id",
                "description": "The tag id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003etag_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "tag_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003etag_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003ecursus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "tag_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "campus_id",
                      "cursus_id"
                    ],
                    "additional": {
                      "cursus_id": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": ""
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003etag_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "tag_id",
                      "user_id",
                      "created_at",
                      "updated_at",
                      "campus_id"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/tags_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/tags_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/tags_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/tags_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/tags_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/tags_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "teams": {
        "doc_url": "/apidoc/2.0/teams",
        "api_url": "/api",
        "name": "Teams",
        "short_description": "One or many \u003ca href='#users'\u003eusers\u003c/a\u003e which have to finish a \u003ca href='#projects'\u003eproject\u003c/a\u003e together.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/teams/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/cursus/:cursus_id/teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/projects/:project_id/teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/teams/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "project_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "locked_at",
                      "closed_at",
                      "final_mark",
                      "repo_url",
                      "repo_uuid",
                      "deadline_at",
                      "terminating_at",
                      "project_session_id",
                      "status"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003ecursus\u003c/code\u003e, \u003ccode\u003eactive_cursus\u003c/code\u003e, \u003ccode\u003ecampus\u003c/code\u003e, \u003ccode\u003eprimary_campus\u003c/code\u003e, \u003ccode\u003elocked\u003c/code\u003e, \u003ccode\u003eclosed\u003c/code\u003e, \u003ccode\u003edeadline\u003c/code\u003e, \u003ccode\u003eterminating\u003c/code\u003e, \u003ccode\u003ewith_mark\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "locked_at",
                      "closed_at",
                      "final_mark",
                      "repo_url",
                      "repo_uuid",
                      "deadline_at",
                      "terminating_at",
                      "project_session_id",
                      "status",
                      "cursus",
                      "active_cursus",
                      "campus",
                      "primary_campus",
                      "locked",
                      "closed",
                      "deadline",
                      "terminating",
                      "with_mark"
                    ],
                    "additional": {
                      "cursus": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return teams with users in the given cursus"
                      },
                      "active_cursus": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return teams with users in the given cursus"
                      },
                      "campus": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return teams with users in the given campus"
                      },
                      "primary_campus": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return teams with users having the campus as a primary campus"
                      },
                      "locked": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only locked teams"
                      },
                      "closed": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only closed teams"
                      },
                      "deadline": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only deadline teams"
                      },
                      "terminating": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only terminating teams"
                      },
                      "with_mark": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only teams with a final_mark"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "locked_at",
                      "closed_at",
                      "final_mark",
                      "repo_url",
                      "repo_uuid",
                      "deadline_at",
                      "terminating_at",
                      "project_session_id",
                      "status"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/teams/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 68 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/cursus/:cursus_id/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/projects/:project_id/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/project_sessions/:project_session_id/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/me/teams",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_session_id",
                "full_name": "project_session_id",
                "description": "The project_session id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "project_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "locked_at",
                      "closed_at",
                      "final_mark",
                      "repo_url",
                      "repo_uuid",
                      "deadline_at",
                      "terminating_at",
                      "project_session_id",
                      "status"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003ecursus\u003c/code\u003e, \u003ccode\u003eactive_cursus\u003c/code\u003e, \u003ccode\u003ecampus\u003c/code\u003e, \u003ccode\u003eprimary_campus\u003c/code\u003e, \u003ccode\u003elocked\u003c/code\u003e, \u003ccode\u003eclosed\u003c/code\u003e, \u003ccode\u003edeadline\u003c/code\u003e, \u003ccode\u003eterminating\u003c/code\u003e, \u003ccode\u003ewith_mark\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "project_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "locked_at",
                      "closed_at",
                      "final_mark",
                      "repo_url",
                      "repo_uuid",
                      "deadline_at",
                      "terminating_at",
                      "project_session_id",
                      "status",
                      "cursus",
                      "active_cursus",
                      "campus",
                      "primary_campus",
                      "locked",
                      "closed",
                      "deadline",
                      "terminating",
                      "with_mark"
                    ],
                    "additional": {
                      "cursus": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return teams with users in the given cursus"
                      },
                      "active_cursus": {
                        "proc": {},
                        "all": [
                          1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                          17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 31, 32,
                          33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46,
                          47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60,
                          61, 62, 63, 64, 65, 66, 67
                        ],
                        "description": "Only return teams with users in the given cursus"
                      },
                      "campus": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return teams with users in the given campus"
                      },
                      "primary_campus": {
                        "proc": {},
                        "all": [
                          1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
                          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
                          31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
                          44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56,
                          57, 58, 59, 60, 61, 62, 63, 64, 65
                        ],
                        "description": "Only return teams with users having the campus as a primary campus"
                      },
                      "locked": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only locked teams"
                      },
                      "closed": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only closed teams"
                      },
                      "deadline": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only deadline teams"
                      },
                      "terminating": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only terminating teams"
                      },
                      "with_mark": {
                        "proc": {},
                        "all": ["true", "false"],
                        "description": "Return only teams with a final_mark"
                      }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eproject_id\u003c/code\u003e, \u003ccode\u003ename\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003elocked_at\u003c/code\u003e, \u003ccode\u003eclosed_at\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003erepo_url\u003c/code\u003e, \u003ccode\u003erepo_uuid\u003c/code\u003e, \u003ccode\u003edeadline_at\u003c/code\u003e, \u003ccode\u003eterminating_at\u003c/code\u003e, \u003ccode\u003eproject_session_id\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "project_id",
                      "name",
                      "created_at",
                      "updated_at",
                      "locked_at",
                      "closed_at",
                      "final_mark",
                      "repo_url",
                      "repo_uuid",
                      "deadline_at",
                      "terminating_at",
                      "project_session_id",
                      "status"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/teams",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "name": "jabinks2's group",
                    "url": "https://api.intra.42.fr/v2/teams/1",
                    "final_mark": null,
                    "project_id": 2,
                    "created_at": "2017-11-22T13:41:28.447Z",
                    "updated_at": "2017-11-22T13:41:28.519Z",
                    "status": "in_progress",
                    "terminating_at": null,
                    "users": [
                      {
                        "id": 111,
                        "login": "coundook",
                        "url": "https://api.intra.42.fr/v2/users/coundook",
                        "leader": true,
                        "occurrence": 0,
                        "validated": true,
                        "projects_user_id": 1
                      }
                    ],
                    "locked?": true,
                    "validated?": null,
                    "closed?": false,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                    "locked_at": "2017-11-22T13:41:28.487Z",
                    "closed_at": null,
                    "project_session_id": 2,
                    "scale_teams": [],
                    "teams_uploads": []
                  },
                  {
                    "id": 2,
                    "name": "podamer2's group",
                    "url": "https://api.intra.42.fr/v2/teams/2",
                    "final_mark": null,
                    "project_id": 4,
                    "created_at": "2017-11-22T13:41:28.554Z",
                    "updated_at": "2017-11-22T13:41:28.608Z",
                    "status": "in_progress",
                    "terminating_at": null,
                    "users": [
                      {
                        "id": 108,
                        "login": "podamer2",
                        "url": "https://api.intra.42.fr/v2/users/podamer2",
                        "leader": true,
                        "occurrence": 0,
                        "validated": true,
                        "projects_user_id": 2
                      }
                    ],
                    "locked?": false,
                    "validated?": null,
                    "closed?": true,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                    "locked_at": null,
                    "closed_at": "2017-11-22T13:41:28.578Z",
                    "project_session_id": 4,
                    "scale_teams": [],
                    "teams_uploads": []
                  },
                  {
                    "id": 3,
                    "name": "podamer2's group",
                    "url": "https://api.intra.42.fr/v2/teams/3",
                    "final_mark": null,
                    "project_id": 5,
                    "created_at": "2017-11-22T13:41:28.661Z",
                    "updated_at": "2017-11-22T13:41:28.704Z",
                    "status": "creating_group",
                    "terminating_at": null,
                    "users": [
                      {
                        "id": 108,
                        "login": "podamer2",
                        "url": "https://api.intra.42.fr/v2/users/podamer2",
                        "leader": true,
                        "occurrence": 0,
                        "validated": true,
                        "projects_user_id": 3
                      }
                    ],
                    "locked?": false,
                    "validated?": null,
                    "closed?": false,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                    "locked_at": null,
                    "closed_at": null,
                    "project_session_id": 5,
                    "scale_teams": [],
                    "teams_uploads": []
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/teams/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/teams",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "team",
                "full_name": "team",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "project_id",
                    "full_name": "team[project_id]",
                    "description": "The project id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "team[name]",
                    "description": "The name. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "team[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "team[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "locked_at",
                    "full_name": "team[locked_at]",
                    "description": "The locked at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "closed_at",
                    "full_name": "team[closed_at]",
                    "description": "The closed at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "team[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_url",
                    "full_name": "team[repo_url]",
                    "description": "The repo url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_uuid",
                    "full_name": "team[repo_uuid]",
                    "description": "The repo uuid.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "deadline_at",
                    "full_name": "team[deadline_at]",
                    "description": "The deadline at. Must be after today.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "terminating_at",
                    "full_name": "team[terminating_at]",
                    "description": "The terminating at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_session_id",
                    "full_name": "team[project_session_id]",
                    "description": "The project session id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "teams_users_attributes",
                    "full_name": "team[teams_users_attributes]",
                    "description": "The teams users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "user_id",
                        "full_name": "team[teams_users_attributes][user_id]",
                        "description": "The user id. Must be unique in the scope of a given team.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "leader",
                        "full_name": "team[teams_users_attributes][leader]",
                        "description": "Is it leader ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "validated",
                        "full_name": "team[teams_users_attributes][validated]",
                        "description": "Is it validated ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occurrence",
                        "full_name": "team[teams_users_attributes][occurrence]",
                        "description": "The occurrence. Default to 0.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/teams",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "team": {
                    "name": "Awesome team",
                    "project_id": 688,
                    "teams_users_attributes": [
                      { "user_id": 17282, "leader": true },
                      { "user_id": 18668 },
                      { "user_id": 15646 },
                      { "user_id": 12293 },
                      { "user_id": 17241 }
                    ]
                  }
                },
                "response_data": {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2019-01-29T13:46:58.977Z",
                  "final_mark": null,
                  "id": 2368475,
                  "locked?": false,
                  "locked_at": null,
                  "name": "soin",
                  "project_id": 688,
                  "project_session_id": 431,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ed68a876-be55-42ff-af85-43826f014fb5-2368475",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2019-01-29T13:46:59.104Z",
                  "url": "http://localhost:13000/v2/teams/2368475",
                  "users": [
                    {
                      "id": 12293,
                      "leader": false,
                      "login": "mcanal",
                      "occurrence": 0,
                      "projects_user_id": 824439,
                      "url": "http://localhost:13000/v2/users/mcanal",
                      "validated": false
                    },
                    {
                      "id": 15646,
                      "leader": false,
                      "login": "qduperon",
                      "occurrence": 0,
                      "projects_user_id": 802915,
                      "url": "http://localhost:13000/v2/users/qduperon",
                      "validated": false
                    },
                    {
                      "id": 17241,
                      "leader": false,
                      "login": "mmoullec",
                      "occurrence": 0,
                      "projects_user_id": 1149166,
                      "url": "http://localhost:13000/v2/users/mmoullec",
                      "validated": false
                    },
                    {
                      "id": 17282,
                      "leader": true,
                      "login": "thifranc",
                      "occurrence": 0,
                      "projects_user_id": 1149194,
                      "url": "http://localhost:13000/v2/users/thifranc",
                      "validated": false
                    },
                    {
                      "id": 18668,
                      "leader": false,
                      "login": "jlasne",
                      "occurrence": 0,
                      "projects_user_id": 1097141,
                      "url": "http://localhost:13000/v2/users/jlasne",
                      "validated": false
                    }
                  ],
                  "validated?": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/teams/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "team",
                "full_name": "team",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "project_id",
                    "full_name": "team[project_id]",
                    "description": "The project id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "name",
                    "full_name": "team[name]",
                    "description": "The name. Maximum length is 255.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "team[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "team[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "locked_at",
                    "full_name": "team[locked_at]",
                    "description": "The locked at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "closed_at",
                    "full_name": "team[closed_at]",
                    "description": "The closed at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "team[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_url",
                    "full_name": "team[repo_url]",
                    "description": "The repo url.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "repo_uuid",
                    "full_name": "team[repo_uuid]",
                    "description": "The repo uuid.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "deadline_at",
                    "full_name": "team[deadline_at]",
                    "description": "The deadline at. Must be after today.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "terminating_at",
                    "full_name": "team[terminating_at]",
                    "description": "The terminating at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "project_session_id",
                    "full_name": "team[project_session_id]",
                    "description": "The project session id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "teams_users_attributes",
                    "full_name": "team[teams_users_attributes]",
                    "description": "The teams users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "user_id",
                        "full_name": "team[teams_users_attributes][user_id]",
                        "description": "The user id. Must be unique in the scope of a given team.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "leader",
                        "full_name": "team[teams_users_attributes][leader]",
                        "description": "Is it leader ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "validated",
                        "full_name": "team[teams_users_attributes][validated]",
                        "description": "Is it validated ? Default to false.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "occurrence",
                        "full_name": "team[teams_users_attributes][occurrence]",
                        "description": "The occurrence. Default to 0.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/teams/58",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "team": { "origin_user_id": "125", "project_id": "5" }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/teams/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/teams/58",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams/reset_team_uploads",
            "name": "reset_team_uploads",
            "apis": [
              {
                "api_url": "/v2/teams/:id/reset_team_uploads",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {
              "authentication": "user",
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "teams_uploads": {
        "doc_url": "/apidoc/2.0/teams_uploads",
        "api_url": "/api",
        "name": "Teams uploads",
        "short_description": "An uploaded mark for a \u003ca href='#teams'\u003eteam\u003c/a\u003e, given by a bot (like \u003ci\u003ethe Moulinette\u003c/i\u003e), without any defence.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/teams_uploads/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/teams/:team_id/teams_uploads",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams_uploads",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "team_id",
                "full_name": "team_id",
                "description": "The team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id asc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003eupload_id\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "asc" },
                    "keys": [
                      "id",
                      "team_id",
                      "upload_id",
                      "final_mark",
                      "comment",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003eupload_id\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "team_id",
                      "upload_id",
                      "final_mark",
                      "comment",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003eupload_id\u003c/code\u003e, \u003ccode\u003efinal_mark\u003c/code\u003e, \u003ccode\u003ecomment\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "team_id",
                      "upload_id",
                      "final_mark",
                      "comment",
                      "created_at",
                      "updated_at"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/teams_uploads",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "final_mark": 55,
                    "comment": "Fingerstache street 8-bit viral meditation banh mi xoxo keytar. Quinoa retro ugh organic kickstarter vegan loko disrupt. Cold-pressed keffiyeh retro.",
                    "created_at": "2017-11-22T13:42:09.325Z",
                    "upload_id": 1,
                    "upload": {
                      "id": 1,
                      "evaluation_id": 2,
                      "name": "Idaho kangaroos",
                      "description": "",
                      "created_at": "2017-11-22T13:41:26.168Z",
                      "updated_at": "2017-11-22T13:42:09.328Z"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_uploads/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/teams_uploads/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/teams_uploads/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "final_mark": 55,
                  "comment": "Fingerstache street 8-bit viral meditation banh mi xoxo keytar. Quinoa retro ugh organic kickstarter vegan loko disrupt. Cold-pressed keffiyeh retro.",
                  "created_at": "2017-11-22T13:42:09.325Z",
                  "upload_id": 1,
                  "upload": {
                    "id": 1,
                    "evaluation_id": 2,
                    "name": "Idaho kangaroos",
                    "description": "",
                    "created_at": "2017-11-22T13:41:26.168Z",
                    "updated_at": "2017-11-22T13:42:09.328Z"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_uploads/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/teams_uploads",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "teams_upload",
                "full_name": "teams_upload",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "team_id",
                    "full_name": "teams_upload[team_id]",
                    "description": "The team id. Must be unique in the scope of a given upload.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "upload_id",
                    "full_name": "teams_upload[upload_id]",
                    "description": "The upload id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "teams_upload[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "teams_upload[comment]",
                    "description": "The comment.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/teams_uploads",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "teams_upload": {
                    "comment": "The Other Side of Silence",
                    "final_mark": "42",
                    "team_id": "66",
                    "upload_id": "1"
                  }
                },
                "response_data": {
                  "id": 2,
                  "final_mark": 42,
                  "comment": "The Other Side of Silence",
                  "created_at": "2017-11-22T13:44:07.389Z",
                  "upload_id": 1,
                  "upload": {
                    "id": 1,
                    "evaluation_id": 2,
                    "name": "Idaho kangaroos",
                    "description": "",
                    "created_at": "2017-11-22T13:41:26.168Z",
                    "updated_at": "2017-11-22T13:44:07.391Z"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_uploads/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/teams_uploads/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams_uploads/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "teams_upload",
                "full_name": "teams_upload",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "team_id",
                    "full_name": "teams_upload[team_id]",
                    "description": "The team id. Must be unique in the scope of a given upload.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "upload_id",
                    "full_name": "teams_upload[upload_id]",
                    "description": "The upload id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "final_mark",
                    "full_name": "teams_upload[final_mark]",
                    "description": "The final mark.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "comment",
                    "full_name": "teams_upload[comment]",
                    "description": "The comment.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/teams_uploads/1",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "teams_upload": {
                    "comment": "The Other Side of Silence",
                    "final_mark": "42",
                    "team_id": "18",
                    "upload_id": "1"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_uploads/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/teams_uploads/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/teams_uploads/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_uploads/multiple_create",
            "name": "multiple_create",
            "apis": [
              {
                "api_url": "/v2/teams_uploads/multiple_create",
                "http_method": "POST",
                "short_description": "Create multiple teams uploads",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "teams_uploads",
                "full_name": "teams_uploads",
                "description": "An array of teams_uploads",
                "required": false,
                "allow_nil": true,
                "validator": "Must be an Array of nested elements",
                "expected_type": "array",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": []
              }
            ],
            "examples": [],
            "metadata": {
              "required_scopes": ["projects"],
              "roles": ["advanced_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "teams_users": {
        "doc_url": "/apidoc/2.0/teams_users",
        "api_url": "/api",
        "name": "Teams users",
        "short_description": "\u003ca href='#teams'\u003eTeam\u003c/a\u003e composed of one \u003ca href='#users'\u003eUser\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/teams_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/teams_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/teams_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams/:team_id/teams_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "team_id",
                "full_name": "team_id",
                "description": "The team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eleader\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "team_id",
                      "user_id",
                      "leader",
                      "validated",
                      "created_at",
                      "updated_at",
                      "occurrence"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eleader\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "team_id",
                      "user_id",
                      "leader",
                      "validated",
                      "created_at",
                      "updated_at",
                      "occurrence"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003eteam_id\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003eleader\u003c/code\u003e, \u003ccode\u003evalidated\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eoccurrence\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "team_id",
                      "user_id",
                      "leader",
                      "validated",
                      "created_at",
                      "updated_at",
                      "occurrence"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/teams_users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 68,
                    "team_id": 68,
                    "user_id": 125,
                    "created_at": "2017-11-22T13:41:37.430Z",
                    "validated": true,
                    "leader": true,
                    "occurrence": 0,
                    "team": {
                      "id": 68,
                      "name": "sebulseb's group",
                      "url": "https://api.intra.42.fr/v2/teams/68",
                      "final_mark": null,
                      "project_id": 1,
                      "created_at": "2017-11-22T13:41:37.418Z",
                      "updated_at": "2017-11-22T13:42:09.246Z",
                      "status": "waiting_for_correction",
                      "terminating_at": null,
                      "users": [
                        {
                          "id": 125,
                          "login": "sebulseb",
                          "url": "https://api.intra.42.fr/v2/users/sebulseb",
                          "leader": true,
                          "occurrence": 0,
                          "validated": true,
                          "projects_user_id": 68
                        }
                      ],
                      "locked?": true,
                      "validated?": null,
                      "closed?": true,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                      "locked_at": "2017-11-22T13:41:37.471Z",
                      "closed_at": "2017-11-22T13:41:37.496Z",
                      "project_session_id": 1
                    },
                    "user": {
                      "id": 125,
                      "login": "sebulseb",
                      "url": "https://api.intra.42.fr/v2/users/sebulseb"
                    }
                  },
                  {
                    "id": 67,
                    "team_id": 67,
                    "user_id": 119,
                    "created_at": "2017-11-22T13:41:37.310Z",
                    "validated": true,
                    "leader": true,
                    "occurrence": 0,
                    "team": {
                      "id": 67,
                      "name": "hasolo's group",
                      "url": "https://api.intra.42.fr/v2/teams/67",
                      "final_mark": null,
                      "project_id": 1,
                      "created_at": "2017-11-22T13:41:37.298Z",
                      "updated_at": "2017-11-22T13:41:37.386Z",
                      "status": "waiting_for_correction",
                      "terminating_at": null,
                      "users": [
                        {
                          "id": 119,
                          "login": "hasolo",
                          "url": "https://api.intra.42.fr/v2/users/hasolo",
                          "leader": true,
                          "occurrence": 0,
                          "validated": true,
                          "projects_user_id": 67
                        }
                      ],
                      "locked?": true,
                      "validated?": null,
                      "closed?": true,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-4c9b8f90-9b63-4b8a-b919-4e0d664544c2-67",
                      "locked_at": "2017-11-22T13:41:37.358Z",
                      "closed_at": "2017-11-22T13:41:37.385Z",
                      "project_session_id": 1
                    },
                    "user": {
                      "id": 119,
                      "login": "hasolo",
                      "url": "https://api.intra.42.fr/v2/users/hasolo"
                    }
                  },
                  {
                    "id": 66,
                    "team_id": 66,
                    "user_id": 118,
                    "created_at": "2017-11-22T13:41:37.187Z",
                    "validated": true,
                    "leader": true,
                    "occurrence": 0,
                    "team": {
                      "id": 66,
                      "name": "jarbink2's group",
                      "url": "https://api.intra.42.fr/v2/teams/66",
                      "final_mark": null,
                      "project_id": 1,
                      "created_at": "2017-11-22T13:41:37.174Z",
                      "updated_at": "2017-11-22T13:41:37.263Z",
                      "status": "waiting_for_correction",
                      "terminating_at": null,
                      "users": [
                        {
                          "id": 118,
                          "login": "padamida",
                          "url": "https://api.intra.42.fr/v2/users/padamida",
                          "leader": true,
                          "occurrence": 0,
                          "validated": true,
                          "projects_user_id": 66
                        }
                      ],
                      "locked?": true,
                      "validated?": null,
                      "closed?": true,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-5f077c0e-351b-4d77-8334-dac656e42798-66",
                      "locked_at": "2017-11-22T13:41:37.238Z",
                      "closed_at": "2017-11-22T13:41:37.262Z",
                      "project_session_id": 1
                    },
                    "user": {
                      "id": 118,
                      "login": "jarbink2",
                      "url": "https://api.intra.42.fr/v2/users/jarbink2"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/teams_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Return the team_user specified by the \u003ccode\u003e:id\u003c/code\u003e parameter",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/teams_users/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "team_id": 3,
                  "user_id": 108,
                  "created_at": "2017-11-22T13:41:28.680Z",
                  "validated": true,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "id": 3,
                    "name": "podamer2's group",
                    "url": "https://api.intra.42.fr/v2/teams/3",
                    "final_mark": null,
                    "project_id": 5,
                    "created_at": "2017-11-22T13:41:28.661Z",
                    "updated_at": "2017-11-22T13:41:28.704Z",
                    "status": "creating_group",
                    "terminating_at": null,
                    "users": [
                      {
                        "id": 108,
                        "login": "podamer2",
                        "url": "https://api.intra.42.fr/v2/users/podamer2",
                        "leader": true,
                        "occurrence": 0,
                        "validated": true,
                        "projects_user_id": 3
                      }
                    ],
                    "locked?": false,
                    "validated?": null,
                    "closed?": false,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                    "locked_at": null,
                    "closed_at": null,
                    "project_session_id": 5
                  },
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/teams_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "teams_user",
                "full_name": "teams_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "team_id",
                    "full_name": "teams_user[team_id]",
                    "description": "The team id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "teams_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given team.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "leader",
                    "full_name": "teams_user[leader]",
                    "description": "Is it leader ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated",
                    "full_name": "teams_user[validated]",
                    "description": "Is it validated ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occurrence",
                    "full_name": "teams_user[occurrence]",
                    "description": "The occurrence. Default to 0.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/teams_users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "teams_user": {
                    "leader": "false",
                    "occurrence": "1",
                    "team_id": "68",
                    "user_id": "126",
                    "validated": "false"
                  }
                },
                "response_data": {
                  "id": 71,
                  "team_id": 68,
                  "user_id": 126,
                  "created_at": "2017-11-22T13:44:08.492Z",
                  "validated": false,
                  "leader": false,
                  "occurrence": 0,
                  "team": {
                    "id": 68,
                    "name": "sebulseb's group",
                    "url": "https://api.intra.42.fr/v2/teams/68",
                    "final_mark": null,
                    "project_id": 1,
                    "created_at": "2017-11-22T13:41:37.418Z",
                    "updated_at": "2017-11-22T13:44:08.496Z",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "users": [
                      {
                        "id": 125,
                        "login": "sebulseb",
                        "url": "https://api.intra.42.fr/v2/users/sebulseb",
                        "leader": true,
                        "occurrence": 0,
                        "validated": true,
                        "projects_user_id": 68
                      },
                      {
                        "id": 126,
                        "login": "anakskyw",
                        "url": "https://api.intra.42.fr/v2/users/anakskyw",
                        "leader": false,
                        "occurrence": 0,
                        "validated": false,
                        "projects_user_id": 70
                      }
                    ],
                    "locked?": true,
                    "validated?": null,
                    "closed?": true,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                    "locked_at": "2017-11-22T13:41:37.471Z",
                    "closed_at": "2017-11-22T13:41:37.496Z",
                    "project_session_id": 1
                  },
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/teams_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "teams_user",
                "full_name": "teams_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "team_id",
                    "full_name": "teams_user[team_id]",
                    "description": "The team id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "teams_user[user_id]",
                    "description": "The user id. Must be unique in the scope of a given team.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "leader",
                    "full_name": "teams_user[leader]",
                    "description": "Is it leader ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "validated",
                    "full_name": "teams_user[validated]",
                    "description": "Is it validated ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "occurrence",
                    "full_name": "teams_user[occurrence]",
                    "description": "The occurrence. Default to 0.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/teams_users/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "teams_user": {
                    "leader": "false",
                    "occurrence": "1",
                    "team_id": "68",
                    "user_id": "126",
                    "validated": "false"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/teams_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/teams_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/teams_users/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "titles": {
        "doc_url": "/apidoc/2.0/titles",
        "api_url": "/api",
        "name": "Titles",
        "short_description": "Titles a \u003ca href='#users'\u003euser\u003c/a\u003e can obtain, generally through achievements. It will be displayed on their profile and on the forum.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/titles/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/titles",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/titles",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/titles/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/titles",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "title",
                "full_name": "title",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "title[name]",
                    "description": "The name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/titles/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/titles/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "title",
                "full_name": "title",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "name",
                    "full_name": "title[name]",
                    "description": "The name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/titles/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "titles_users": {
        "doc_url": "/apidoc/2.0/titles_users",
        "api_url": "/api",
        "name": "Titles users",
        "short_description": "\u003ca href='#users'\u003eUsers\u003c/a\u003e who have a \u003ca href='#title'\u003etitle\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/titles_users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/titles/:title_id/titles_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/titles_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/titles_users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "title_id",
                "full_name": "title_id",
                "description": "The title id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles_users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/titles_users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles_users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/titles_users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "titles_user",
                "full_name": "titles_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "title_id",
                    "full_name": "titles_user[title_id]",
                    "description": "The title id. Must be unique in the scope of a given user.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "titles_user[user_id]",
                    "description": "The user id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles_users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/titles_users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/titles_users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "titles_user",
                "full_name": "titles_user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "title_id",
                    "full_name": "titles_user[title_id]",
                    "description": "The title id. Must be unique in the scope of a given user.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "titles_user[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/titles_users/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/titles_users/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "transactions": {
        "doc_url": "/apidoc/2.0/transactions",
        "api_url": "/api",
        "name": "Transactions",
        "short_description": "Transaction represents Altarian Dollars earned.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/transactions/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/transactions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/transactions",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003etransactable_id\u003c/code\u003e, \u003ccode\u003etransactable_type\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "value",
                      "user_id",
                      "transactable_id",
                      "transactable_type",
                      "created_at",
                      "reason"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003evalue\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003etransactable_id\u003c/code\u003e, \u003ccode\u003etransactable_type\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003ereason\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "value",
                      "user_id",
                      "transactable_id",
                      "transactable_type",
                      "created_at",
                      "reason"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/transactions",
                "versions": ["2.0"],
                "query": "page=1",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "value": 150,
                    "user_id": 22,
                    "transactable_id": 81,
                    "transactable_type": "Achievement",
                    "reason": "Mathieu c'est le plus fort ♥️",
                    "user": {
                      "id": 22,
                      "login": "mathieu",
                      "url": "https://api.intra.42.fr/v2/users/mathieu"
                    }
                  },
                  {
                    "id": 2,
                    "value": 666,
                    "user_id": 123,
                    "transactable_id": 186,
                    "transactable_type": "Event",
                    "reason": "Réunion entre démons.",
                    "user": {
                      "id": 123,
                      "login": "jeanne",
                      "url": "https://api.intra.42.fr/v2/users/jeanne"
                    }
                  },
                  {
                    "id": 2,
                    "value": 1,
                    "user_id": 12837,
                    "transactable_id": null,
                    "transactable_type": "Tuteur api",
                    "reason": "Exam C 24 janvier",
                    "user": {
                      "id": 12837,
                      "login": "jbailhac",
                      "url": "https://api.intra.42.fr/v2/users/jbailhac"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["student_tutor"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/transactions/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/transactions/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/transactions/1",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 1,
                  "value": 150,
                  "user_id": 22,
                  "transactable_id": 81,
                  "transactable_type": "Achievement",
                  "reason": "Mathieu c'est le plus fort ♥️",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["student_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/transactions/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/transactions",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "transaction",
                "full_name": "transaction",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "transaction[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "value",
                    "full_name": "transaction[value]",
                    "description": "The value.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "transaction[user_id]",
                    "description": "The user id. Must be unique in the scope of a given transactable type and transactable.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "transactable_id",
                    "full_name": "transaction[transactable_id]",
                    "description": "The transactable id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "transactable_type",
                    "full_name": "transaction[transactable_type]",
                    "description": "The transactable type.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "transaction[reason]",
                    "description": "The reason.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/transactions",
                "versions": ["2.0"],
                "query": "",
                "request_data": {
                  "transaction": {
                    "value": 5,
                    "user_id": 123,
                    "transactable_type": "Tuteur api",
                    "reason": "cadeau"
                  }
                },
                "response_data": {
                  "id": 6,
                  "value": 5,
                  "user_id": 123,
                  "transactable_id": null,
                  "transactable_type": "Tuteur api",
                  "reason": "cadeau",
                  "user": {
                    "id": 123,
                    "login": "jeanne",
                    "url": "https://api.intra.42.fr/v2/users/jeanne"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["student_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/transactions/update",
            "name": "update",
            "apis": [],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "transaction",
                "full_name": "transaction",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "transaction[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "value",
                    "full_name": "transaction[value]",
                    "description": "The value.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "transaction[user_id]",
                    "description": "The user id. Must be unique in the scope of a given transactable type and transactable.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "transactable_id",
                    "full_name": "transaction[transactable_id]",
                    "description": "The transactable id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "transactable_type",
                    "full_name": "transaction[transactable_type]",
                    "description": "The transactable type.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "reason",
                    "full_name": "transaction[reason]",
                    "description": "The reason.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": { "roles": ["student_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/transactions/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/transactions/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["student_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "translations": {
        "doc_url": "/apidoc/2.0/translations",
        "api_url": "/api",
        "name": "Translations",
        "short_description": "Translations",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/translations/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/translations",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003etranslatable_id\u003c/code\u003e, \u003ccode\u003etranslatable_type\u003c/code\u003e, \u003ccode\u003elanguage_id\u003c/code\u003e, \u003ccode\u003efields\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003edefault\u003c/code\u003e, \u003ccode\u003eup_to_date\u003c/code\u003e, \u003ccode\u003etranslations_structure_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "translatable_id",
                      "translatable_type",
                      "language_id",
                      "fields",
                      "created_at",
                      "updated_at",
                      "user_id",
                      "default",
                      "up_to_date",
                      "translations_structure_id"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/translations",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 1,
                    "translatable_id": 1,
                    "translatable_type": "Tag",
                    "language_id": 2,
                    "fields": {
                      "name": "Joburg-Final-Exam",
                      "description": null
                    },
                    "created_at": "2017-11-22T13:40:59.699Z",
                    "updated_at": "2017-11-22T13:40:59.716Z",
                    "user_id": null,
                    "default": true,
                    "up_to_date": true,
                    "translations_structure_id": 11,
                    "translations_structure": {
                      "id": 11,
                      "searchable_by": ["name"],
                      "identified_by": ["name"],
                      "structures_kind": "simple",
                      "up_to_date": true,
                      "fields_organisation": {
                        "name": "string",
                        "description": "text"
                      },
                      "type_name": "Tag",
                      "created_at": "2017-11-22T13:40:59.444Z",
                      "updated_at": "2017-11-22T13:40:59.444Z"
                    }
                  },
                  {
                    "id": 2,
                    "translatable_id": 2,
                    "translatable_type": "Tag",
                    "language_id": 2,
                    "fields": {
                      "name": "Friends with Benefits",
                      "description": null
                    },
                    "created_at": "2017-11-22T13:40:59.747Z",
                    "updated_at": "2017-11-22T13:40:59.759Z",
                    "user_id": null,
                    "default": true,
                    "up_to_date": true,
                    "translations_structure_id": 11,
                    "translations_structure": {
                      "id": 11,
                      "searchable_by": ["name"],
                      "identified_by": ["name"],
                      "structures_kind": "simple",
                      "up_to_date": true,
                      "fields_organisation": {
                        "name": "string",
                        "description": "text"
                      },
                      "type_name": "Tag",
                      "created_at": "2017-11-22T13:40:59.444Z",
                      "updated_at": "2017-11-22T13:40:59.444Z"
                    }
                  },
                  {
                    "id": 3,
                    "translatable_id": 3,
                    "translatable_type": "Tag",
                    "language_id": 2,
                    "fields": { "name": "GBmu", "description": null },
                    "created_at": "2017-11-22T13:40:59.783Z",
                    "updated_at": "2017-11-22T13:40:59.795Z",
                    "user_id": null,
                    "default": true,
                    "up_to_date": true,
                    "translations_structure_id": 11,
                    "translations_structure": {
                      "id": 11,
                      "searchable_by": ["name"],
                      "identified_by": ["name"],
                      "structures_kind": "simple",
                      "up_to_date": true,
                      "fields_organisation": {
                        "name": "string",
                        "description": "text"
                      },
                      "type_name": "Tag",
                      "created_at": "2017-11-22T13:40:59.444Z",
                      "updated_at": "2017-11-22T13:40:59.444Z"
                    }
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "paginated": true, "pagination_count": 30 },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/translations/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/translations/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/translations/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 3,
                  "translatable_id": 3,
                  "translatable_type": "Tag",
                  "language_id": 2,
                  "fields": { "name": "GBmu", "description": null },
                  "created_at": "2017-11-22T13:40:59.783Z",
                  "updated_at": "2017-11-22T13:40:59.795Z",
                  "user_id": null,
                  "default": true,
                  "up_to_date": true,
                  "translations_structure_id": 11,
                  "translations_structure": {
                    "id": 11,
                    "searchable_by": ["name"],
                    "identified_by": ["name"],
                    "structures_kind": "simple",
                    "up_to_date": true,
                    "fields_organisation": {
                      "name": "string",
                      "description": "text"
                    },
                    "type_name": "Tag",
                    "created_at": "2017-11-22T13:40:59.444Z",
                    "updated_at": "2017-11-22T13:40:59.444Z"
                  }
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/translations/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/translations",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "translation",
                "full_name": "translation",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "translation[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "translatable_id",
                    "full_name": "translation[translatable_id]",
                    "description": "The translatable id.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "translatable_type",
                    "full_name": "translation[translatable_type]",
                    "description": "The translatable type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "translation[language_id]",
                    "description": "The language id. Must be unique in the scope of a given translatable type and translatable.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "fields",
                    "full_name": "translation[fields]",
                    "description": "The fields.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "translation[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "translation[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "translation[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "default",
                    "full_name": "translation[default]",
                    "description": "Is it default ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "up_to_date",
                    "full_name": "translation[up_to_date]",
                    "description": "Is it up to date ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "translations_structure_id",
                    "full_name": "translation[translations_structure_id]",
                    "description": "The translations structure id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "file",
                    "full_name": "translation[file]",
                    "description": "The file.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/translations",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "translation": {
                    "fields": "{\"description\":\"You passed the Piscine test. Welcome to 42!\"}",
                    "language_id": "3",
                    "translatable_id": "1",
                    "translatable_type": "Achievement"
                  }
                },
                "response_data": {
                  "id": 99,
                  "translatable_id": 1,
                  "translatable_type": "Achievement",
                  "language_id": 3,
                  "fields": "{\"description\":\"You passed the Piscine test. Welcome to 42!\"}",
                  "created_at": "2017-11-22T13:44:17.382Z",
                  "updated_at": "2017-11-22T13:44:17.382Z",
                  "user_id": null,
                  "default": false,
                  "up_to_date": true,
                  "translations_structure_id": 6,
                  "translations_structure": {
                    "id": 6,
                    "searchable_by": ["name"],
                    "identified_by": ["name"],
                    "structures_kind": "simple",
                    "up_to_date": true,
                    "fields_organisation": {
                      "name": "string",
                      "description": "string"
                    },
                    "type_name": "Achievement",
                    "created_at": "2017-11-22T13:40:59.398Z",
                    "updated_at": "2017-11-22T13:40:59.398Z"
                  }
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["translater"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/translations/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/translations/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/translations/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "translation",
                "full_name": "translation",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "translation[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "translatable_id",
                    "full_name": "translation[translatable_id]",
                    "description": "The translatable id.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "translatable_type",
                    "full_name": "translation[translatable_type]",
                    "description": "The translatable type.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language_id",
                    "full_name": "translation[language_id]",
                    "description": "The language id. Must be unique in the scope of a given translatable type and translatable.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "fields",
                    "full_name": "translation[fields]",
                    "description": "The fields.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "created_at",
                    "full_name": "translation[created_at]",
                    "description": "The created at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "updated_at",
                    "full_name": "translation[updated_at]",
                    "description": "The updated at.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "translation[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "default",
                    "full_name": "translation[default]",
                    "description": "Is it default ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "up_to_date",
                    "full_name": "translation[up_to_date]",
                    "description": "Is it up to date ? Default to true.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "translations_structure_id",
                    "full_name": "translation[translations_structure_id]",
                    "description": "The translations structure id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "file",
                    "full_name": "translation[file]",
                    "description": "The file.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/translations/3",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "translation": {
                    "fields": "{\"description\":\"You passed the Piscine test. Welcome to 42!\"}",
                    "language_id": "1",
                    "translatable_id": "1",
                    "translatable_type": "Achievement"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["translater"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/translations/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/translations/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/translations/3",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["translater"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/translations/upload",
            "name": "upload",
            "apis": [
              {
                "api_url": "/v2/translations/upload",
                "http_method": "POST",
                "short_description": "Upload a file translation",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "file",
                "full_name": "file",
                "description": "yml or json",
                "required": true,
                "allow_nil": false,
                "validator": "Must be File",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["translater"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "user_candidatures": {
        "doc_url": "/apidoc/2.0/user_candidatures",
        "api_url": "/api",
        "name": "User candidatures",
        "short_description": "The candidature of an \u003ca href='#users'\u003euser\u003c/a\u003e",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/user_candidatures/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/user_candidatures",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at desc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebirth_date\u003c/code\u003e, \u003ccode\u003egender\u003c/code\u003e, \u003ccode\u003ezip_code\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003ebirth_city\u003c/code\u003e, \u003ccode\u003ebirth_country\u003c/code\u003e, \u003ccode\u003epostal_street\u003c/code\u003e, \u003ccode\u003epostal_complement\u003c/code\u003e, \u003ccode\u003epostal_city\u003c/code\u003e, \u003ccode\u003epostal_zip_code\u003c/code\u003e, \u003ccode\u003epostal_country\u003c/code\u003e, \u003ccode\u003econtact_affiliation\u003c/code\u003e, \u003ccode\u003econtact_last_name\u003c/code\u003e, \u003ccode\u003econtact_first_name\u003c/code\u003e, \u003ccode\u003econtact_phone1\u003c/code\u003e, \u003ccode\u003econtact_phone2\u003c/code\u003e, \u003ccode\u003emax_level_memory\u003c/code\u003e, \u003ccode\u003emax_level_logic\u003c/code\u003e, \u003ccode\u003eother_information\u003c/code\u003e, \u003ccode\u003elanguage\u003c/code\u003e, \u003ccode\u003emeeting_date\u003c/code\u003e, \u003ccode\u003episcine_date\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003ephone\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003epin\u003c/code\u003e, \u003ccode\u003ephone_country_code\u003c/code\u003e, \u003ccode\u003ehidden_phone\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "desc", "id": "desc" },
                    "keys": [
                      "id",
                      "user_id",
                      "birth_date",
                      "gender",
                      "zip_code",
                      "country",
                      "birth_city",
                      "birth_country",
                      "postal_street",
                      "postal_complement",
                      "postal_city",
                      "postal_zip_code",
                      "postal_country",
                      "contact_affiliation",
                      "contact_last_name",
                      "contact_first_name",
                      "contact_phone1",
                      "contact_phone2",
                      "max_level_memory",
                      "max_level_logic",
                      "other_information",
                      "language",
                      "meeting_date",
                      "piscine_date",
                      "created_at",
                      "updated_at",
                      "phone",
                      "email",
                      "pin",
                      "phone_country_code",
                      "hidden_phone"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebirth_date\u003c/code\u003e, \u003ccode\u003egender\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003ebirth_country\u003c/code\u003e, \u003ccode\u003epostal_country\u003c/code\u003e, \u003ccode\u003episcine_date\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "user_id",
                      "birth_date",
                      "gender",
                      "country",
                      "birth_country",
                      "postal_country",
                      "piscine_date",
                      "email",
                      "campus_id"
                    ],
                    "additional": {
                      "email": { "proc": {}, "all": [], "description": "" },
                      "campus_id": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003euser_id\u003c/code\u003e, \u003ccode\u003ebirth_date\u003c/code\u003e, \u003ccode\u003egender\u003c/code\u003e, \u003ccode\u003ecountry\u003c/code\u003e, \u003ccode\u003ebirth_country\u003c/code\u003e, \u003ccode\u003epostal_country\u003c/code\u003e, \u003ccode\u003episcine_date\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "user_id",
                      "birth_date",
                      "gender",
                      "country",
                      "birth_country",
                      "postal_country",
                      "piscine_date"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["basic_staff"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/user_candidatures/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/user_candidature",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/user_candidatures/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/user_candidatures/23",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 23,
                  "user_id": 23,
                  "birth_date": "1993-05-04",
                  "gender": "male",
                  "zip_code": "71800-2563",
                  "country": "Kashyyyk",
                  "birth_city": "East Rosieland",
                  "birth_country": "Kamino",
                  "postal_street": "11747 Jerod Drives",
                  "postal_complement": null,
                  "postal_city": "Keagantown",
                  "postal_zip_code": null,
                  "postal_country": null,
                  "contact_affiliation": null,
                  "contact_last_name": null,
                  "contact_first_name": null,
                  "contact_phone1": null,
                  "contact_phone2": null,
                  "max_level_memory": null,
                  "max_level_logic": null,
                  "other_information": null,
                  "language": null,
                  "meeting_date": null,
                  "piscine_date": null,
                  "created_at": "2017-11-22T13:41:06.408Z",
                  "updated_at": "2017-11-22T13:41:06.408Z",
                  "phone": null,
                  "email": "chewbacca@braunleuschke.biz",
                  "pin": null,
                  "phone_country_code": null,
                  "hidden_phone": null
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["basic_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/user_candidatures/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/user_candidature",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/user_candidatures",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_candidature",
                "full_name": "user_candidature",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "user_candidature[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "user_candidature[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "birth_date",
                    "full_name": "user_candidature[birth_date]",
                    "description": "The birth date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "gender",
                    "full_name": "user_candidature[gender]",
                    "description": "The gender.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip_code",
                    "full_name": "user_candidature[zip_code]",
                    "description": "The zip code.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "user_candidature[country]",
                    "description": "The country.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "phone_country_code",
                    "full_name": "user_candidature[phone_country_code]",
                    "description": "The phone country code.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003eAD\u003c/code\u003e, \u003ccode\u003eAE\u003c/code\u003e, \u003ccode\u003eAF\u003c/code\u003e, \u003ccode\u003eAG\u003c/code\u003e, \u003ccode\u003eAI\u003c/code\u003e, \u003ccode\u003eAL\u003c/code\u003e, \u003ccode\u003eAM\u003c/code\u003e, \u003ccode\u003eAN\u003c/code\u003e, \u003ccode\u003eAO\u003c/code\u003e, \u003ccode\u003eAQ\u003c/code\u003e, \u003ccode\u003eAR\u003c/code\u003e, \u003ccode\u003eAS\u003c/code\u003e, \u003ccode\u003eAT\u003c/code\u003e, \u003ccode\u003eAU\u003c/code\u003e, \u003ccode\u003eAW\u003c/code\u003e, \u003ccode\u003eAX\u003c/code\u003e, \u003ccode\u003eAZ\u003c/code\u003e, \u003ccode\u003eBA\u003c/code\u003e, \u003ccode\u003eBB\u003c/code\u003e, \u003ccode\u003eBD\u003c/code\u003e, \u003ccode\u003eBE\u003c/code\u003e, \u003ccode\u003eBF\u003c/code\u003e, \u003ccode\u003eBG\u003c/code\u003e, \u003ccode\u003eBH\u003c/code\u003e, \u003ccode\u003eBI\u003c/code\u003e, \u003ccode\u003eBJ\u003c/code\u003e, \u003ccode\u003eBL\u003c/code\u003e, \u003ccode\u003eBM\u003c/code\u003e, \u003ccode\u003eBN\u003c/code\u003e, \u003ccode\u003eBO\u003c/code\u003e, \u003ccode\u003eBQ\u003c/code\u003e, \u003ccode\u003eBR\u003c/code\u003e, \u003ccode\u003eBS\u003c/code\u003e, \u003ccode\u003eBT\u003c/code\u003e, \u003ccode\u003eBV\u003c/code\u003e, \u003ccode\u003eBW\u003c/code\u003e, \u003ccode\u003eBY\u003c/code\u003e, \u003ccode\u003eBZ\u003c/code\u003e, \u003ccode\u003eCA\u003c/code\u003e, \u003ccode\u003eCC\u003c/code\u003e, \u003ccode\u003eCD\u003c/code\u003e, \u003ccode\u003eCF\u003c/code\u003e, \u003ccode\u003eCG\u003c/code\u003e, \u003ccode\u003eCH\u003c/code\u003e, \u003ccode\u003eCI\u003c/code\u003e, \u003ccode\u003eCK\u003c/code\u003e, \u003ccode\u003eCL\u003c/code\u003e, \u003ccode\u003eCM\u003c/code\u003e, \u003ccode\u003eCN\u003c/code\u003e, \u003ccode\u003eCO\u003c/code\u003e, \u003ccode\u003eCR\u003c/code\u003e, \u003ccode\u003eCU\u003c/code\u003e, \u003ccode\u003eCV\u003c/code\u003e, \u003ccode\u003eCW\u003c/code\u003e, \u003ccode\u003eCX\u003c/code\u003e, \u003ccode\u003eCY\u003c/code\u003e, \u003ccode\u003eCZ\u003c/code\u003e, \u003ccode\u003eDE\u003c/code\u003e, \u003ccode\u003eDJ\u003c/code\u003e, \u003ccode\u003eDK\u003c/code\u003e, \u003ccode\u003eDM\u003c/code\u003e, \u003ccode\u003eDO\u003c/code\u003e, \u003ccode\u003eDZ\u003c/code\u003e, \u003ccode\u003eEC\u003c/code\u003e, \u003ccode\u003eEE\u003c/code\u003e, \u003ccode\u003eEG\u003c/code\u003e, \u003ccode\u003eEH\u003c/code\u003e, \u003ccode\u003eER\u003c/code\u003e, \u003ccode\u003eES\u003c/code\u003e, \u003ccode\u003eET\u003c/code\u003e, \u003ccode\u003eFI\u003c/code\u003e, \u003ccode\u003eFJ\u003c/code\u003e, \u003ccode\u003eFK\u003c/code\u003e, \u003ccode\u003eFM\u003c/code\u003e, \u003ccode\u003eFO\u003c/code\u003e, \u003ccode\u003eFR\u003c/code\u003e, \u003ccode\u003eGA\u003c/code\u003e, \u003ccode\u003eGB\u003c/code\u003e, \u003ccode\u003eGD\u003c/code\u003e, \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eGF\u003c/code\u003e, \u003ccode\u003eGG\u003c/code\u003e, \u003ccode\u003eGH\u003c/code\u003e, \u003ccode\u003eGI\u003c/code\u003e, \u003ccode\u003eGL\u003c/code\u003e, \u003ccode\u003eGM\u003c/code\u003e, \u003ccode\u003eGN\u003c/code\u003e, \u003ccode\u003eGP\u003c/code\u003e, \u003ccode\u003eGQ\u003c/code\u003e, \u003ccode\u003eGR\u003c/code\u003e, \u003ccode\u003eGS\u003c/code\u003e, \u003ccode\u003eGT\u003c/code\u003e, \u003ccode\u003eGU\u003c/code\u003e, \u003ccode\u003eGW\u003c/code\u003e, \u003ccode\u003eGY\u003c/code\u003e, \u003ccode\u003eHK\u003c/code\u003e, \u003ccode\u003eHM\u003c/code\u003e, \u003ccode\u003eHN\u003c/code\u003e, \u003ccode\u003eHR\u003c/code\u003e, \u003ccode\u003eHT\u003c/code\u003e, \u003ccode\u003eHU\u003c/code\u003e, \u003ccode\u003eID\u003c/code\u003e, \u003ccode\u003eIE\u003c/code\u003e, \u003ccode\u003eIL\u003c/code\u003e, \u003ccode\u003eIM\u003c/code\u003e, \u003ccode\u003eIN\u003c/code\u003e, \u003ccode\u003eIO\u003c/code\u003e, \u003ccode\u003eIQ\u003c/code\u003e, \u003ccode\u003eIR\u003c/code\u003e, \u003ccode\u003eIS\u003c/code\u003e, \u003ccode\u003eIT\u003c/code\u003e, \u003ccode\u003eJE\u003c/code\u003e, \u003ccode\u003eJM\u003c/code\u003e, \u003ccode\u003eJO\u003c/code\u003e, \u003ccode\u003eJP\u003c/code\u003e, \u003ccode\u003eKE\u003c/code\u003e, \u003ccode\u003eKG\u003c/code\u003e, \u003ccode\u003eKH\u003c/code\u003e, \u003ccode\u003eKI\u003c/code\u003e, \u003ccode\u003eKM\u003c/code\u003e, \u003ccode\u003eKN\u003c/code\u003e, \u003ccode\u003eKP\u003c/code\u003e, \u003ccode\u003eKR\u003c/code\u003e, \u003ccode\u003eKW\u003c/code\u003e, \u003ccode\u003eKY\u003c/code\u003e, \u003ccode\u003eKZ\u003c/code\u003e, \u003ccode\u003eLA\u003c/code\u003e, \u003ccode\u003eLB\u003c/code\u003e, \u003ccode\u003eLC\u003c/code\u003e, \u003ccode\u003eLI\u003c/code\u003e, \u003ccode\u003eLK\u003c/code\u003e, \u003ccode\u003eLR\u003c/code\u003e, \u003ccode\u003eLS\u003c/code\u003e, \u003ccode\u003eLT\u003c/code\u003e, \u003ccode\u003eLU\u003c/code\u003e, \u003ccode\u003eLV\u003c/code\u003e, \u003ccode\u003eLY\u003c/code\u003e, \u003ccode\u003eMA\u003c/code\u003e, \u003ccode\u003eMC\u003c/code\u003e, \u003ccode\u003eMD\u003c/code\u003e, \u003ccode\u003eME\u003c/code\u003e, \u003ccode\u003eMF\u003c/code\u003e, \u003ccode\u003eMG\u003c/code\u003e, \u003ccode\u003eMH\u003c/code\u003e, \u003ccode\u003eMK\u003c/code\u003e, \u003ccode\u003eML\u003c/code\u003e, \u003ccode\u003eMM\u003c/code\u003e, \u003ccode\u003eMN\u003c/code\u003e, \u003ccode\u003eMO\u003c/code\u003e, \u003ccode\u003eMP\u003c/code\u003e, \u003ccode\u003eMQ\u003c/code\u003e, \u003ccode\u003eMR\u003c/code\u003e, \u003ccode\u003eMS\u003c/code\u003e, \u003ccode\u003eMT\u003c/code\u003e, \u003ccode\u003eMU\u003c/code\u003e, \u003ccode\u003eMV\u003c/code\u003e, \u003ccode\u003eMW\u003c/code\u003e, \u003ccode\u003eMX\u003c/code\u003e, \u003ccode\u003eMY\u003c/code\u003e, \u003ccode\u003eMZ\u003c/code\u003e, \u003ccode\u003eNA\u003c/code\u003e, \u003ccode\u003eNC\u003c/code\u003e, \u003ccode\u003eNE\u003c/code\u003e, \u003ccode\u003eNF\u003c/code\u003e, \u003ccode\u003eNG\u003c/code\u003e, \u003ccode\u003eNI\u003c/code\u003e, \u003ccode\u003eNL\u003c/code\u003e, \u003ccode\u003eNO\u003c/code\u003e, \u003ccode\u003eNP\u003c/code\u003e, \u003ccode\u003eNR\u003c/code\u003e, \u003ccode\u003eNU\u003c/code\u003e, \u003ccode\u003eNZ\u003c/code\u003e, \u003ccode\u003eOM\u003c/code\u003e, \u003ccode\u003ePA\u003c/code\u003e, \u003ccode\u003ePE\u003c/code\u003e, \u003ccode\u003ePF\u003c/code\u003e, \u003ccode\u003ePG\u003c/code\u003e, \u003ccode\u003ePH\u003c/code\u003e, \u003ccode\u003ePK\u003c/code\u003e, \u003ccode\u003ePL\u003c/code\u003e, \u003ccode\u003ePM\u003c/code\u003e, \u003ccode\u003ePN\u003c/code\u003e, \u003ccode\u003ePR\u003c/code\u003e, \u003ccode\u003ePS\u003c/code\u003e, \u003ccode\u003ePT\u003c/code\u003e, \u003ccode\u003ePW\u003c/code\u003e, \u003ccode\u003ePY\u003c/code\u003e, \u003ccode\u003eQA\u003c/code\u003e, \u003ccode\u003eRE\u003c/code\u003e, \u003ccode\u003eRO\u003c/code\u003e, \u003ccode\u003eRS\u003c/code\u003e, \u003ccode\u003eRU\u003c/code\u003e, \u003ccode\u003eRW\u003c/code\u003e, \u003ccode\u003eSA\u003c/code\u003e, \u003ccode\u003eSB\u003c/code\u003e, \u003ccode\u003eSC\u003c/code\u003e, \u003ccode\u003eSD\u003c/code\u003e, \u003ccode\u003eSE\u003c/code\u003e, \u003ccode\u003eSG\u003c/code\u003e, \u003ccode\u003eSH\u003c/code\u003e, \u003ccode\u003eSI\u003c/code\u003e, \u003ccode\u003eSJ\u003c/code\u003e, \u003ccode\u003eSK\u003c/code\u003e, \u003ccode\u003eSL\u003c/code\u003e, \u003ccode\u003eSM\u003c/code\u003e, \u003ccode\u003eSN\u003c/code\u003e, \u003ccode\u003eSO\u003c/code\u003e, \u003ccode\u003eSR\u003c/code\u003e, \u003ccode\u003eSS\u003c/code\u003e, \u003ccode\u003eST\u003c/code\u003e, \u003ccode\u003eSV\u003c/code\u003e, \u003ccode\u003eSX\u003c/code\u003e, \u003ccode\u003eSY\u003c/code\u003e, \u003ccode\u003eSZ\u003c/code\u003e, \u003ccode\u003eTC\u003c/code\u003e, \u003ccode\u003eTD\u003c/code\u003e, \u003ccode\u003eTF\u003c/code\u003e, \u003ccode\u003eTG\u003c/code\u003e, \u003ccode\u003eTH\u003c/code\u003e, \u003ccode\u003eTJ\u003c/code\u003e, \u003ccode\u003eTK\u003c/code\u003e, \u003ccode\u003eTL\u003c/code\u003e, \u003ccode\u003eTM\u003c/code\u003e, \u003ccode\u003eTN\u003c/code\u003e, \u003ccode\u003eTO\u003c/code\u003e, \u003ccode\u003eTR\u003c/code\u003e, \u003ccode\u003eTT\u003c/code\u003e, \u003ccode\u003eTV\u003c/code\u003e, \u003ccode\u003eTW\u003c/code\u003e, \u003ccode\u003eTZ\u003c/code\u003e, \u003ccode\u003eUA\u003c/code\u003e, \u003ccode\u003eUG\u003c/code\u003e, \u003ccode\u003eUM\u003c/code\u003e, \u003ccode\u003eUS\u003c/code\u003e, \u003ccode\u003eUY\u003c/code\u003e, \u003ccode\u003eUZ\u003c/code\u003e, \u003ccode\u003eVA\u003c/code\u003e, \u003ccode\u003eVC\u003c/code\u003e, \u003ccode\u003eVE\u003c/code\u003e, \u003ccode\u003eVG\u003c/code\u003e, \u003ccode\u003eVI\u003c/code\u003e, \u003ccode\u003eVN\u003c/code\u003e, \u003ccode\u003eVU\u003c/code\u003e, \u003ccode\u003eWF\u003c/code\u003e, \u003ccode\u003eWS\u003c/code\u003e, \u003ccode\u003eXK\u003c/code\u003e, \u003ccode\u003eYE\u003c/code\u003e, \u003ccode\u003eYT\u003c/code\u003e, \u003ccode\u003eZA\u003c/code\u003e, \u003ccode\u003eZM\u003c/code\u003e, \u003ccode\u003eZW\u003c/code\u003e, \u003ccode\u003e\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "birth_city",
                    "full_name": "user_candidature[birth_city]",
                    "description": "The birth city.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "birth_country",
                    "full_name": "user_candidature[birth_country]",
                    "description": "The birth country.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_street",
                    "full_name": "user_candidature[postal_street]",
                    "description": "The postal street.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_complement",
                    "full_name": "user_candidature[postal_complement]",
                    "description": "The postal complement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_city",
                    "full_name": "user_candidature[postal_city]",
                    "description": "The postal city.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_zip_code",
                    "full_name": "user_candidature[postal_zip_code]",
                    "description": "The postal zip code.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email",
                    "full_name": "user_candidature[email]",
                    "description": "The email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_country",
                    "full_name": "user_candidature[postal_country]",
                    "description": "The postal country.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_affiliation",
                    "full_name": "user_candidature[contact_affiliation]",
                    "description": "The contact affiliation.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_last_name",
                    "full_name": "user_candidature[contact_last_name]",
                    "description": "The contact last name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_first_name",
                    "full_name": "user_candidature[contact_first_name]",
                    "description": "The contact first name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_phone1",
                    "full_name": "user_candidature[contact_phone1]",
                    "description": "The contact phone1.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_phone2",
                    "full_name": "user_candidature[contact_phone2]",
                    "description": "The contact phone2.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_level_memory",
                    "full_name": "user_candidature[max_level_memory]",
                    "description": "The max level memory.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_level_logic",
                    "full_name": "user_candidature[max_level_logic]",
                    "description": "The max level logic.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "other_information",
                    "full_name": "user_candidature[other_information]",
                    "description": "The other information.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language",
                    "full_name": "user_candidature[language]",
                    "description": "The language.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "meeting_date",
                    "full_name": "user_candidature[meeting_date]",
                    "description": "The meeting date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "piscine_date",
                    "full_name": "user_candidature[piscine_date]",
                    "description": "The piscine date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pin",
                    "full_name": "user_candidature[pin]",
                    "description": "The pin.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "phone",
                    "full_name": "user_candidature[phone]",
                    "description": "The phone.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/user_candidatures",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "user_candidature": {
                    "birth_city": "West Stefanieburgh",
                    "birth_country": "Burkina Faso",
                    "birth_date": "1989-01-30",
                    "contact_affiliation": "other",
                    "contact_first_name": "Barton",
                    "contact_last_name": "Mertz",
                    "contact_phone1": "0695847362",
                    "contact_phone2": "0491314200",
                    "country": "Honduras",
                    "gender": "female",
                    "language": "",
                    "max_level_logic": "2",
                    "max_level_memory": "1",
                    "meeting_date": "2017-07-11",
                    "other_information": "3",
                    "pin": "4242",
                    "piscine_date": "2017-11-15",
                    "postal_city": "Tillmanton",
                    "postal_complement": "",
                    "postal_country": "Georgia",
                    "postal_street": "5030 Serenity Plaza",
                    "postal_zip_code": "65440",
                    "user_id": "9",
                    "zip_code": "37528-3874"
                  }
                },
                "response_data": {
                  "id": 127,
                  "user_id": 9,
                  "birth_date": "1989-01-30",
                  "gender": "female",
                  "zip_code": "37528-3874",
                  "country": "Honduras",
                  "birth_city": "West Stefanieburgh",
                  "birth_country": "Burkina Faso",
                  "postal_street": "5030 Serenity Plaza",
                  "postal_complement": "",
                  "postal_city": "Tillmanton",
                  "postal_zip_code": "65440",
                  "postal_country": "Georgia",
                  "contact_affiliation": "other",
                  "contact_last_name": "Mertz",
                  "contact_first_name": "Barton",
                  "contact_phone1": "0695847362",
                  "contact_phone2": "0491314200",
                  "max_level_memory": 1,
                  "max_level_logic": 2,
                  "other_information": "3",
                  "language": "",
                  "meeting_date": "2017-07-11T00:00:00.000Z",
                  "piscine_date": "2017-11-15",
                  "created_at": "2017-11-22T13:44:17.725Z",
                  "updated_at": "2017-11-22T13:44:17.725Z",
                  "phone": null,
                  "email": null,
                  "pin": "4242",
                  "phone_country_code": null,
                  "hidden_phone": null
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/user_candidatures/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/user_candidature",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:user_id/user_candidature",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/user_candidatures/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/user_candidatures/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "user_id",
                "full_name": "user_id",
                "description": "The user id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user_candidature",
                "full_name": "user_candidature",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "id",
                    "full_name": "user_candidature[id]",
                    "description": "The id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_id",
                    "full_name": "user_candidature[user_id]",
                    "description": "The user id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "birth_date",
                    "full_name": "user_candidature[birth_date]",
                    "description": "The birth date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "gender",
                    "full_name": "user_candidature[gender]",
                    "description": "The gender.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "zip_code",
                    "full_name": "user_candidature[zip_code]",
                    "description": "The zip code.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "country",
                    "full_name": "user_candidature[country]",
                    "description": "The country.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "phone_country_code",
                    "full_name": "user_candidature[phone_country_code]",
                    "description": "The phone country code.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003eAD\u003c/code\u003e, \u003ccode\u003eAE\u003c/code\u003e, \u003ccode\u003eAF\u003c/code\u003e, \u003ccode\u003eAG\u003c/code\u003e, \u003ccode\u003eAI\u003c/code\u003e, \u003ccode\u003eAL\u003c/code\u003e, \u003ccode\u003eAM\u003c/code\u003e, \u003ccode\u003eAN\u003c/code\u003e, \u003ccode\u003eAO\u003c/code\u003e, \u003ccode\u003eAQ\u003c/code\u003e, \u003ccode\u003eAR\u003c/code\u003e, \u003ccode\u003eAS\u003c/code\u003e, \u003ccode\u003eAT\u003c/code\u003e, \u003ccode\u003eAU\u003c/code\u003e, \u003ccode\u003eAW\u003c/code\u003e, \u003ccode\u003eAX\u003c/code\u003e, \u003ccode\u003eAZ\u003c/code\u003e, \u003ccode\u003eBA\u003c/code\u003e, \u003ccode\u003eBB\u003c/code\u003e, \u003ccode\u003eBD\u003c/code\u003e, \u003ccode\u003eBE\u003c/code\u003e, \u003ccode\u003eBF\u003c/code\u003e, \u003ccode\u003eBG\u003c/code\u003e, \u003ccode\u003eBH\u003c/code\u003e, \u003ccode\u003eBI\u003c/code\u003e, \u003ccode\u003eBJ\u003c/code\u003e, \u003ccode\u003eBL\u003c/code\u003e, \u003ccode\u003eBM\u003c/code\u003e, \u003ccode\u003eBN\u003c/code\u003e, \u003ccode\u003eBO\u003c/code\u003e, \u003ccode\u003eBQ\u003c/code\u003e, \u003ccode\u003eBR\u003c/code\u003e, \u003ccode\u003eBS\u003c/code\u003e, \u003ccode\u003eBT\u003c/code\u003e, \u003ccode\u003eBV\u003c/code\u003e, \u003ccode\u003eBW\u003c/code\u003e, \u003ccode\u003eBY\u003c/code\u003e, \u003ccode\u003eBZ\u003c/code\u003e, \u003ccode\u003eCA\u003c/code\u003e, \u003ccode\u003eCC\u003c/code\u003e, \u003ccode\u003eCD\u003c/code\u003e, \u003ccode\u003eCF\u003c/code\u003e, \u003ccode\u003eCG\u003c/code\u003e, \u003ccode\u003eCH\u003c/code\u003e, \u003ccode\u003eCI\u003c/code\u003e, \u003ccode\u003eCK\u003c/code\u003e, \u003ccode\u003eCL\u003c/code\u003e, \u003ccode\u003eCM\u003c/code\u003e, \u003ccode\u003eCN\u003c/code\u003e, \u003ccode\u003eCO\u003c/code\u003e, \u003ccode\u003eCR\u003c/code\u003e, \u003ccode\u003eCU\u003c/code\u003e, \u003ccode\u003eCV\u003c/code\u003e, \u003ccode\u003eCW\u003c/code\u003e, \u003ccode\u003eCX\u003c/code\u003e, \u003ccode\u003eCY\u003c/code\u003e, \u003ccode\u003eCZ\u003c/code\u003e, \u003ccode\u003eDE\u003c/code\u003e, \u003ccode\u003eDJ\u003c/code\u003e, \u003ccode\u003eDK\u003c/code\u003e, \u003ccode\u003eDM\u003c/code\u003e, \u003ccode\u003eDO\u003c/code\u003e, \u003ccode\u003eDZ\u003c/code\u003e, \u003ccode\u003eEC\u003c/code\u003e, \u003ccode\u003eEE\u003c/code\u003e, \u003ccode\u003eEG\u003c/code\u003e, \u003ccode\u003eEH\u003c/code\u003e, \u003ccode\u003eER\u003c/code\u003e, \u003ccode\u003eES\u003c/code\u003e, \u003ccode\u003eET\u003c/code\u003e, \u003ccode\u003eFI\u003c/code\u003e, \u003ccode\u003eFJ\u003c/code\u003e, \u003ccode\u003eFK\u003c/code\u003e, \u003ccode\u003eFM\u003c/code\u003e, \u003ccode\u003eFO\u003c/code\u003e, \u003ccode\u003eFR\u003c/code\u003e, \u003ccode\u003eGA\u003c/code\u003e, \u003ccode\u003eGB\u003c/code\u003e, \u003ccode\u003eGD\u003c/code\u003e, \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eGF\u003c/code\u003e, \u003ccode\u003eGG\u003c/code\u003e, \u003ccode\u003eGH\u003c/code\u003e, \u003ccode\u003eGI\u003c/code\u003e, \u003ccode\u003eGL\u003c/code\u003e, \u003ccode\u003eGM\u003c/code\u003e, \u003ccode\u003eGN\u003c/code\u003e, \u003ccode\u003eGP\u003c/code\u003e, \u003ccode\u003eGQ\u003c/code\u003e, \u003ccode\u003eGR\u003c/code\u003e, \u003ccode\u003eGS\u003c/code\u003e, \u003ccode\u003eGT\u003c/code\u003e, \u003ccode\u003eGU\u003c/code\u003e, \u003ccode\u003eGW\u003c/code\u003e, \u003ccode\u003eGY\u003c/code\u003e, \u003ccode\u003eHK\u003c/code\u003e, \u003ccode\u003eHM\u003c/code\u003e, \u003ccode\u003eHN\u003c/code\u003e, \u003ccode\u003eHR\u003c/code\u003e, \u003ccode\u003eHT\u003c/code\u003e, \u003ccode\u003eHU\u003c/code\u003e, \u003ccode\u003eID\u003c/code\u003e, \u003ccode\u003eIE\u003c/code\u003e, \u003ccode\u003eIL\u003c/code\u003e, \u003ccode\u003eIM\u003c/code\u003e, \u003ccode\u003eIN\u003c/code\u003e, \u003ccode\u003eIO\u003c/code\u003e, \u003ccode\u003eIQ\u003c/code\u003e, \u003ccode\u003eIR\u003c/code\u003e, \u003ccode\u003eIS\u003c/code\u003e, \u003ccode\u003eIT\u003c/code\u003e, \u003ccode\u003eJE\u003c/code\u003e, \u003ccode\u003eJM\u003c/code\u003e, \u003ccode\u003eJO\u003c/code\u003e, \u003ccode\u003eJP\u003c/code\u003e, \u003ccode\u003eKE\u003c/code\u003e, \u003ccode\u003eKG\u003c/code\u003e, \u003ccode\u003eKH\u003c/code\u003e, \u003ccode\u003eKI\u003c/code\u003e, \u003ccode\u003eKM\u003c/code\u003e, \u003ccode\u003eKN\u003c/code\u003e, \u003ccode\u003eKP\u003c/code\u003e, \u003ccode\u003eKR\u003c/code\u003e, \u003ccode\u003eKW\u003c/code\u003e, \u003ccode\u003eKY\u003c/code\u003e, \u003ccode\u003eKZ\u003c/code\u003e, \u003ccode\u003eLA\u003c/code\u003e, \u003ccode\u003eLB\u003c/code\u003e, \u003ccode\u003eLC\u003c/code\u003e, \u003ccode\u003eLI\u003c/code\u003e, \u003ccode\u003eLK\u003c/code\u003e, \u003ccode\u003eLR\u003c/code\u003e, \u003ccode\u003eLS\u003c/code\u003e, \u003ccode\u003eLT\u003c/code\u003e, \u003ccode\u003eLU\u003c/code\u003e, \u003ccode\u003eLV\u003c/code\u003e, \u003ccode\u003eLY\u003c/code\u003e, \u003ccode\u003eMA\u003c/code\u003e, \u003ccode\u003eMC\u003c/code\u003e, \u003ccode\u003eMD\u003c/code\u003e, \u003ccode\u003eME\u003c/code\u003e, \u003ccode\u003eMF\u003c/code\u003e, \u003ccode\u003eMG\u003c/code\u003e, \u003ccode\u003eMH\u003c/code\u003e, \u003ccode\u003eMK\u003c/code\u003e, \u003ccode\u003eML\u003c/code\u003e, \u003ccode\u003eMM\u003c/code\u003e, \u003ccode\u003eMN\u003c/code\u003e, \u003ccode\u003eMO\u003c/code\u003e, \u003ccode\u003eMP\u003c/code\u003e, \u003ccode\u003eMQ\u003c/code\u003e, \u003ccode\u003eMR\u003c/code\u003e, \u003ccode\u003eMS\u003c/code\u003e, \u003ccode\u003eMT\u003c/code\u003e, \u003ccode\u003eMU\u003c/code\u003e, \u003ccode\u003eMV\u003c/code\u003e, \u003ccode\u003eMW\u003c/code\u003e, \u003ccode\u003eMX\u003c/code\u003e, \u003ccode\u003eMY\u003c/code\u003e, \u003ccode\u003eMZ\u003c/code\u003e, \u003ccode\u003eNA\u003c/code\u003e, \u003ccode\u003eNC\u003c/code\u003e, \u003ccode\u003eNE\u003c/code\u003e, \u003ccode\u003eNF\u003c/code\u003e, \u003ccode\u003eNG\u003c/code\u003e, \u003ccode\u003eNI\u003c/code\u003e, \u003ccode\u003eNL\u003c/code\u003e, \u003ccode\u003eNO\u003c/code\u003e, \u003ccode\u003eNP\u003c/code\u003e, \u003ccode\u003eNR\u003c/code\u003e, \u003ccode\u003eNU\u003c/code\u003e, \u003ccode\u003eNZ\u003c/code\u003e, \u003ccode\u003eOM\u003c/code\u003e, \u003ccode\u003ePA\u003c/code\u003e, \u003ccode\u003ePE\u003c/code\u003e, \u003ccode\u003ePF\u003c/code\u003e, \u003ccode\u003ePG\u003c/code\u003e, \u003ccode\u003ePH\u003c/code\u003e, \u003ccode\u003ePK\u003c/code\u003e, \u003ccode\u003ePL\u003c/code\u003e, \u003ccode\u003ePM\u003c/code\u003e, \u003ccode\u003ePN\u003c/code\u003e, \u003ccode\u003ePR\u003c/code\u003e, \u003ccode\u003ePS\u003c/code\u003e, \u003ccode\u003ePT\u003c/code\u003e, \u003ccode\u003ePW\u003c/code\u003e, \u003ccode\u003ePY\u003c/code\u003e, \u003ccode\u003eQA\u003c/code\u003e, \u003ccode\u003eRE\u003c/code\u003e, \u003ccode\u003eRO\u003c/code\u003e, \u003ccode\u003eRS\u003c/code\u003e, \u003ccode\u003eRU\u003c/code\u003e, \u003ccode\u003eRW\u003c/code\u003e, \u003ccode\u003eSA\u003c/code\u003e, \u003ccode\u003eSB\u003c/code\u003e, \u003ccode\u003eSC\u003c/code\u003e, \u003ccode\u003eSD\u003c/code\u003e, \u003ccode\u003eSE\u003c/code\u003e, \u003ccode\u003eSG\u003c/code\u003e, \u003ccode\u003eSH\u003c/code\u003e, \u003ccode\u003eSI\u003c/code\u003e, \u003ccode\u003eSJ\u003c/code\u003e, \u003ccode\u003eSK\u003c/code\u003e, \u003ccode\u003eSL\u003c/code\u003e, \u003ccode\u003eSM\u003c/code\u003e, \u003ccode\u003eSN\u003c/code\u003e, \u003ccode\u003eSO\u003c/code\u003e, \u003ccode\u003eSR\u003c/code\u003e, \u003ccode\u003eSS\u003c/code\u003e, \u003ccode\u003eST\u003c/code\u003e, \u003ccode\u003eSV\u003c/code\u003e, \u003ccode\u003eSX\u003c/code\u003e, \u003ccode\u003eSY\u003c/code\u003e, \u003ccode\u003eSZ\u003c/code\u003e, \u003ccode\u003eTC\u003c/code\u003e, \u003ccode\u003eTD\u003c/code\u003e, \u003ccode\u003eTF\u003c/code\u003e, \u003ccode\u003eTG\u003c/code\u003e, \u003ccode\u003eTH\u003c/code\u003e, \u003ccode\u003eTJ\u003c/code\u003e, \u003ccode\u003eTK\u003c/code\u003e, \u003ccode\u003eTL\u003c/code\u003e, \u003ccode\u003eTM\u003c/code\u003e, \u003ccode\u003eTN\u003c/code\u003e, \u003ccode\u003eTO\u003c/code\u003e, \u003ccode\u003eTR\u003c/code\u003e, \u003ccode\u003eTT\u003c/code\u003e, \u003ccode\u003eTV\u003c/code\u003e, \u003ccode\u003eTW\u003c/code\u003e, \u003ccode\u003eTZ\u003c/code\u003e, \u003ccode\u003eUA\u003c/code\u003e, \u003ccode\u003eUG\u003c/code\u003e, \u003ccode\u003eUM\u003c/code\u003e, \u003ccode\u003eUS\u003c/code\u003e, \u003ccode\u003eUY\u003c/code\u003e, \u003ccode\u003eUZ\u003c/code\u003e, \u003ccode\u003eVA\u003c/code\u003e, \u003ccode\u003eVC\u003c/code\u003e, \u003ccode\u003eVE\u003c/code\u003e, \u003ccode\u003eVG\u003c/code\u003e, \u003ccode\u003eVI\u003c/code\u003e, \u003ccode\u003eVN\u003c/code\u003e, \u003ccode\u003eVU\u003c/code\u003e, \u003ccode\u003eWF\u003c/code\u003e, \u003ccode\u003eWS\u003c/code\u003e, \u003ccode\u003eXK\u003c/code\u003e, \u003ccode\u003eYE\u003c/code\u003e, \u003ccode\u003eYT\u003c/code\u003e, \u003ccode\u003eZA\u003c/code\u003e, \u003ccode\u003eZM\u003c/code\u003e, \u003ccode\u003eZW\u003c/code\u003e, \u003ccode\u003e\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "birth_city",
                    "full_name": "user_candidature[birth_city]",
                    "description": "The birth city.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "birth_country",
                    "full_name": "user_candidature[birth_country]",
                    "description": "The birth country.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_street",
                    "full_name": "user_candidature[postal_street]",
                    "description": "The postal street.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_complement",
                    "full_name": "user_candidature[postal_complement]",
                    "description": "The postal complement.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_city",
                    "full_name": "user_candidature[postal_city]",
                    "description": "The postal city.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_zip_code",
                    "full_name": "user_candidature[postal_zip_code]",
                    "description": "The postal zip code.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email",
                    "full_name": "user_candidature[email]",
                    "description": "The email.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "postal_country",
                    "full_name": "user_candidature[postal_country]",
                    "description": "The postal country.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_affiliation",
                    "full_name": "user_candidature[contact_affiliation]",
                    "description": "The contact affiliation.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_last_name",
                    "full_name": "user_candidature[contact_last_name]",
                    "description": "The contact last name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_first_name",
                    "full_name": "user_candidature[contact_first_name]",
                    "description": "The contact first name.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_phone1",
                    "full_name": "user_candidature[contact_phone1]",
                    "description": "The contact phone1.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "contact_phone2",
                    "full_name": "user_candidature[contact_phone2]",
                    "description": "The contact phone2.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_level_memory",
                    "full_name": "user_candidature[max_level_memory]",
                    "description": "The max level memory.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "max_level_logic",
                    "full_name": "user_candidature[max_level_logic]",
                    "description": "The max level logic.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "other_information",
                    "full_name": "user_candidature[other_information]",
                    "description": "The other information.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "language",
                    "full_name": "user_candidature[language]",
                    "description": "The language.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "meeting_date",
                    "full_name": "user_candidature[meeting_date]",
                    "description": "The meeting date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be DateTime",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "piscine_date",
                    "full_name": "user_candidature[piscine_date]",
                    "description": "The piscine date.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pin",
                    "full_name": "user_candidature[pin]",
                    "description": "The pin.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "phone",
                    "full_name": "user_candidature[phone]",
                    "description": "The phone.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/user_candidatures/23",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "user_candidature": {
                    "birth_city": "Port Gonzalo",
                    "birth_country": "Iceland",
                    "birth_date": "1992-02-29",
                    "contact_affiliation": "parent",
                    "contact_first_name": "Lily",
                    "contact_last_name": "Buckridge",
                    "contact_phone1": "0695847362",
                    "contact_phone2": "0491314200",
                    "country": "Antarctica (the territory South of 60 deg S)",
                    "gender": "female",
                    "language": "",
                    "max_level_logic": "2",
                    "max_level_memory": "1",
                    "meeting_date": "2017-01-06",
                    "other_information": "3",
                    "pin": "4242",
                    "piscine_date": "2017-11-06",
                    "postal_city": "Lake Montana",
                    "postal_complement": "",
                    "postal_country": "Lao People's Democratic Republic",
                    "postal_street": "7646 Constantin Green",
                    "postal_zip_code": "19921",
                    "user_id": "46",
                    "zip_code": "91297"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "users": {
        "doc_url": "/apidoc/2.0/users",
        "api_url": "/api",
        "name": "Users",
        "short_description": "A 42 student, staff, or any entity with a 42 account.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/users/graph",
            "name": "graph",
            "apis": [
              {
                "api_url": "/v2/users/graph(/on/:field(/by/:interval))",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Count all occurences on a particular field (default on \u003ccode\u003ecreated_at\u003c/code\u003e) by a particular period, starting from the first occurence to now.",
            "errors": [],
            "params": [
              {
                "name": "field",
                "full_name": "field",
                "description": "The date field to graph on. Default to \u003ccode\u003ecreated_at\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "interval",
                "full_name": "interval",
                "description": "The interval to graph by. Default to \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eday\u003c/code\u003e, \u003ccode\u003eweek\u003c/code\u003e, \u003ccode\u003emonth\u003c/code\u003e, \u003ccode\u003equarter\u003c/code\u003e, \u003ccode\u003eyear\u003c/code\u003e, \u003ccode\u003ehour_of_day\u003c/code\u003e, \u003ccode\u003eday_of_week\u003c/code\u003e, \u003ccode\u003eday_of_month\u003c/code\u003e, \u003ccode\u003emonth_of_year\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elogin\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003eencrypted_password\u003c/code\u003e, \u003ccode\u003ereset_password_token\u003c/code\u003e, \u003ccode\u003ereset_password_sent_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003efirst_name\u003c/code\u003e, \u003ccode\u003elast_name\u003c/code\u003e, \u003ccode\u003epool_year\u003c/code\u003e, \u003ccode\u003epool_month\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003eotp_secret_key\u003c/code\u003e, \u003ccode\u003eotp_tmp\u003c/code\u003e, \u003ccode\u003eotp_activated\u003c/code\u003e, \u003ccode\u003eotp_backup_passwords\u003c/code\u003e, \u003ccode\u003eslack_team\u003c/code\u003e, \u003ccode\u003eslack_login\u003c/code\u003e, \u003ccode\u003eslack_mail\u003c/code\u003e, \u003ccode\u003eslack_code_validation\u003c/code\u003e, \u003ccode\u003eslack_validated_at\u003c/code\u003e, \u003ccode\u003etoken_id\u003c/code\u003e, \u003ccode\u003eemail_stop\u003c/code\u003e, \u003ccode\u003elinked_user_id\u003c/code\u003e, \u003ccode\u003eusual_first_name\u003c/code\u003e, \u003ccode\u003elast_seen_at\u003c/code\u003e, \u003ccode\u003epassword_changed_at\u003c/code\u003e, \u003ccode\u003eencrypted_single_usage_password\u003c/code\u003e, \u003ccode\u003efirst_warn_anon_sent_at\u003c/code\u003e, \u003ccode\u003esecond_warn_anon_sent_at\u003c/code\u003e, \u003ccode\u003ealumnized_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "login",
                      "email",
                      "encrypted_password",
                      "reset_password_token",
                      "reset_password_sent_at",
                      "created_at",
                      "updated_at",
                      "image",
                      "first_name",
                      "last_name",
                      "pool_year",
                      "pool_month",
                      "kind",
                      "status",
                      "otp_secret_key",
                      "otp_tmp",
                      "otp_activated",
                      "otp_backup_passwords",
                      "slack_team",
                      "slack_login",
                      "slack_mail",
                      "slack_code_validation",
                      "slack_validated_at",
                      "token_id",
                      "email_stop",
                      "linked_user_id",
                      "usual_first_name",
                      "last_seen_at",
                      "password_changed_at",
                      "encrypted_single_usage_password",
                      "first_warn_anon_sent_at",
                      "second_warn_anon_sent_at",
                      "alumnized_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elogin\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epool_year\u003c/code\u003e, \u003ccode\u003epool_month\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003eprimary_campus_id\u003c/code\u003e, \u003ccode\u003efirst_name\u003c/code\u003e, \u003ccode\u003elast_name\u003c/code\u003e, \u003ccode\u003ealumni?\u003c/code\u003e, \u003ccode\u003estaff?\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "login",
                      "email",
                      "created_at",
                      "updated_at",
                      "pool_year",
                      "pool_month",
                      "kind",
                      "status",
                      "primary_campus_id",
                      "first_name",
                      "last_name",
                      "alumni?",
                      "staff?"
                    ],
                    "additional": {
                      "primary_campus_id": {
                        "proc": {},
                        "all": [],
                        "description": ""
                      },
                      "first_name": {
                        "proc": {},
                        "all": [],
                        "description": ""
                      },
                      "last_name": { "proc": {}, "all": [], "description": "" },
                      "alumni?": { "proc": {}, "all": [], "description": "" },
                      "staff?": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elogin\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epool_year\u003c/code\u003e, \u003ccode\u003epool_month\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "login",
                      "email",
                      "created_at",
                      "updated_at",
                      "pool_year",
                      "pool_month",
                      "kind",
                      "status"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/users/graph/on/created_at/by/day",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": { "2017-11-22": 126 },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/add_correction_point",
            "name": "add_correction_point",
            "apis": [
              {
                "api_url": "/v2/users/:id/correction_points/add",
                "http_method": "POST",
                "short_description": "Add an evaluation point",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The user login",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "reason",
                "full_name": "reason",
                "description": "The reason of this evaluation point addition",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "amount",
                "full_name": "amount",
                "description": "The amount you want to add, if not specified it will add 1 point",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/remove_correction_point",
            "name": "remove_correction_point",
            "apis": [
              {
                "api_url": "/v2/users/:id/correction_points/remove",
                "http_method": "DELETE",
                "short_description": "Remove a evaluation point",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The user login",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "reason",
                "full_name": "reason",
                "description": "The reason of this evaluation point removal",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "amount",
                "full_name": "amount",
                "description": "The amount you want to remove, if not specified it will remove 1 point",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/locations_stats",
            "name": "locations_stats",
            "apis": [
              {
                "api_url": "/v2/users/:id/locations_stats",
                "http_method": "GET",
                "short_description": "Get location stats of a \u003ca href='#user'\u003eUser\u003c/a\u003e.",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "This route returns the total amount of hours spent by the targeted user between the \u003ccode\u003ebegin_at\u003c/code\u003e and \u003ccode\u003eend_at\u003c/code\u003e.By default, this will return the data from the last 4 months.",
            "errors": [],
            "params": [
              {
                "name": "begin_at",
                "full_name": "begin_at",
                "description": "",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "end_at",
                "full_name": "end_at",
                "description": "",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "time_zone",
                "full_name": "time_zone",
                "description": "The timezone you want to see the locations with. Defaults to the target user’s timezone.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/users/xlogin/locations_stats",
                "versions": ["2.0"],
                "query": "",
                "response_data": {
                  "2021-03-17": "02:56:21.097917",
                  "2021-03-13": "02:20:35.738681",
                  "2021-03-10": "03:23:36.453802",
                  "2021-03-09": "04:40:36.89249",
                  "2021-03-06": "04:51:22.499393",
                  "2021-03-05": "06:05:59.372873",
                  "2021-03-03": "00:21:53.590291",
                  "2021-02-27": "03:05:36.994655",
                  "2021-02-26": "05:16:55.007148",
                  "2021-02-25": "04:36:29.373432",
                  "2021-02-24": "04:49:50.382865",
                  "2021-02-23": "05:58:58.220621",
                  "2021-02-20": "04:12:54.190362",
                  "2021-02-19": "06:44:53.740148",
                  "2021-02-18": "03:20:40.099337",
                  "2021-02-17": "04:28:59.221241",
                  "2021-02-11": "02:58:40.99942",
                  "2021-01-20": "01:49:22.04"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": null,
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/exam",
            "name": "exam",
            "apis": [
              {
                "api_url": "/v2/users/:id/exam",
                "http_method": "GET",
                "short_description": "Show the exam status for the requested user",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\n\u003ch1 id=\"warning\"\u003eWarning:\u003c/h1\u003e\nThis route is deprecated and will be removed, tuesday 2 august 2023.",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/coalitions/:coalition_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/dashes/:dash_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/events/:event_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/accreditations/:accreditation_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/teams/:team_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/projects/:project_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/partnerships/:partnership_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/expertises/:expertise_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/cursus/:cursus_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/campus/:campus_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/achievements/:achievement_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/titles/:title_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/quests/:quest_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/groups/:group_id/users",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "coalition_id",
                "full_name": "coalition_id",
                "description": "The coalition id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "dash_id",
                "full_name": "dash_id",
                "description": "The dash id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "accreditation_id",
                "full_name": "accreditation_id",
                "description": "The accreditation id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "team_id",
                "full_name": "team_id",
                "description": "The team id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "project_id",
                "full_name": "project_id",
                "description": "The project id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "partnership_id",
                "full_name": "partnership_id",
                "description": "The partnership id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "expertise_id",
                "full_name": "expertise_id",
                "description": "The expertise id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "cursus_id",
                "full_name": "cursus_id",
                "description": "The cursus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "campus_id",
                "full_name": "campus_id",
                "description": "The campus id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "achievement_id",
                "full_name": "achievement_id",
                "description": "The achievement id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "title_id",
                "full_name": "title_id",
                "description": "The title id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "quest_id",
                "full_name": "quest_id",
                "description": "The quest id or slug",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "group_id",
                "full_name": "group_id",
                "description": "The group id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elogin\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003eencrypted_password\u003c/code\u003e, \u003ccode\u003ereset_password_token\u003c/code\u003e, \u003ccode\u003ereset_password_sent_at\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003eimage\u003c/code\u003e, \u003ccode\u003efirst_name\u003c/code\u003e, \u003ccode\u003elast_name\u003c/code\u003e, \u003ccode\u003epool_year\u003c/code\u003e, \u003ccode\u003epool_month\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003eotp_secret_key\u003c/code\u003e, \u003ccode\u003eotp_tmp\u003c/code\u003e, \u003ccode\u003eotp_activated\u003c/code\u003e, \u003ccode\u003eotp_backup_passwords\u003c/code\u003e, \u003ccode\u003eslack_team\u003c/code\u003e, \u003ccode\u003eslack_login\u003c/code\u003e, \u003ccode\u003eslack_mail\u003c/code\u003e, \u003ccode\u003eslack_code_validation\u003c/code\u003e, \u003ccode\u003eslack_validated_at\u003c/code\u003e, \u003ccode\u003etoken_id\u003c/code\u003e, \u003ccode\u003eemail_stop\u003c/code\u003e, \u003ccode\u003elinked_user_id\u003c/code\u003e, \u003ccode\u003eusual_first_name\u003c/code\u003e, \u003ccode\u003elast_seen_at\u003c/code\u003e, \u003ccode\u003epassword_changed_at\u003c/code\u003e, \u003ccode\u003eencrypted_single_usage_password\u003c/code\u003e, \u003ccode\u003efirst_warn_anon_sent_at\u003c/code\u003e, \u003ccode\u003esecond_warn_anon_sent_at\u003c/code\u003e, \u003ccode\u003ealumnized_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "id": "desc" },
                    "keys": [
                      "id",
                      "login",
                      "email",
                      "encrypted_password",
                      "reset_password_token",
                      "reset_password_sent_at",
                      "created_at",
                      "updated_at",
                      "image",
                      "first_name",
                      "last_name",
                      "pool_year",
                      "pool_month",
                      "kind",
                      "status",
                      "otp_secret_key",
                      "otp_tmp",
                      "otp_activated",
                      "otp_backup_passwords",
                      "slack_team",
                      "slack_login",
                      "slack_mail",
                      "slack_code_validation",
                      "slack_validated_at",
                      "token_id",
                      "email_stop",
                      "linked_user_id",
                      "usual_first_name",
                      "last_seen_at",
                      "password_changed_at",
                      "encrypted_single_usage_password",
                      "first_warn_anon_sent_at",
                      "second_warn_anon_sent_at",
                      "alumnized_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elogin\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epool_year\u003c/code\u003e, \u003ccode\u003epool_month\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e, \u003ccode\u003eprimary_campus_id\u003c/code\u003e, \u003ccode\u003efirst_name\u003c/code\u003e, \u003ccode\u003elast_name\u003c/code\u003e, \u003ccode\u003ealumni?\u003c/code\u003e, \u003ccode\u003estaff?\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "login",
                      "email",
                      "created_at",
                      "updated_at",
                      "pool_year",
                      "pool_month",
                      "kind",
                      "status",
                      "primary_campus_id",
                      "first_name",
                      "last_name",
                      "alumni?",
                      "staff?"
                    ],
                    "additional": {
                      "primary_campus_id": {
                        "proc": {},
                        "all": [],
                        "description": ""
                      },
                      "first_name": {
                        "proc": {},
                        "all": [],
                        "description": ""
                      },
                      "last_name": { "proc": {}, "all": [], "description": "" },
                      "alumni?": { "proc": {}, "all": [], "description": "" },
                      "staff?": { "proc": {}, "all": [], "description": "" }
                    }
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "range",
                "full_name": "range",
                "description": "Select on a particular range",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003elogin\u003c/code\u003e, \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e, \u003ccode\u003epool_year\u003c/code\u003e, \u003ccode\u003epool_month\u003c/code\u003e, \u003ccode\u003ekind\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "range": {
                    "keys": [
                      "id",
                      "login",
                      "email",
                      "created_at",
                      "updated_at",
                      "pool_year",
                      "pool_month",
                      "kind",
                      "status"
                    ],
                    "values": []
                  }
                },
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/users",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "id": 39962,
                    "email": "malallai@student.42.fr",
                    "login": "malallai",
                    "first_name": "Malo",
                    "last_name": "Allain",
                    "usual_full_name": "Malo Allain",
                    "usual_first_name": null,
                    "url": "https://api.intra.42.fr/v2/users/malallai",
                    "phone": "hidden",
                    "displayname": "Malo Allain",
                    "kind": "student",
                    "image": {
                      "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                      "versions": {
                        "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                        "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                        "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg",
                        "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg"
                      }
                    },
                    "staff?": false,
                    "correction_point": 4,
                    "pool_month": "august",
                    "pool_year": "2018",
                    "location": null,
                    "wallet": 290,
                    "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                    "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                    "created_at": "2018-07-17T08:57:33.128Z",
                    "updated_at": "2022-09-27T18:48:28.207Z",
                    "alumnized_at": null,
                    "alumni?": false,
                    "active?": true
                  },
                  {
                    "id": 26134,
                    "email": "asandolo@student.42.fr",
                    "login": "asandolo",
                    "first_name": "Alexandre",
                    "last_name": "Sandolo",
                    "usual_full_name": "Alexandre Sandolo",
                    "usual_first_name": null,
                    "url": "https://api.intra.42.fr/v2/users/asandolo",
                    "phone": "hidden",
                    "displayname": "Alexandre Sandolo",
                    "kind": "student",
                    "image": {
                      "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                      "versions": {
                        "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                        "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                        "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg",
                        "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg"
                      }
                    },
                    "staff?": false,
                    "correction_point": 4,
                    "pool_month": "july",
                    "pool_year": "2017",
                    "location": null,
                    "wallet": 1776,
                    "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                    "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                    "created_at": "2017-06-22T11:42:39.426Z",
                    "updated_at": "2022-09-27T19:20:19.605Z",
                    "alumnized_at": null,
                    "alumni?": false,
                    "active?": true
                  },
                  {
                    "id": 20152,
                    "email": "clabouri@student.42.fr",
                    "login": "clabouri",
                    "first_name": "Charles",
                    "last_name": "Labourier",
                    "usual_full_name": "Charles Labourier",
                    "usual_first_name": null,
                    "url": "https://api.intra.42.fr/v2/users/clabouri",
                    "phone": "hidden",
                    "displayname": "Charles Labourier",
                    "kind": "student",
                    "image": {
                      "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                      "versions": {
                        "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                        "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                        "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg",
                        "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg"
                      }
                    },
                    "staff?": false,
                    "correction_point": 3,
                    "pool_month": "august",
                    "pool_year": "2016",
                    "location": null,
                    "wallet": 525,
                    "anonymize_date": null,
                    "data_erasure_date": null,
                    "created_at": "2016-07-19T15:43:15.282Z",
                    "updated_at": "2022-09-19T15:36:06.910Z",
                    "alumnized_at": "2021-09-28T17:06:21.597Z",
                    "alumni?": true,
                    "active?": true
                  },
                  {
                    "id": 14819,
                    "email": "nkrouglo@student.42.fr",
                    "login": "nkrouglo",
                    "first_name": "Natalia",
                    "last_name": "Krouglov",
                    "usual_full_name": "Natalia Krouglov",
                    "usual_first_name": null,
                    "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                    "phone": "hidden",
                    "displayname": "Natalia Krouglov",
                    "kind": "student",
                    "image": {
                      "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                      "versions": {
                        "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                        "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                        "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg",
                        "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg"
                      }
                    },
                    "staff?": false,
                    "correction_point": 3,
                    "pool_month": "july",
                    "pool_year": "2015",
                    "location": null,
                    "wallet": 240,
                    "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                    "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                    "created_at": "2016-01-20T00:38:39.938Z",
                    "updated_at": "2022-09-19T15:35:56.534Z",
                    "alumnized_at": null,
                    "alumni?": false,
                    "active?": false
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/users/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/users/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "email": "andre@42.fr",
                  "login": "andre",
                  "first_name": "André",
                  "last_name": "Aubin",
                  "usual_full_name": "Juliette Aubin",
                  "usual_first_name": "Juliette",
                  "url": "https://api.intra.42.fr/v2/users/andre",
                  "phone": null,
                  "displayname": "André Aubin",
                  "kind": "admin",
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/1234567890/andre.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/1234567890/large_andre.jpg",
                      "medium": "https://cdn.intra.42.fr/users/1234567890/medium_andre.jpg",
                      "small": "https://cdn.intra.42.fr/users/1234567890/small_andre.jpg",
                      "micro": "https://cdn.intra.42.fr/users/1234567890/micro_andre.jpgg"
                    }
                  },
                  "staff?": false,
                  "correction_point": 4,
                  "pool_month": "july",
                  "pool_year": "2016",
                  "location": null,
                  "wallet": 0,
                  "anonymize_date": "2021-02-20T00:00:00.000+03:00",
                  "data_erasure_date": null,
                  "alumni?": false,
                  "active?": true,
                  "groups": [],
                  "cursus_users": [
                    {
                      "id": 2,
                      "begin_at": "2017-05-14T21:37:50.172Z",
                      "end_at": null,
                      "grade": null,
                      "level": 0.0,
                      "skills": [],
                      "cursus_id": 1,
                      "has_coalition": true,
                      "user": {
                        "id": 2,
                        "login": "andre",
                        "url": "https://api.intra.42.fr/v2/users/andre"
                      },
                      "cursus": {
                        "id": 1,
                        "created_at": "2017-11-22T13:41:00.750Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      }
                    }
                  ],
                  "projects_users": [],
                  "languages_users": [
                    {
                      "id": 2,
                      "language_id": 3,
                      "user_id": 2,
                      "position": 1,
                      "created_at": "2017-11-22T13:41:03.638Z"
                    }
                  ],
                  "achievements": [],
                  "titles": [],
                  "titles_users": [],
                  "partnerships": [],
                  "patroned": [
                    {
                      "id": 4,
                      "user_id": 2,
                      "godfather_id": 15,
                      "ongoing": true,
                      "created_at": "2017-11-22T13:42:11.565Z",
                      "updated_at": "2017-11-22T13:42:11.572Z"
                    }
                  ],
                  "patroning": [],
                  "expertises_users": [
                    {
                      "id": 2,
                      "expertise_id": 3,
                      "interested": false,
                      "value": 2,
                      "contact_me": false,
                      "created_at": "2017-11-22T13:41:22.504Z",
                      "user_id": 2
                    }
                  ],
                  "roles": [],
                  "campus": [
                    {
                      "id": 1,
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "language": {
                        "id": 3,
                        "name": "Romanian",
                        "identifier": "ro",
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "campus_users": [
                    {
                      "id": 2,
                      "user_id": 2,
                      "campus_id": 1,
                      "is_primary": true
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {},
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/create",
            "name": "create",
            "apis": [
              {
                "api_url": "/v2/users",
                "http_method": "POST",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "\n\u003ch2 id=\"this_is_the_main_call_for_user_creation_on_the_42_ecosystem\"\u003eThis is the main call for user creation on the 42 ecosystem.\u003c/h2\u003e\nThis call requires at least the \u003ccode\u003eemail\u003c/code\u003e, \u003ccode\u003ecampus_id\u003c/code\u003e, \u003ccode\u003efirst_name\u003c/code\u003e and \u003ccode\u003elast_name\u003c/code\u003e fields. If the login isn’t specified, it will be generated from the supplied \u003ccode\u003efirst_name\u003c/code\u003e and the \u003ccode\u003elast_name\u003c/code\u003e. \u003cstrong\u003eIf no cursus is supplied, the user will join the cursus \u003ccode\u003episcine-c\u003c/code\u003e by default\u003c/strong\u003e.If an endpoint is configured for the supplied campus, it will be triggered before save. You can read more about campus endpoints on \u003ca href=\"/apidoc/2.0/endpoint.html\"\u003ethe endpoint documentation\u003c/a\u003e.This call also accept additional data, nested under \u003ccode\u003euser_candidature_attributes\u003c/code\u003e, wich can be added later with the \u003ca href=\"/apidoc/2.0/user_candidature/create.html\"\u003euser candidature call\u003c/a\u003e and is only visible for the user and at least the \u003ccode\u003ebasic_staff\u003c/code\u003e role. The supplied email must be the personal email of the user. It will be moved to user_candidature after save, replacer by the given campus’s alias. Adding an image will generate an original, a medium and a small version of this one.The \u003ccode\u003emeta\u003c/code\u003e key allow a hash with \u003ccode\u003eldap_group\u003c/code\u003e. The \u003ccode\u003eldap_group\u003c/code\u003e has transmited to LDAP server if campus is",
            "errors": [],
            "params": [
              {
                "name": "user",
                "full_name": "user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "login",
                    "full_name": "user[login]",
                    "description": "The login. Default to . Must be unique.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email",
                    "full_name": "user[email]",
                    "description": "The email. Default to . Must be unique.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "first_name",
                    "full_name": "user[first_name]",
                    "description": "The first name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "last_name",
                    "full_name": "user[last_name]",
                    "description": "The last name.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "usual_first_name",
                    "full_name": "user[usual_first_name]",
                    "description": "The usual first name. Maximum length is 42.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "password",
                    "full_name": "user[password]",
                    "description": "The password.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_year",
                    "full_name": "user[pool_year]",
                    "description": "The pool year.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_month",
                    "full_name": "user[pool_month]",
                    "description": "The pool month.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "user[kind]",
                    "description": "The kind.",
                    "required": true,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eadmin\u003c/code\u003e, \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003eexternal\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "status",
                    "full_name": "user[status]",
                    "description": "The status.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "user[image]",
                    "description": "The image. Allow blank length is true. Allow nil length is true. Minimum length is 3072. Maximum length is 1048576.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "user[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "user[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email_stop",
                    "full_name": "user[email_stop]",
                    "description": "Is it email stop ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skip_welcome_mail",
                    "full_name": "user[skip_welcome_mail]",
                    "description": "The skip welcome mail.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_candidature_attributes",
                    "full_name": "user[user_candidature_attributes]",
                    "description": "The user candidature attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "user[user_candidature_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "user_id",
                        "full_name": "user[user_candidature_attributes][user_id]",
                        "description": "The user id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "birth_date",
                        "full_name": "user[user_candidature_attributes][birth_date]",
                        "description": "The birth date.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "gender",
                        "full_name": "user[user_candidature_attributes][gender]",
                        "description": "The gender.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "zip_code",
                        "full_name": "user[user_candidature_attributes][zip_code]",
                        "description": "The zip code.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "country",
                        "full_name": "user[user_candidature_attributes][country]",
                        "description": "The country.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "phone_country_code",
                        "full_name": "user[user_candidature_attributes][phone_country_code]",
                        "description": "The phone country code.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003eAD\u003c/code\u003e, \u003ccode\u003eAE\u003c/code\u003e, \u003ccode\u003eAF\u003c/code\u003e, \u003ccode\u003eAG\u003c/code\u003e, \u003ccode\u003eAI\u003c/code\u003e, \u003ccode\u003eAL\u003c/code\u003e, \u003ccode\u003eAM\u003c/code\u003e, \u003ccode\u003eAN\u003c/code\u003e, \u003ccode\u003eAO\u003c/code\u003e, \u003ccode\u003eAQ\u003c/code\u003e, \u003ccode\u003eAR\u003c/code\u003e, \u003ccode\u003eAS\u003c/code\u003e, \u003ccode\u003eAT\u003c/code\u003e, \u003ccode\u003eAU\u003c/code\u003e, \u003ccode\u003eAW\u003c/code\u003e, \u003ccode\u003eAX\u003c/code\u003e, \u003ccode\u003eAZ\u003c/code\u003e, \u003ccode\u003eBA\u003c/code\u003e, \u003ccode\u003eBB\u003c/code\u003e, \u003ccode\u003eBD\u003c/code\u003e, \u003ccode\u003eBE\u003c/code\u003e, \u003ccode\u003eBF\u003c/code\u003e, \u003ccode\u003eBG\u003c/code\u003e, \u003ccode\u003eBH\u003c/code\u003e, \u003ccode\u003eBI\u003c/code\u003e, \u003ccode\u003eBJ\u003c/code\u003e, \u003ccode\u003eBL\u003c/code\u003e, \u003ccode\u003eBM\u003c/code\u003e, \u003ccode\u003eBN\u003c/code\u003e, \u003ccode\u003eBO\u003c/code\u003e, \u003ccode\u003eBQ\u003c/code\u003e, \u003ccode\u003eBR\u003c/code\u003e, \u003ccode\u003eBS\u003c/code\u003e, \u003ccode\u003eBT\u003c/code\u003e, \u003ccode\u003eBV\u003c/code\u003e, \u003ccode\u003eBW\u003c/code\u003e, \u003ccode\u003eBY\u003c/code\u003e, \u003ccode\u003eBZ\u003c/code\u003e, \u003ccode\u003eCA\u003c/code\u003e, \u003ccode\u003eCC\u003c/code\u003e, \u003ccode\u003eCD\u003c/code\u003e, \u003ccode\u003eCF\u003c/code\u003e, \u003ccode\u003eCG\u003c/code\u003e, \u003ccode\u003eCH\u003c/code\u003e, \u003ccode\u003eCI\u003c/code\u003e, \u003ccode\u003eCK\u003c/code\u003e, \u003ccode\u003eCL\u003c/code\u003e, \u003ccode\u003eCM\u003c/code\u003e, \u003ccode\u003eCN\u003c/code\u003e, \u003ccode\u003eCO\u003c/code\u003e, \u003ccode\u003eCR\u003c/code\u003e, \u003ccode\u003eCU\u003c/code\u003e, \u003ccode\u003eCV\u003c/code\u003e, \u003ccode\u003eCW\u003c/code\u003e, \u003ccode\u003eCX\u003c/code\u003e, \u003ccode\u003eCY\u003c/code\u003e, \u003ccode\u003eCZ\u003c/code\u003e, \u003ccode\u003eDE\u003c/code\u003e, \u003ccode\u003eDJ\u003c/code\u003e, \u003ccode\u003eDK\u003c/code\u003e, \u003ccode\u003eDM\u003c/code\u003e, \u003ccode\u003eDO\u003c/code\u003e, \u003ccode\u003eDZ\u003c/code\u003e, \u003ccode\u003eEC\u003c/code\u003e, \u003ccode\u003eEE\u003c/code\u003e, \u003ccode\u003eEG\u003c/code\u003e, \u003ccode\u003eEH\u003c/code\u003e, \u003ccode\u003eER\u003c/code\u003e, \u003ccode\u003eES\u003c/code\u003e, \u003ccode\u003eET\u003c/code\u003e, \u003ccode\u003eFI\u003c/code\u003e, \u003ccode\u003eFJ\u003c/code\u003e, \u003ccode\u003eFK\u003c/code\u003e, \u003ccode\u003eFM\u003c/code\u003e, \u003ccode\u003eFO\u003c/code\u003e, \u003ccode\u003eFR\u003c/code\u003e, \u003ccode\u003eGA\u003c/code\u003e, \u003ccode\u003eGB\u003c/code\u003e, \u003ccode\u003eGD\u003c/code\u003e, \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eGF\u003c/code\u003e, \u003ccode\u003eGG\u003c/code\u003e, \u003ccode\u003eGH\u003c/code\u003e, \u003ccode\u003eGI\u003c/code\u003e, \u003ccode\u003eGL\u003c/code\u003e, \u003ccode\u003eGM\u003c/code\u003e, \u003ccode\u003eGN\u003c/code\u003e, \u003ccode\u003eGP\u003c/code\u003e, \u003ccode\u003eGQ\u003c/code\u003e, \u003ccode\u003eGR\u003c/code\u003e, \u003ccode\u003eGS\u003c/code\u003e, \u003ccode\u003eGT\u003c/code\u003e, \u003ccode\u003eGU\u003c/code\u003e, \u003ccode\u003eGW\u003c/code\u003e, \u003ccode\u003eGY\u003c/code\u003e, \u003ccode\u003eHK\u003c/code\u003e, \u003ccode\u003eHM\u003c/code\u003e, \u003ccode\u003eHN\u003c/code\u003e, \u003ccode\u003eHR\u003c/code\u003e, \u003ccode\u003eHT\u003c/code\u003e, \u003ccode\u003eHU\u003c/code\u003e, \u003ccode\u003eID\u003c/code\u003e, \u003ccode\u003eIE\u003c/code\u003e, \u003ccode\u003eIL\u003c/code\u003e, \u003ccode\u003eIM\u003c/code\u003e, \u003ccode\u003eIN\u003c/code\u003e, \u003ccode\u003eIO\u003c/code\u003e, \u003ccode\u003eIQ\u003c/code\u003e, \u003ccode\u003eIR\u003c/code\u003e, \u003ccode\u003eIS\u003c/code\u003e, \u003ccode\u003eIT\u003c/code\u003e, \u003ccode\u003eJE\u003c/code\u003e, \u003ccode\u003eJM\u003c/code\u003e, \u003ccode\u003eJO\u003c/code\u003e, \u003ccode\u003eJP\u003c/code\u003e, \u003ccode\u003eKE\u003c/code\u003e, \u003ccode\u003eKG\u003c/code\u003e, \u003ccode\u003eKH\u003c/code\u003e, \u003ccode\u003eKI\u003c/code\u003e, \u003ccode\u003eKM\u003c/code\u003e, \u003ccode\u003eKN\u003c/code\u003e, \u003ccode\u003eKP\u003c/code\u003e, \u003ccode\u003eKR\u003c/code\u003e, \u003ccode\u003eKW\u003c/code\u003e, \u003ccode\u003eKY\u003c/code\u003e, \u003ccode\u003eKZ\u003c/code\u003e, \u003ccode\u003eLA\u003c/code\u003e, \u003ccode\u003eLB\u003c/code\u003e, \u003ccode\u003eLC\u003c/code\u003e, \u003ccode\u003eLI\u003c/code\u003e, \u003ccode\u003eLK\u003c/code\u003e, \u003ccode\u003eLR\u003c/code\u003e, \u003ccode\u003eLS\u003c/code\u003e, \u003ccode\u003eLT\u003c/code\u003e, \u003ccode\u003eLU\u003c/code\u003e, \u003ccode\u003eLV\u003c/code\u003e, \u003ccode\u003eLY\u003c/code\u003e, \u003ccode\u003eMA\u003c/code\u003e, \u003ccode\u003eMC\u003c/code\u003e, \u003ccode\u003eMD\u003c/code\u003e, \u003ccode\u003eME\u003c/code\u003e, \u003ccode\u003eMF\u003c/code\u003e, \u003ccode\u003eMG\u003c/code\u003e, \u003ccode\u003eMH\u003c/code\u003e, \u003ccode\u003eMK\u003c/code\u003e, \u003ccode\u003eML\u003c/code\u003e, \u003ccode\u003eMM\u003c/code\u003e, \u003ccode\u003eMN\u003c/code\u003e, \u003ccode\u003eMO\u003c/code\u003e, \u003ccode\u003eMP\u003c/code\u003e, \u003ccode\u003eMQ\u003c/code\u003e, \u003ccode\u003eMR\u003c/code\u003e, \u003ccode\u003eMS\u003c/code\u003e, \u003ccode\u003eMT\u003c/code\u003e, \u003ccode\u003eMU\u003c/code\u003e, \u003ccode\u003eMV\u003c/code\u003e, \u003ccode\u003eMW\u003c/code\u003e, \u003ccode\u003eMX\u003c/code\u003e, \u003ccode\u003eMY\u003c/code\u003e, \u003ccode\u003eMZ\u003c/code\u003e, \u003ccode\u003eNA\u003c/code\u003e, \u003ccode\u003eNC\u003c/code\u003e, \u003ccode\u003eNE\u003c/code\u003e, \u003ccode\u003eNF\u003c/code\u003e, \u003ccode\u003eNG\u003c/code\u003e, \u003ccode\u003eNI\u003c/code\u003e, \u003ccode\u003eNL\u003c/code\u003e, \u003ccode\u003eNO\u003c/code\u003e, \u003ccode\u003eNP\u003c/code\u003e, \u003ccode\u003eNR\u003c/code\u003e, \u003ccode\u003eNU\u003c/code\u003e, \u003ccode\u003eNZ\u003c/code\u003e, \u003ccode\u003eOM\u003c/code\u003e, \u003ccode\u003ePA\u003c/code\u003e, \u003ccode\u003ePE\u003c/code\u003e, \u003ccode\u003ePF\u003c/code\u003e, \u003ccode\u003ePG\u003c/code\u003e, \u003ccode\u003ePH\u003c/code\u003e, \u003ccode\u003ePK\u003c/code\u003e, \u003ccode\u003ePL\u003c/code\u003e, \u003ccode\u003ePM\u003c/code\u003e, \u003ccode\u003ePN\u003c/code\u003e, \u003ccode\u003ePR\u003c/code\u003e, \u003ccode\u003ePS\u003c/code\u003e, \u003ccode\u003ePT\u003c/code\u003e, \u003ccode\u003ePW\u003c/code\u003e, \u003ccode\u003ePY\u003c/code\u003e, \u003ccode\u003eQA\u003c/code\u003e, \u003ccode\u003eRE\u003c/code\u003e, \u003ccode\u003eRO\u003c/code\u003e, \u003ccode\u003eRS\u003c/code\u003e, \u003ccode\u003eRU\u003c/code\u003e, \u003ccode\u003eRW\u003c/code\u003e, \u003ccode\u003eSA\u003c/code\u003e, \u003ccode\u003eSB\u003c/code\u003e, \u003ccode\u003eSC\u003c/code\u003e, \u003ccode\u003eSD\u003c/code\u003e, \u003ccode\u003eSE\u003c/code\u003e, \u003ccode\u003eSG\u003c/code\u003e, \u003ccode\u003eSH\u003c/code\u003e, \u003ccode\u003eSI\u003c/code\u003e, \u003ccode\u003eSJ\u003c/code\u003e, \u003ccode\u003eSK\u003c/code\u003e, \u003ccode\u003eSL\u003c/code\u003e, \u003ccode\u003eSM\u003c/code\u003e, \u003ccode\u003eSN\u003c/code\u003e, \u003ccode\u003eSO\u003c/code\u003e, \u003ccode\u003eSR\u003c/code\u003e, \u003ccode\u003eSS\u003c/code\u003e, \u003ccode\u003eST\u003c/code\u003e, \u003ccode\u003eSV\u003c/code\u003e, \u003ccode\u003eSX\u003c/code\u003e, \u003ccode\u003eSY\u003c/code\u003e, \u003ccode\u003eSZ\u003c/code\u003e, \u003ccode\u003eTC\u003c/code\u003e, \u003ccode\u003eTD\u003c/code\u003e, \u003ccode\u003eTF\u003c/code\u003e, \u003ccode\u003eTG\u003c/code\u003e, \u003ccode\u003eTH\u003c/code\u003e, \u003ccode\u003eTJ\u003c/code\u003e, \u003ccode\u003eTK\u003c/code\u003e, \u003ccode\u003eTL\u003c/code\u003e, \u003ccode\u003eTM\u003c/code\u003e, \u003ccode\u003eTN\u003c/code\u003e, \u003ccode\u003eTO\u003c/code\u003e, \u003ccode\u003eTR\u003c/code\u003e, \u003ccode\u003eTT\u003c/code\u003e, \u003ccode\u003eTV\u003c/code\u003e, \u003ccode\u003eTW\u003c/code\u003e, \u003ccode\u003eTZ\u003c/code\u003e, \u003ccode\u003eUA\u003c/code\u003e, \u003ccode\u003eUG\u003c/code\u003e, \u003ccode\u003eUM\u003c/code\u003e, \u003ccode\u003eUS\u003c/code\u003e, \u003ccode\u003eUY\u003c/code\u003e, \u003ccode\u003eUZ\u003c/code\u003e, \u003ccode\u003eVA\u003c/code\u003e, \u003ccode\u003eVC\u003c/code\u003e, \u003ccode\u003eVE\u003c/code\u003e, \u003ccode\u003eVG\u003c/code\u003e, \u003ccode\u003eVI\u003c/code\u003e, \u003ccode\u003eVN\u003c/code\u003e, \u003ccode\u003eVU\u003c/code\u003e, \u003ccode\u003eWF\u003c/code\u003e, \u003ccode\u003eWS\u003c/code\u003e, \u003ccode\u003eXK\u003c/code\u003e, \u003ccode\u003eYE\u003c/code\u003e, \u003ccode\u003eYT\u003c/code\u003e, \u003ccode\u003eZA\u003c/code\u003e, \u003ccode\u003eZM\u003c/code\u003e, \u003ccode\u003eZW\u003c/code\u003e, \u003ccode\u003e\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "birth_city",
                        "full_name": "user[user_candidature_attributes][birth_city]",
                        "description": "The birth city.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "birth_country",
                        "full_name": "user[user_candidature_attributes][birth_country]",
                        "description": "The birth country.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_street",
                        "full_name": "user[user_candidature_attributes][postal_street]",
                        "description": "The postal street.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_complement",
                        "full_name": "user[user_candidature_attributes][postal_complement]",
                        "description": "The postal complement.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_city",
                        "full_name": "user[user_candidature_attributes][postal_city]",
                        "description": "The postal city.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_zip_code",
                        "full_name": "user[user_candidature_attributes][postal_zip_code]",
                        "description": "The postal zip code.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_country",
                        "full_name": "user[user_candidature_attributes][postal_country]",
                        "description": "The postal country.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_affiliation",
                        "full_name": "user[user_candidature_attributes][contact_affiliation]",
                        "description": "The contact affiliation.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_last_name",
                        "full_name": "user[user_candidature_attributes][contact_last_name]",
                        "description": "The contact last name.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_first_name",
                        "full_name": "user[user_candidature_attributes][contact_first_name]",
                        "description": "The contact first name.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_phone1",
                        "full_name": "user[user_candidature_attributes][contact_phone1]",
                        "description": "The contact phone1.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_phone2",
                        "full_name": "user[user_candidature_attributes][contact_phone2]",
                        "description": "The contact phone2.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "max_level_memory",
                        "full_name": "user[user_candidature_attributes][max_level_memory]",
                        "description": "The max level memory.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "max_level_logic",
                        "full_name": "user[user_candidature_attributes][max_level_logic]",
                        "description": "The max level logic.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "other_information",
                        "full_name": "user[user_candidature_attributes][other_information]",
                        "description": "The other information.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language",
                        "full_name": "user[user_candidature_attributes][language]",
                        "description": "The language.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "meeting_date",
                        "full_name": "user[user_candidature_attributes][meeting_date]",
                        "description": "The meeting date.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "piscine_date",
                        "full_name": "user[user_candidature_attributes][piscine_date]",
                        "description": "The piscine date.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "email",
                        "full_name": "user[user_candidature_attributes][email]",
                        "description": "The email.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "pin",
                        "full_name": "user[user_candidature_attributes][pin]",
                        "description": "The pin.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "phone",
                        "full_name": "user[user_candidature_attributes][phone]",
                        "description": "The phone.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "cursus_users_attributes",
                    "full_name": "user[cursus_users_attributes]",
                    "description": "The cursus users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "user[cursus_users_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "cursus_id",
                        "full_name": "user[cursus_users_attributes][cursus_id]",
                        "description": "The cursus id. Must be unique in the scope of a given user.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "end_at",
                        "full_name": "user[cursus_users_attributes][end_at]",
                        "description": "The end at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "begin_at",
                        "full_name": "user[cursus_users_attributes][begin_at]",
                        "description": "The begin at.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "user[cursus_users_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "languages_users_attributes",
                    "full_name": "user[languages_users_attributes]",
                    "description": "The languages users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "user[languages_users_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "user[languages_users_attributes][language_id]",
                        "description": "The language id.",
                        "required": true,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "position",
                        "full_name": "user[languages_users_attributes][position]",
                        "description": "The position.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "user[languages_users_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/users",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "user": {
                    "campus_id": "1",
                    "cursus_users_attributes": [
                      {
                        "begin_at": "2017-11-25 13:44:19 UTC",
                        "cursus_id": "1",
                        "end_at": "2018-03-22 13:43:10 UTC",
                        "user_id": ""
                      }
                    ],
                    "email": "anakin@caramail.net",
                    "first_name": "Anakin",
                    "kind": "student",
                    "languages_users_attributes": [
                      { "language_id": "1", "position": "1", "user_id": "" }
                    ],
                    "last_name": "Skywalker",
                    "password": "totoroTOTOROOO",
                    "pool_month": "may",
                    "pool_year": "2017",
                    "status": "admis",
                    "user_candidature_attributes": {
                      "birth_city": "East Adrainshire",
                      "birth_country": "Iran",
                      "birth_date": "1998-06-08",
                      "contact_affiliation": "parent",
                      "contact_first_name": "Dewayne",
                      "contact_last_name": "Nader",
                      "contact_phone1": "0695847362",
                      "contact_phone2": "0491314200",
                      "country": "Turks and Caicos Islands",
                      "gender": "female",
                      "language": "",
                      "max_level_logic": "2",
                      "max_level_memory": "1",
                      "meeting_date": "2017-10-05",
                      "other_information": "3",
                      "pin": "4242",
                      "piscine_date": "2017-11-15",
                      "postal_city": "Emelyborough",
                      "postal_complement": "",
                      "postal_country": "Lesotho",
                      "postal_street": "621 Tromp Lakes",
                      "postal_zip_code": "10047",
                      "user_id": "",
                      "zip_code": "89457-3613"
                    }
                  }
                },
                "response_data": {
                  "id": 127,
                  "login": "anakisky",
                  "url": "https://api.intra.42.fr/v2/users/anakisky"
                },
                "code": "201",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/update",
            "name": "update",
            "apis": [
              {
                "api_url": "/v2/users/:id",
                "http_method": "PATCH",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/users/:id",
                "http_method": "PUT",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "user",
                "full_name": "user",
                "description": "",
                "required": false,
                "allow_nil": true,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "login",
                    "full_name": "user[login]",
                    "description": "The login. Default to . Must be unique.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email",
                    "full_name": "user[email]",
                    "description": "The email. Default to . Must be unique.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "first_name",
                    "full_name": "user[first_name]",
                    "description": "The first name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "last_name",
                    "full_name": "user[last_name]",
                    "description": "The last name.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "usual_first_name",
                    "full_name": "user[usual_first_name]",
                    "description": "The usual first name. Maximum length is 42.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "password",
                    "full_name": "user[password]",
                    "description": "The password.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_year",
                    "full_name": "user[pool_year]",
                    "description": "The pool year.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "pool_month",
                    "full_name": "user[pool_month]",
                    "description": "The pool month.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "kind",
                    "full_name": "user[kind]",
                    "description": "The kind.",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be one of: \u003ccode\u003eadmin\u003c/code\u003e, \u003ccode\u003estudent\u003c/code\u003e, \u003ccode\u003eexternal\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "status",
                    "full_name": "user[status]",
                    "description": "The status.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "image",
                    "full_name": "user[image]",
                    "description": "The image. Allow blank length is true. Allow nil length is true. Minimum length is 3072. Maximum length is 1048576.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be File",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "campus_id",
                    "full_name": "user[campus_id]",
                    "description": "The campus id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "cursus_id",
                    "full_name": "user[cursus_id]",
                    "description": "The cursus id.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "email_stop",
                    "full_name": "user[email_stop]",
                    "description": "Is it email stop ? Default to false.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be one of: \u003ccode\u003etrue\u003c/code\u003e, \u003ccode\u003efalse\u003c/code\u003e.",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "skip_welcome_mail",
                    "full_name": "user[skip_welcome_mail]",
                    "description": "The skip welcome mail.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be String",
                    "expected_type": "string",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "user_candidature_attributes",
                    "full_name": "user[user_candidature_attributes]",
                    "description": "The user candidature attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "user[user_candidature_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "user_id",
                        "full_name": "user[user_candidature_attributes][user_id]",
                        "description": "The user id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "birth_date",
                        "full_name": "user[user_candidature_attributes][birth_date]",
                        "description": "The birth date.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "gender",
                        "full_name": "user[user_candidature_attributes][gender]",
                        "description": "The gender.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "zip_code",
                        "full_name": "user[user_candidature_attributes][zip_code]",
                        "description": "The zip code.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "country",
                        "full_name": "user[user_candidature_attributes][country]",
                        "description": "The country.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "phone_country_code",
                        "full_name": "user[user_candidature_attributes][phone_country_code]",
                        "description": "The phone country code.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be one of: \u003ccode\u003eAD\u003c/code\u003e, \u003ccode\u003eAE\u003c/code\u003e, \u003ccode\u003eAF\u003c/code\u003e, \u003ccode\u003eAG\u003c/code\u003e, \u003ccode\u003eAI\u003c/code\u003e, \u003ccode\u003eAL\u003c/code\u003e, \u003ccode\u003eAM\u003c/code\u003e, \u003ccode\u003eAN\u003c/code\u003e, \u003ccode\u003eAO\u003c/code\u003e, \u003ccode\u003eAQ\u003c/code\u003e, \u003ccode\u003eAR\u003c/code\u003e, \u003ccode\u003eAS\u003c/code\u003e, \u003ccode\u003eAT\u003c/code\u003e, \u003ccode\u003eAU\u003c/code\u003e, \u003ccode\u003eAW\u003c/code\u003e, \u003ccode\u003eAX\u003c/code\u003e, \u003ccode\u003eAZ\u003c/code\u003e, \u003ccode\u003eBA\u003c/code\u003e, \u003ccode\u003eBB\u003c/code\u003e, \u003ccode\u003eBD\u003c/code\u003e, \u003ccode\u003eBE\u003c/code\u003e, \u003ccode\u003eBF\u003c/code\u003e, \u003ccode\u003eBG\u003c/code\u003e, \u003ccode\u003eBH\u003c/code\u003e, \u003ccode\u003eBI\u003c/code\u003e, \u003ccode\u003eBJ\u003c/code\u003e, \u003ccode\u003eBL\u003c/code\u003e, \u003ccode\u003eBM\u003c/code\u003e, \u003ccode\u003eBN\u003c/code\u003e, \u003ccode\u003eBO\u003c/code\u003e, \u003ccode\u003eBQ\u003c/code\u003e, \u003ccode\u003eBR\u003c/code\u003e, \u003ccode\u003eBS\u003c/code\u003e, \u003ccode\u003eBT\u003c/code\u003e, \u003ccode\u003eBV\u003c/code\u003e, \u003ccode\u003eBW\u003c/code\u003e, \u003ccode\u003eBY\u003c/code\u003e, \u003ccode\u003eBZ\u003c/code\u003e, \u003ccode\u003eCA\u003c/code\u003e, \u003ccode\u003eCC\u003c/code\u003e, \u003ccode\u003eCD\u003c/code\u003e, \u003ccode\u003eCF\u003c/code\u003e, \u003ccode\u003eCG\u003c/code\u003e, \u003ccode\u003eCH\u003c/code\u003e, \u003ccode\u003eCI\u003c/code\u003e, \u003ccode\u003eCK\u003c/code\u003e, \u003ccode\u003eCL\u003c/code\u003e, \u003ccode\u003eCM\u003c/code\u003e, \u003ccode\u003eCN\u003c/code\u003e, \u003ccode\u003eCO\u003c/code\u003e, \u003ccode\u003eCR\u003c/code\u003e, \u003ccode\u003eCU\u003c/code\u003e, \u003ccode\u003eCV\u003c/code\u003e, \u003ccode\u003eCW\u003c/code\u003e, \u003ccode\u003eCX\u003c/code\u003e, \u003ccode\u003eCY\u003c/code\u003e, \u003ccode\u003eCZ\u003c/code\u003e, \u003ccode\u003eDE\u003c/code\u003e, \u003ccode\u003eDJ\u003c/code\u003e, \u003ccode\u003eDK\u003c/code\u003e, \u003ccode\u003eDM\u003c/code\u003e, \u003ccode\u003eDO\u003c/code\u003e, \u003ccode\u003eDZ\u003c/code\u003e, \u003ccode\u003eEC\u003c/code\u003e, \u003ccode\u003eEE\u003c/code\u003e, \u003ccode\u003eEG\u003c/code\u003e, \u003ccode\u003eEH\u003c/code\u003e, \u003ccode\u003eER\u003c/code\u003e, \u003ccode\u003eES\u003c/code\u003e, \u003ccode\u003eET\u003c/code\u003e, \u003ccode\u003eFI\u003c/code\u003e, \u003ccode\u003eFJ\u003c/code\u003e, \u003ccode\u003eFK\u003c/code\u003e, \u003ccode\u003eFM\u003c/code\u003e, \u003ccode\u003eFO\u003c/code\u003e, \u003ccode\u003eFR\u003c/code\u003e, \u003ccode\u003eGA\u003c/code\u003e, \u003ccode\u003eGB\u003c/code\u003e, \u003ccode\u003eGD\u003c/code\u003e, \u003ccode\u003eGE\u003c/code\u003e, \u003ccode\u003eGF\u003c/code\u003e, \u003ccode\u003eGG\u003c/code\u003e, \u003ccode\u003eGH\u003c/code\u003e, \u003ccode\u003eGI\u003c/code\u003e, \u003ccode\u003eGL\u003c/code\u003e, \u003ccode\u003eGM\u003c/code\u003e, \u003ccode\u003eGN\u003c/code\u003e, \u003ccode\u003eGP\u003c/code\u003e, \u003ccode\u003eGQ\u003c/code\u003e, \u003ccode\u003eGR\u003c/code\u003e, \u003ccode\u003eGS\u003c/code\u003e, \u003ccode\u003eGT\u003c/code\u003e, \u003ccode\u003eGU\u003c/code\u003e, \u003ccode\u003eGW\u003c/code\u003e, \u003ccode\u003eGY\u003c/code\u003e, \u003ccode\u003eHK\u003c/code\u003e, \u003ccode\u003eHM\u003c/code\u003e, \u003ccode\u003eHN\u003c/code\u003e, \u003ccode\u003eHR\u003c/code\u003e, \u003ccode\u003eHT\u003c/code\u003e, \u003ccode\u003eHU\u003c/code\u003e, \u003ccode\u003eID\u003c/code\u003e, \u003ccode\u003eIE\u003c/code\u003e, \u003ccode\u003eIL\u003c/code\u003e, \u003ccode\u003eIM\u003c/code\u003e, \u003ccode\u003eIN\u003c/code\u003e, \u003ccode\u003eIO\u003c/code\u003e, \u003ccode\u003eIQ\u003c/code\u003e, \u003ccode\u003eIR\u003c/code\u003e, \u003ccode\u003eIS\u003c/code\u003e, \u003ccode\u003eIT\u003c/code\u003e, \u003ccode\u003eJE\u003c/code\u003e, \u003ccode\u003eJM\u003c/code\u003e, \u003ccode\u003eJO\u003c/code\u003e, \u003ccode\u003eJP\u003c/code\u003e, \u003ccode\u003eKE\u003c/code\u003e, \u003ccode\u003eKG\u003c/code\u003e, \u003ccode\u003eKH\u003c/code\u003e, \u003ccode\u003eKI\u003c/code\u003e, \u003ccode\u003eKM\u003c/code\u003e, \u003ccode\u003eKN\u003c/code\u003e, \u003ccode\u003eKP\u003c/code\u003e, \u003ccode\u003eKR\u003c/code\u003e, \u003ccode\u003eKW\u003c/code\u003e, \u003ccode\u003eKY\u003c/code\u003e, \u003ccode\u003eKZ\u003c/code\u003e, \u003ccode\u003eLA\u003c/code\u003e, \u003ccode\u003eLB\u003c/code\u003e, \u003ccode\u003eLC\u003c/code\u003e, \u003ccode\u003eLI\u003c/code\u003e, \u003ccode\u003eLK\u003c/code\u003e, \u003ccode\u003eLR\u003c/code\u003e, \u003ccode\u003eLS\u003c/code\u003e, \u003ccode\u003eLT\u003c/code\u003e, \u003ccode\u003eLU\u003c/code\u003e, \u003ccode\u003eLV\u003c/code\u003e, \u003ccode\u003eLY\u003c/code\u003e, \u003ccode\u003eMA\u003c/code\u003e, \u003ccode\u003eMC\u003c/code\u003e, \u003ccode\u003eMD\u003c/code\u003e, \u003ccode\u003eME\u003c/code\u003e, \u003ccode\u003eMF\u003c/code\u003e, \u003ccode\u003eMG\u003c/code\u003e, \u003ccode\u003eMH\u003c/code\u003e, \u003ccode\u003eMK\u003c/code\u003e, \u003ccode\u003eML\u003c/code\u003e, \u003ccode\u003eMM\u003c/code\u003e, \u003ccode\u003eMN\u003c/code\u003e, \u003ccode\u003eMO\u003c/code\u003e, \u003ccode\u003eMP\u003c/code\u003e, \u003ccode\u003eMQ\u003c/code\u003e, \u003ccode\u003eMR\u003c/code\u003e, \u003ccode\u003eMS\u003c/code\u003e, \u003ccode\u003eMT\u003c/code\u003e, \u003ccode\u003eMU\u003c/code\u003e, \u003ccode\u003eMV\u003c/code\u003e, \u003ccode\u003eMW\u003c/code\u003e, \u003ccode\u003eMX\u003c/code\u003e, \u003ccode\u003eMY\u003c/code\u003e, \u003ccode\u003eMZ\u003c/code\u003e, \u003ccode\u003eNA\u003c/code\u003e, \u003ccode\u003eNC\u003c/code\u003e, \u003ccode\u003eNE\u003c/code\u003e, \u003ccode\u003eNF\u003c/code\u003e, \u003ccode\u003eNG\u003c/code\u003e, \u003ccode\u003eNI\u003c/code\u003e, \u003ccode\u003eNL\u003c/code\u003e, \u003ccode\u003eNO\u003c/code\u003e, \u003ccode\u003eNP\u003c/code\u003e, \u003ccode\u003eNR\u003c/code\u003e, \u003ccode\u003eNU\u003c/code\u003e, \u003ccode\u003eNZ\u003c/code\u003e, \u003ccode\u003eOM\u003c/code\u003e, \u003ccode\u003ePA\u003c/code\u003e, \u003ccode\u003ePE\u003c/code\u003e, \u003ccode\u003ePF\u003c/code\u003e, \u003ccode\u003ePG\u003c/code\u003e, \u003ccode\u003ePH\u003c/code\u003e, \u003ccode\u003ePK\u003c/code\u003e, \u003ccode\u003ePL\u003c/code\u003e, \u003ccode\u003ePM\u003c/code\u003e, \u003ccode\u003ePN\u003c/code\u003e, \u003ccode\u003ePR\u003c/code\u003e, \u003ccode\u003ePS\u003c/code\u003e, \u003ccode\u003ePT\u003c/code\u003e, \u003ccode\u003ePW\u003c/code\u003e, \u003ccode\u003ePY\u003c/code\u003e, \u003ccode\u003eQA\u003c/code\u003e, \u003ccode\u003eRE\u003c/code\u003e, \u003ccode\u003eRO\u003c/code\u003e, \u003ccode\u003eRS\u003c/code\u003e, \u003ccode\u003eRU\u003c/code\u003e, \u003ccode\u003eRW\u003c/code\u003e, \u003ccode\u003eSA\u003c/code\u003e, \u003ccode\u003eSB\u003c/code\u003e, \u003ccode\u003eSC\u003c/code\u003e, \u003ccode\u003eSD\u003c/code\u003e, \u003ccode\u003eSE\u003c/code\u003e, \u003ccode\u003eSG\u003c/code\u003e, \u003ccode\u003eSH\u003c/code\u003e, \u003ccode\u003eSI\u003c/code\u003e, \u003ccode\u003eSJ\u003c/code\u003e, \u003ccode\u003eSK\u003c/code\u003e, \u003ccode\u003eSL\u003c/code\u003e, \u003ccode\u003eSM\u003c/code\u003e, \u003ccode\u003eSN\u003c/code\u003e, \u003ccode\u003eSO\u003c/code\u003e, \u003ccode\u003eSR\u003c/code\u003e, \u003ccode\u003eSS\u003c/code\u003e, \u003ccode\u003eST\u003c/code\u003e, \u003ccode\u003eSV\u003c/code\u003e, \u003ccode\u003eSX\u003c/code\u003e, \u003ccode\u003eSY\u003c/code\u003e, \u003ccode\u003eSZ\u003c/code\u003e, \u003ccode\u003eTC\u003c/code\u003e, \u003ccode\u003eTD\u003c/code\u003e, \u003ccode\u003eTF\u003c/code\u003e, \u003ccode\u003eTG\u003c/code\u003e, \u003ccode\u003eTH\u003c/code\u003e, \u003ccode\u003eTJ\u003c/code\u003e, \u003ccode\u003eTK\u003c/code\u003e, \u003ccode\u003eTL\u003c/code\u003e, \u003ccode\u003eTM\u003c/code\u003e, \u003ccode\u003eTN\u003c/code\u003e, \u003ccode\u003eTO\u003c/code\u003e, \u003ccode\u003eTR\u003c/code\u003e, \u003ccode\u003eTT\u003c/code\u003e, \u003ccode\u003eTV\u003c/code\u003e, \u003ccode\u003eTW\u003c/code\u003e, \u003ccode\u003eTZ\u003c/code\u003e, \u003ccode\u003eUA\u003c/code\u003e, \u003ccode\u003eUG\u003c/code\u003e, \u003ccode\u003eUM\u003c/code\u003e, \u003ccode\u003eUS\u003c/code\u003e, \u003ccode\u003eUY\u003c/code\u003e, \u003ccode\u003eUZ\u003c/code\u003e, \u003ccode\u003eVA\u003c/code\u003e, \u003ccode\u003eVC\u003c/code\u003e, \u003ccode\u003eVE\u003c/code\u003e, \u003ccode\u003eVG\u003c/code\u003e, \u003ccode\u003eVI\u003c/code\u003e, \u003ccode\u003eVN\u003c/code\u003e, \u003ccode\u003eVU\u003c/code\u003e, \u003ccode\u003eWF\u003c/code\u003e, \u003ccode\u003eWS\u003c/code\u003e, \u003ccode\u003eXK\u003c/code\u003e, \u003ccode\u003eYE\u003c/code\u003e, \u003ccode\u003eYT\u003c/code\u003e, \u003ccode\u003eZA\u003c/code\u003e, \u003ccode\u003eZM\u003c/code\u003e, \u003ccode\u003eZW\u003c/code\u003e, \u003ccode\u003e\u003c/code\u003e.",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "birth_city",
                        "full_name": "user[user_candidature_attributes][birth_city]",
                        "description": "The birth city.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "birth_country",
                        "full_name": "user[user_candidature_attributes][birth_country]",
                        "description": "The birth country.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_street",
                        "full_name": "user[user_candidature_attributes][postal_street]",
                        "description": "The postal street.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_complement",
                        "full_name": "user[user_candidature_attributes][postal_complement]",
                        "description": "The postal complement.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_city",
                        "full_name": "user[user_candidature_attributes][postal_city]",
                        "description": "The postal city.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_zip_code",
                        "full_name": "user[user_candidature_attributes][postal_zip_code]",
                        "description": "The postal zip code.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "postal_country",
                        "full_name": "user[user_candidature_attributes][postal_country]",
                        "description": "The postal country.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_affiliation",
                        "full_name": "user[user_candidature_attributes][contact_affiliation]",
                        "description": "The contact affiliation.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_last_name",
                        "full_name": "user[user_candidature_attributes][contact_last_name]",
                        "description": "The contact last name.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_first_name",
                        "full_name": "user[user_candidature_attributes][contact_first_name]",
                        "description": "The contact first name.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_phone1",
                        "full_name": "user[user_candidature_attributes][contact_phone1]",
                        "description": "The contact phone1.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "contact_phone2",
                        "full_name": "user[user_candidature_attributes][contact_phone2]",
                        "description": "The contact phone2.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "max_level_memory",
                        "full_name": "user[user_candidature_attributes][max_level_memory]",
                        "description": "The max level memory.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "max_level_logic",
                        "full_name": "user[user_candidature_attributes][max_level_logic]",
                        "description": "The max level logic.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "other_information",
                        "full_name": "user[user_candidature_attributes][other_information]",
                        "description": "The other information.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language",
                        "full_name": "user[user_candidature_attributes][language]",
                        "description": "The language.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "meeting_date",
                        "full_name": "user[user_candidature_attributes][meeting_date]",
                        "description": "The meeting date.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "piscine_date",
                        "full_name": "user[user_candidature_attributes][piscine_date]",
                        "description": "The piscine date.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "email",
                        "full_name": "user[user_candidature_attributes][email]",
                        "description": "The email.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "pin",
                        "full_name": "user[user_candidature_attributes][pin]",
                        "description": "The pin.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "phone",
                        "full_name": "user[user_candidature_attributes][phone]",
                        "description": "The phone.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "cursus_users_attributes",
                    "full_name": "user[cursus_users_attributes]",
                    "description": "The cursus users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "user[cursus_users_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "cursus_id",
                        "full_name": "user[cursus_users_attributes][cursus_id]",
                        "description": "The cursus id. Must be unique in the scope of a given user.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "end_at",
                        "full_name": "user[cursus_users_attributes][end_at]",
                        "description": "The end at.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "begin_at",
                        "full_name": "user[cursus_users_attributes][begin_at]",
                        "description": "The begin at.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be DateTime",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "user[cursus_users_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  },
                  {
                    "name": "languages_users_attributes",
                    "full_name": "user[languages_users_attributes]",
                    "description": "The languages users attributes.",
                    "required": false,
                    "allow_nil": true,
                    "validator": "Must be an Array of nested elements",
                    "expected_type": "array",
                    "metadata": null,
                    "show": true,
                    "validations": [],
                    "params": [
                      {
                        "name": "id",
                        "full_name": "user[languages_users_attributes][id]",
                        "description": "The id.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "language_id",
                        "full_name": "user[languages_users_attributes][language_id]",
                        "description": "The language id.",
                        "required": false,
                        "allow_nil": false,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "position",
                        "full_name": "user[languages_users_attributes][position]",
                        "description": "The position.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be Fixnum",
                        "expected_type": "numeric",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      },
                      {
                        "name": "_destroy",
                        "full_name": "user[languages_users_attributes][_destroy]",
                        "description": "The destroy.",
                        "required": false,
                        "allow_nil": true,
                        "validator": "Must be String",
                        "expected_type": "string",
                        "metadata": null,
                        "show": true,
                        "validations": []
                      }
                    ]
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "PUT",
                "path": "/v2/users/2",
                "versions": ["2.0"],
                "query": null,
                "request_data": {
                  "user": {
                    "campus_id": "1",
                    "email": "anakin@caramail.net",
                    "first_name": "Anakin",
                    "kind": "student",
                    "last_name": "Skywalker",
                    "password": "totoroTOTOROOO",
                    "pool_month": "september",
                    "pool_year": "2017",
                    "status": "admis"
                  }
                },
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_tutor"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/me",
            "name": "me",
            "apis": [
              {
                "api_url": "/v2/me",
                "http_method": "GET",
                "short_description": "Show the current resource owner",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Will respond with the current resource owner, wich is the token owner (the actually logged-in user).",
            "errors": [],
            "params": [],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/me",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "id": 2,
                  "email": "andre@42.fr",
                  "login": "andre",
                  "first_name": "André",
                  "last_name": "Aubin",
                  "usual_full_name": "Juliette Aubin",
                  "usual_first_name": "Juliette",
                  "url": "https://api.intra.42.fr/v2/users/andre",
                  "phone": null,
                  "displayname": "André Aubin",
                  "kind": "admin",
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/1234567890/andre.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/1234567890/large_andre.jpg",
                      "medium": "https://cdn.intra.42.fr/users/1234567890/medium_andre.jpg",
                      "small": "https://cdn.intra.42.fr/users/1234567890/small_andre.jpg",
                      "micro": "https://cdn.intra.42.fr/users/1234567890/micro_andre.jpgg"
                    }
                  },
                  "staff?": false,
                  "correction_point": 4,
                  "pool_month": "july",
                  "pool_year": "2016",
                  "location": null,
                  "wallet": 0,
                  "anonymize_date": "2021-02-20T00:00:00.000+03:00",
                  "data_erasure_date": null,
                  "alumni?": false,
                  "active?": true,
                  "groups": [],
                  "cursus_users": [
                    {
                      "id": 2,
                      "begin_at": "2017-05-14T21:37:50.172Z",
                      "end_at": null,
                      "grade": null,
                      "level": 0.0,
                      "skills": [],
                      "cursus_id": 1,
                      "has_coalition": true,
                      "user": {
                        "id": 2,
                        "login": "andre",
                        "url": "https://api.intra.42.fr/v2/users/andre"
                      },
                      "cursus": {
                        "id": 1,
                        "created_at": "2017-11-22T13:41:00.750Z",
                        "name": "Piscine C",
                        "slug": "piscine-c"
                      }
                    }
                  ],
                  "projects_users": [],
                  "languages_users": [
                    {
                      "id": 2,
                      "language_id": 3,
                      "user_id": 2,
                      "position": 1,
                      "created_at": "2017-11-22T13:41:03.638Z"
                    }
                  ],
                  "achievements": [],
                  "titles": [],
                  "titles_users": [],
                  "partnerships": [],
                  "patroned": [
                    {
                      "id": 4,
                      "user_id": 2,
                      "godfather_id": 15,
                      "ongoing": true,
                      "created_at": "2017-11-22T13:42:11.565Z",
                      "updated_at": "2017-11-22T13:42:11.572Z"
                    }
                  ],
                  "patroning": [],
                  "expertises_users": [
                    {
                      "id": 2,
                      "expertise_id": 3,
                      "interested": false,
                      "value": 2,
                      "contact_me": false,
                      "created_at": "2017-11-22T13:41:22.504Z",
                      "user_id": 2
                    }
                  ],
                  "roles": [],
                  "campus": [
                    {
                      "id": 1,
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "language": {
                        "id": 3,
                        "name": "Romanian",
                        "identifier": "ro",
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "campus_users": [
                    {
                      "id": 2,
                      "user_id": 2,
                      "campus_id": 1,
                      "is_primary": true
                    }
                  ]
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "authentication": "user" },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/free_past_agu",
            "name": "free_past_agu",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/free_past_agu",
                "http_method": "POST",
                "short_description": "free past agu to user",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Add a free agu in the past for a user which implies to delay the blackhole, Please follow the rules about the free agu. (if you dont know the rules contact a 42network staff)",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The user login",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "duration",
                "full_name": "duration",
                "description": "Blackhole delay duration in day",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "reason",
                "full_name": "reason",
                "description": "Optional reason for the freeze.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "POST",
                "path": "/v2/users/:id/free_past_agu",
                "versions": ["2.0"],
                "query": "",
                "request_data": { "duration": 2, "reason": "optional" },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/unfreeze",
            "name": "unfreeze",
            "apis": [
              {
                "api_url": "/v2/users/:user_id/unfreeze",
                "http_method": "POST",
                "short_description": "Unfreeze user",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "End all agus",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": { "roles": ["advanced_staff"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/users/staff",
            "name": "staff",
            "apis": [
              {
                "api_url": "/v2/staff",
                "http_method": "GET",
                "short_description": "Get all staff",
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "Get all staff",
            "errors": [],
            "params": [],
            "examples": [],
            "metadata": { "roles": ["42network"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      },
      "waitlists": {
        "doc_url": "/apidoc/2.0/waitlists",
        "api_url": "/api",
        "name": "Waitlists",
        "short_description": "Waitlist for an \u003ca href='#events'\u003eevent\u003c/a\u003e or an \u003ca href='#exams'\u003eexam\u003c/a\u003e.",
        "full_description": "",
        "version": "2.0",
        "formats": null,
        "metadata": null,
        "methods": [
          {
            "doc_url": "/apidoc/2.0/waitlists/index",
            "name": "index",
            "apis": [
              {
                "api_url": "/v2/waitlists",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "sort",
                "full_name": "sort",
                "description": "The sort field. Sorted by created_at asc, id desc by default.",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ewaitlistable_id\u003c/code\u003e, \u003ccode\u003ewaitlistable_type\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "sort": {
                    "default": { "created_at": "asc", "id": "desc" },
                    "keys": [
                      "id",
                      "waitlistable_id",
                      "waitlistable_type",
                      "created_at",
                      "updated_at"
                    ]
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "filter",
                "full_name": "filter",
                "description": "Filtering on one or more fields",
                "required": false,
                "allow_nil": false,
                "validator": "Must be one of: \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003ewaitlistable_id\u003c/code\u003e, \u003ccode\u003ewaitlistable_type\u003c/code\u003e, \u003ccode\u003ecreated_at\u003c/code\u003e, \u003ccode\u003eupdated_at\u003c/code\u003e.",
                "expected_type": "string",
                "metadata": {
                  "filter": {
                    "keys": [
                      "id",
                      "waitlistable_id",
                      "waitlistable_type",
                      "created_at",
                      "updated_at"
                    ],
                    "additional": {}
                  }
                },
                "show": true,
                "validations": []
              },
              {
                "name": "page",
                "full_name": "page",
                "description": "The pagination params, as a hash",
                "required": false,
                "allow_nil": false,
                "validator": "Must be a Hash",
                "expected_type": "hash",
                "metadata": null,
                "show": true,
                "validations": [],
                "params": [
                  {
                    "name": "number",
                    "full_name": "page[number]",
                    "description": "The current page",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  },
                  {
                    "name": "size",
                    "full_name": "page[size]",
                    "description": "The number of items per page, defaults to 30, maximum 100",
                    "required": false,
                    "allow_nil": false,
                    "validator": "Must be Fixnum",
                    "expected_type": "numeric",
                    "metadata": null,
                    "show": true,
                    "validations": []
                  }
                ]
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/waitlists",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": [
                  {
                    "created_at": "2018-09-13T18:55:37.552Z",
                    "id": 1,
                    "waitlistable_id": 1669,
                    "waitlistable_type": "Exam"
                  },
                  {
                    "created_at": "2018-09-13T18:56:36.902Z",
                    "id": 2,
                    "waitlistable_id": 1670,
                    "waitlistable_type": "Exam"
                  },
                  {
                    "created_at": "2018-09-13T18:57:13.021Z",
                    "id": 3,
                    "waitlistable_id": 1671,
                    "waitlistable_type": "Exam"
                  },
                  {
                    "created_at": "2018-09-13T18:58:01.760Z",
                    "id": 4,
                    "waitlistable_id": 1672,
                    "waitlistable_type": "Exam"
                  },
                  {
                    "created_at": "2018-09-14T08:16:14.076Z",
                    "id": 5,
                    "waitlistable_id": 1673,
                    "waitlistable_type": "Exam"
                  },
                  {
                    "created_at": "2018-09-14T10:01:19.094Z",
                    "id": 8,
                    "waitlistable_id": 1676,
                    "waitlistable_type": "Exam"
                  }
                ],
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": {
              "paginated": true,
              "pagination_count": 30,
              "roles": ["advanced_staff", "events_manager"]
            },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/waitlists/show",
            "name": "show",
            "apis": [
              {
                "api_url": "/v2/events/:event_id/waitlist",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/exams/:exam_id/waitlist",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              },
              {
                "api_url": "/v2/waitlists/:id",
                "http_method": "GET",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "event_id",
                "full_name": "event_id",
                "description": "The event id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "exam_id",
                "full_name": "exam_id",
                "description": "The exam id",
                "required": false,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              },
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "GET",
                "path": "/v2/events/2530/waitlist",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "created_at": "2018-09-19T15:15:33.124Z",
                  "id": 32,
                  "waitlistable_id": 2530,
                  "waitlistable_type": "Event"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              },
              {
                "verb": "GET",
                "path": "/v2/waitlists/32",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": {
                  "created_at": "2018-09-19T15:15:33.124Z",
                  "id": 32,
                  "waitlistable_id": 2530,
                  "waitlistable_type": "Event"
                },
                "code": "200",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "events_manager"] },
            "see": [],
            "headers": [],
            "show": true
          },
          {
            "doc_url": "/apidoc/2.0/waitlists/destroy",
            "name": "destroy",
            "apis": [
              {
                "api_url": "/v2/waitlists/:id",
                "http_method": "DELETE",
                "short_description": null,
                "deprecated": null
              }
            ],
            "formats": null,
            "full_description": "",
            "errors": [],
            "params": [
              {
                "name": "id",
                "full_name": "id",
                "description": "The requested id",
                "required": true,
                "allow_nil": false,
                "validator": "Must be String",
                "expected_type": "string",
                "metadata": null,
                "show": true,
                "validations": []
              }
            ],
            "examples": [
              {
                "verb": "DELETE",
                "path": "/v2/waitlists/2",
                "versions": ["2.0"],
                "query": "",
                "request_data": null,
                "response_data": null,
                "code": "204",
                "show_in_doc": 1,
                "recorded": true
              }
            ],
            "metadata": { "roles": ["advanced_staff", "events_manager"] },
            "see": [],
            "headers": [],
            "show": true
          }
        ],
        "headers": []
      }
    }
  }
}
