{
  "swagger": "2.0",
  "info": {
    "description": "This is the second version of the 42's API.",
    "title": "42 Api",
    "version": "1.0.0"
  },
  "basePath": "/v2",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accreditations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "cursus_id": 2,
                  "id": 1,
                  "name": "Kamino",
                  "user_id": 39,
                  "validated": false
                },
                {
                  "cursus_id": 2,
                  "id": 2,
                  "name": "Endor",
                  "user_id": 71,
                  "validated": false
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "cursus_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "validated": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "validated",
                  "id",
                  "name",
                  "user_id",
                  "cursus_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Accreditations"
        ],
        "description": "",
        "operationId": "GetAccreditations",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "accreditation",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "cursus_id": 2,
                "difficulty": 100,
                "id": 3,
                "name": "DQar",
                "user_id": 90,
                "validated": true
              }
            },
            "schema": {
              "properties": {
                "cursus_id": {
                  "type": "number"
                },
                "difficulty": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                },
                "validated": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "name",
                "user_id",
                "cursus_id",
                "validated",
                "difficulty"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Accreditations"
        ],
        "description": "",
        "operationId": "PostAccreditations",
        "summary": "create"
      }
    },
    "/accreditations/:accreditation_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetAccreditationsFromAccreditationIdUsers",
        "summary": "index"
      }
    },
    "/accreditations/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Accreditations"
        ],
        "description": "",
        "operationId": "DeleteAccreditationsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "cursus_id": 2,
                "id": 2,
                "name": "Endor",
                "user_id": 71,
                "validated": false
              }
            },
            "schema": {
              "properties": {
                "cursus_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                },
                "validated": {
                  "type": "boolean"
                }
              },
              "required": [
                "cursus_id",
                "validated",
                "id",
                "name",
                "user_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Accreditations"
        ],
        "description": "",
        "operationId": "GetAccreditationsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Accreditations"
        ],
        "description": "",
        "operationId": "PatchAccreditationsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Accreditations"
        ],
        "description": "",
        "operationId": "PutAccreditationsById",
        "summary": "update"
      }
    },
    "/achievements": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "achievements": [],
                  "description": "Regarder 1 video sur l'e-learning.",
                  "id": 1,
                  "image": "/uploads/achievement/image/1/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 1,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/1/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 21 videos sur l'e-learning.",
                  "id": 3,
                  "image": "/uploads/achievement/image/3/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 21,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/3/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 42 videos sur l'e-learning.",
                  "id": 4,
                  "image": "/uploads/achievement/image/4/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 42,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/4/users",
                  "visible": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "achievements": {
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_of_success": {
                    "type": "number"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "tier": {
                    "type": "string"
                  },
                  "title": {
                    "type": "null"
                  },
                  "users_url": {
                    "type": "string"
                  },
                  "visible": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "nbr_of_success",
                  "parent",
                  "title",
                  "description",
                  "tier",
                  "kind",
                  "visible",
                  "image",
                  "users_url",
                  "achievements",
                  "id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "List all visibles achievements. Invisibles achievements need at least the <code>basic_staff</code> role.",
        "operationId": "GetAchievements",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "achievement",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "achievements": [],
                "description": "Be used as a test for the api",
                "id": 10,
                "image": "/uploads/achievement/image/10/logo.svg",
                "kind": "social",
                "name": "Be a test of the API",
                "nbr_of_success": null,
                "parent": null,
                "tier": "none",
                "title": null,
                "users_url": "https://api.intra.42.fr/v2/achievements/10/users",
                "visible": false
              }
            },
            "schema": {
              "properties": {
                "achievements": {
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "nbr_of_success": {
                  "type": "null"
                },
                "parent": {
                  "type": "null"
                },
                "tier": {
                  "type": "string"
                },
                "title": {
                  "type": "null"
                },
                "users_url": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "tier",
                "nbr_of_success",
                "achievements",
                "kind",
                "visible",
                "image",
                "users_url",
                "parent",
                "title"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "",
        "operationId": "PostAchievements",
        "summary": "create"
      }
    },
    "/achievements/:achievement_id/achievements_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:22.464Z",
                  "id": 126,
                  "login": "darthcae",
                  "url": "https://api.intra.42.fr/v2/users/darthcae",
                  "user_id": 126
                },
                {
                  "created_at": "2017-11-22T13:41:22.453Z",
                  "id": 125,
                  "login": "sebulseb",
                  "url": "https://api.intra.42.fr/v2/users/sebulseb",
                  "user_id": 125
                },
                {
                  "created_at": "2017-11-22T13:41:22.442Z",
                  "id": 124,
                  "login": "hsolo2",
                  "url": "https://api.intra.42.fr/v2/users/hsolo2",
                  "user_id": 124
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "created_at",
                  "id",
                  "user_id",
                  "login",
                  "url"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "",
        "operationId": "GetAchievementsFromAchievementIdAchievementsUsers",
        "summary": "index"
      }
    },
    "/achievements/:achievement_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "large",
                          "medium",
                          "small",
                          "micro"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "versions",
                      "link"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetAchievementsFromAchievementIdUsers",
        "summary": "index"
      }
    },
    "/achievements/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "",
        "operationId": "DeleteAchievementsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "achievements": [],
                "description": "Regarder 10 videos sur l'e-learning.",
                "id": 8,
                "image": "/uploads/achievement/image/8/logo.svg",
                "kind": "pedagogy",
                "name": "Film buff",
                "nbr_of_success": 10,
                "parent": null,
                "tier": "none",
                "title": null,
                "users_url": "https://api.intra.42.fr/v2/achievements/8/users",
                "visible": true
              }
            },
            "schema": {
              "properties": {
                "achievements": {
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "nbr_of_success": {
                  "type": "number"
                },
                "parent": {
                  "type": "null"
                },
                "tier": {
                  "type": "string"
                },
                "title": {
                  "type": "null"
                },
                "users_url": {
                  "type": "string"
                },
                "visible": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "tier",
                "visible",
                "achievements",
                "title",
                "id",
                "kind",
                "image",
                "nbr_of_success",
                "users_url",
                "parent",
                "description"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "Return the achievement specified by the <code>:id</code> parameter. Invisibles achievements need at least the <code>basic_staff</code> role.",
        "operationId": "GetAchievementsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "",
        "operationId": "PatchAchievementsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "",
        "operationId": "PutAchievementsById",
        "summary": "update"
      }
    },
    "/achievements_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:22.464Z",
                  "id": 126,
                  "login": "darthcae",
                  "url": "https://api.intra.42.fr/v2/users/darthcae",
                  "user_id": 126
                },
                {
                  "created_at": "2017-11-22T13:41:22.453Z",
                  "id": 125,
                  "login": "sebulseb",
                  "url": "https://api.intra.42.fr/v2/users/sebulseb",
                  "user_id": 125
                },
                {
                  "created_at": "2017-11-22T13:41:22.442Z",
                  "id": 124,
                  "login": "hsolo2",
                  "url": "https://api.intra.42.fr/v2/users/hsolo2",
                  "user_id": 124
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "login": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "user_id",
                  "login",
                  "url",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "",
        "operationId": "GetAchievementsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "achievements_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:26.572Z",
                "id": 127,
                "login": "askywalk",
                "url": "https://api.intra.42.fr/v2/users/askywalk",
                "user_id": 29
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "url",
                "created_at",
                "id",
                "user_id",
                "login"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "",
        "operationId": "PostAchievementsUsers",
        "summary": "create"
      }
    },
    "/achievements_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "",
        "operationId": "DeleteAchievementsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:22.217Z",
                "id": 105,
                "login": "yodyoda2",
                "url": "https://api.intra.42.fr/v2/users/yodyoda2",
                "user_id": 105
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "created_at",
                "id",
                "user_id",
                "login",
                "url"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "Return the achievement specified by the <code>:id</code> parameter",
        "operationId": "GetAchievementsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievements_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "",
        "operationId": "PatchAchievementsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievements_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Achievements users"
        ],
        "description": "",
        "operationId": "PutAchievementsUsersById",
        "summary": "update"
      }
    },
    "/amendments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amendment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Amendments"
        ],
        "description": "",
        "operationId": "GetAmendments",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "amendment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Amendments"
        ],
        "description": "",
        "operationId": "PostAmendments",
        "summary": "create"
      }
    },
    "/amendments/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amendment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Amendments"
        ],
        "description": "",
        "operationId": "DeleteAmendmentsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amendment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Amendments"
        ],
        "description": "",
        "operationId": "GetAmendmentsById",
        "summary": "show"
      }
    },
    "/announcements": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "announcement",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "author": "42partnerships",
                "created_at": "2017-11-22T13:43:27.259Z",
                "expire_at": "2017-11-22T14:13:10.000Z",
                "id": 5,
                "kind": "global",
                "link": null,
                "text": "42partnerships revient",
                "title": "Partenariats écoles 2016",
                "updated_at": "2017-11-22T13:43:27.259Z"
              }
            },
            "schema": {
              "properties": {
                "author": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expire_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "link": {
                  "type": "null"
                },
                "text": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "text",
                "link",
                "created_at",
                "id",
                "title",
                "updated_at",
                "expire_at",
                "author",
                "kind"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "",
        "operationId": "PostAnnouncements",
        "summary": "create"
      }
    },
    "/announcements/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "",
        "operationId": "DeleteAnnouncementsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "author": "Jerrell Prohaska",
                "created_at": "2017-11-22T13:41:03.321Z",
                "expire_at": "2017-11-03T07:42:11.309Z",
                "id": 4,
                "kind": "global",
                "link": null,
                "text": "Pickled aut et repellendus ugh sed a natus. Beatae cliche knausgaard.",
                "title": "Minnesota frogs",
                "updated_at": "2017-11-22T13:41:03.321Z"
              }
            },
            "schema": {
              "properties": {
                "author": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expire_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "link": {
                  "type": "null"
                },
                "text": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "author",
                "link",
                "created_at",
                "expire_at",
                "id",
                "text",
                "kind",
                "updated_at",
                "title"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "Return the announcement specified by the <code>:id</code> parameter",
        "operationId": "GetAnnouncementsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "announcement",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "",
        "operationId": "PatchAnnouncementsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "announcement",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "",
        "operationId": "PutAnnouncementsById",
        "summary": "update"
      }
    },
    "/announcements/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 4
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetAnnouncementsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/anti_grav_units": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Anti grav units"
        ],
        "description": "",
        "operationId": "GetAntiGravUnits",
        "summary": "index"
      }
    },
    "/anti_grav_units/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Anti grav units"
        ],
        "description": "",
        "operationId": "GetAntiGravUnitsById",
        "summary": "show"
      }
    },
    "/anti_grav_units_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "anti_grav_units_user": {
                    "anti_grav_unit_id": 1,
                    "begin_date": "2019-12-09",
                    "close_id": 65822,
                    "created_at": "2019-12-09T14:17:15.986Z",
                    "expected_end_date": "2020-02-10",
                    "id": 64,
                    "is_free": true,
                    "reason": "I secured a job/internship",
                    "updated_at": "2019-12-09T14:17:15.986Z",
                    "user_id": 18763
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "anti_grav_units_user": {
                    "properties": {
                      "anti_grav_unit_id": {
                        "type": "number"
                      },
                      "begin_date": {
                        "type": "string"
                      },
                      "close_id": {
                        "type": "number"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "expected_end_date": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_free": {
                        "type": "boolean"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "begin_date",
                      "user_id",
                      "is_free",
                      "reason",
                      "id",
                      "created_at",
                      "updated_at",
                      "anti_grav_unit_id",
                      "close_id",
                      "expected_end_date"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "anti_grav_units_user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "",
        "operationId": "GetAntiGravUnitsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "anti_grav_units_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "anti_grav_units_user": {
                  "anti_grav_unit_id": 1,
                  "begin_date": "2019-12-09",
                  "close_id": 65822,
                  "created_at": "2019-12-09T14:17:15.986Z",
                  "expected_end_date": "2020-02-10",
                  "id": 64,
                  "is_free": true,
                  "reason": "other",
                  "updated_at": "2019-12-09T14:17:15.986Z",
                  "user_id": 18763
                }
              }
            },
            "schema": {
              "properties": {
                "anti_grav_units_user": {
                  "properties": {
                    "anti_grav_unit_id": {
                      "type": "number"
                    },
                    "begin_date": {
                      "type": "string"
                    },
                    "close_id": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "expected_end_date": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "is_free": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "expected_end_date",
                    "created_at",
                    "begin_date",
                    "user_id",
                    "anti_grav_unit_id",
                    "reason",
                    "is_free",
                    "close_id",
                    "updated_at",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "anti_grav_units_user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "Create an AntiGravUnitsUser, if is_free is true then the AGU user will not loose an agu or freeze time.This is the api for creating agu that ends in the future. If you are looking for creating agu in the past to delay the blackhole, please go to the following link. <a href=\"/apidoc/2.0/users/free_past_agu.html\">POST /v2/users/:user_id/free_past_agu</a>",
        "operationId": "PostAntiGravUnitsUsers",
        "summary": "create"
      }
    },
    "/anti_grav_units_users/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "anti_grav_units_user": {
                  "anti_grav_unit_id": 1,
                  "begin_date": "2019-12-09",
                  "close_id": 65822,
                  "created_at": "2019-12-09T14:17:15.986Z",
                  "expected_end_date": "2020-02-10",
                  "id": 64,
                  "is_free": true,
                  "reason": "I secured a job/internship",
                  "updated_at": "2019-12-09T14:17:15.986Z",
                  "user_id": 18763
                }
              }
            },
            "schema": {
              "properties": {
                "anti_grav_units_user": {
                  "properties": {
                    "anti_grav_unit_id": {
                      "type": "number"
                    },
                    "begin_date": {
                      "type": "string"
                    },
                    "close_id": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "expected_end_date": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "is_free": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "expected_end_date",
                    "begin_date",
                    "user_id",
                    "close_id",
                    "id",
                    "is_free",
                    "created_at",
                    "updated_at",
                    "anti_grav_unit_id",
                    "reason"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "anti_grav_units_user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "",
        "operationId": "GetAntiGravUnitsUsersById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "anti_grav_units_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "examples": {
              "application/json": {
                "anti_grav_units_user": {
                  "anti_grav_unit_id": 1,
                  "begin_date": "2019-12-09",
                  "close_id": 65822,
                  "created_at": "2019-12-09T14:17:15.986Z",
                  "expected_end_date": "2020-03-10",
                  "id": 64,
                  "is_free": false,
                  "reason": "other",
                  "updated_at": "2019-12-09T14:17:15.986Z",
                  "user_id": 18763
                }
              }
            },
            "schema": {
              "properties": {
                "anti_grav_units_user": {
                  "properties": {
                    "anti_grav_unit_id": {
                      "type": "number"
                    },
                    "begin_date": {
                      "type": "string"
                    },
                    "close_id": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "expected_end_date": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "is_free": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "user_id",
                    "anti_grav_unit_id",
                    "begin_date",
                    "reason",
                    "updated_at",
                    "id",
                    "expected_end_date",
                    "is_free",
                    "close_id",
                    "created_at"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "anti_grav_units_user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "",
        "operationId": "PatchAntiGravUnitsUsersById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "anti_grav_units_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "examples": {
              "application/json": {
                "anti_grav_units_user": {
                  "anti_grav_unit_id": 1,
                  "begin_date": "2019-12-09",
                  "close_id": 65822,
                  "created_at": "2019-12-09T14:17:15.986Z",
                  "expected_end_date": "2020-03-10",
                  "id": 64,
                  "is_free": false,
                  "reason": "other",
                  "updated_at": "2019-12-09T14:17:15.986Z",
                  "user_id": 18763
                }
              }
            },
            "schema": {
              "properties": {
                "anti_grav_units_user": {
                  "properties": {
                    "anti_grav_unit_id": {
                      "type": "number"
                    },
                    "begin_date": {
                      "type": "string"
                    },
                    "close_id": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "expected_end_date": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "is_free": {
                      "type": "boolean"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "is_free",
                    "close_id",
                    "created_at",
                    "id",
                    "expected_end_date",
                    "begin_date",
                    "reason",
                    "updated_at",
                    "user_id",
                    "anti_grav_unit_id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "anti_grav_units_user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "",
        "operationId": "PutAntiGravUnitsUsersById",
        "summary": "update"
      }
    },
    "/apps": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:43:11.377Z",
                  "description": null,
                  "id": 7,
                  "image": null,
                  "name": "test intrateam staff oauth application",
                  "owner": {
                    "id": 74,
                    "login": "pamidala",
                    "url": "https://api.intra.42.fr/v2/users/pamidala"
                  },
                  "public": true,
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "description": "Approved application without rate limits",
                      "id": 16,
                      "name": "Official App"
                    },
                    {
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                      "id": 7,
                      "name": "Basic Staff"
                    },
                    {
                      "description": "Member of the staff, with higher privileges",
                      "id": 11,
                      "name": "Advanced Staff"
                    },
                    {
                      "description": "manage all",
                      "id": 1,
                      "name": "Intrateam"
                    }
                  ],
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.434Z",
                  "website": null
                },
                {
                  "created_at": "2017-11-22T13:43:11.315Z",
                  "description": null,
                  "id": 6,
                  "image": null,
                  "name": "test pedago oauth application",
                  "owner": {},
                  "public": true,
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "description": "Approved application without rate limits",
                      "id": 16,
                      "name": "Official App"
                    },
                    {
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                      "id": 7,
                      "name": "Basic Staff"
                    },
                    {
                      "description": "Member of the staff, with higher privileges",
                      "id": 11,
                      "name": "Advanced Staff"
                    },
                    {
                      "description": "Manage skills, cursus and all low level pedagogic data",
                      "id": 5,
                      "name": "Advanced Tutor"
                    }
                  ],
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.369Z",
                  "website": null
                },
                {
                  "created_at": "2017-11-22T13:43:11.261Z",
                  "description": null,
                  "id": 5,
                  "image": null,
                  "name": "test advanced staff oauth application",
                  "owner": {},
                  "public": true,
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "description": "Approved application without rate limits",
                      "id": 16,
                      "name": "Official App"
                    },
                    {
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                      "id": 7,
                      "name": "Basic Staff"
                    },
                    {
                      "description": "Member of the staff, with higher privileges",
                      "id": 11,
                      "name": "Advanced Staff"
                    }
                  ],
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.307Z",
                  "website": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "type": "null"
                  },
                  "name": {
                    "type": "string"
                  },
                  "owner": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "rate_limit": {
                    "type": "number"
                  },
                  "roles": {
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "scopes": {
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "website": {
                    "type": "null"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "image",
                  "public",
                  "scopes",
                  "created_at",
                  "rate_limit",
                  "roles",
                  "id",
                  "website",
                  "updated_at",
                  "owner"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Apps"
        ],
        "description": "Return all the <strong>public</strong> created applications working with the APIv2.If there is a resource owner, also returns the resource owner applications, <strong>public or not</strong>.",
        "operationId": "GetApps",
        "summary": "index"
      }
    },
    "/apps/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:11.377Z",
                "description": null,
                "id": 7,
                "image": null,
                "name": "test intrateam staff oauth application",
                "owner": {
                  "id": 74,
                  "login": "pamidala",
                  "url": "https://api.intra.42.fr/v2/users/pamidala"
                },
                "public": true,
                "rate_limit": 1800,
                "roles": [
                  {
                    "description": "Approved application without rate limits",
                    "id": 16,
                    "name": "Official App"
                  },
                  {
                    "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                    "id": 7,
                    "name": "Basic Staff"
                  },
                  {
                    "description": "Member of the staff, with higher privileges",
                    "id": 11,
                    "name": "Advanced Staff"
                  },
                  {
                    "description": "manage all",
                    "id": 1,
                    "name": "Intrateam"
                  }
                ],
                "scopes": [],
                "updated_at": "2017-11-22T13:43:11.434Z",
                "website": null
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "type": "null"
                },
                "name": {
                  "type": "string"
                },
                "owner": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "public": {
                  "type": "boolean"
                },
                "rate_limit": {
                  "type": "number"
                },
                "roles": {
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "scopes": {
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                },
                "website": {
                  "type": "null"
                }
              },
              "required": [
                "website",
                "public",
                "scopes",
                "created_at",
                "rate_limit",
                "roles",
                "id",
                "name",
                "description",
                "image",
                "updated_at",
                "owner"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Apps"
        ],
        "description": "",
        "operationId": "GetAppsById",
        "summary": "show"
      }
    },
    "/attachments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "GetAttachments",
        "summary": "index"
      }
    },
    "/attachments/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "DeleteAttachmentsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "base_id": 1,
                "created_at": "2017-11-22T13:41:25.981Z",
                "id": 1,
                "language": {
                  "id": 3,
                  "identifier": "ro",
                  "name": "Romanian"
                },
                "name": "New Jersey zombies",
                "page_count": 1,
                "pdf": {
                  "pdf": {
                    "thumb": {
                      "url": null
                    },
                    "url": null
                  }
                },
                "pdf_processing": true,
                "slug": "new-jersey-zombies",
                "thumb_url": null,
                "type": "Pdf",
                "url": null
              }
            },
            "schema": {
              "properties": {
                "base_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "identifier",
                    "id"
                  ],
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "page_count": {
                  "type": "number"
                },
                "pdf": {
                  "properties": {
                    "pdf": {
                      "properties": {
                        "thumb": {
                          "properties": {
                            "url": {
                              "type": "null"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "type": "object"
                        },
                        "url": {
                          "type": "null"
                        }
                      },
                      "required": [
                        "url",
                        "thumb"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "pdf"
                  ],
                  "type": "object"
                },
                "pdf_processing": {
                  "type": "boolean"
                },
                "slug": {
                  "type": "string"
                },
                "thumb_url": {
                  "type": "null"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "null"
                }
              },
              "required": [
                "page_count",
                "created_at",
                "pdf_processing",
                "url",
                "base_id",
                "id",
                "name",
                "pdf",
                "slug",
                "thumb_url",
                "language",
                "type"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "GetAttachmentsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "attachment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "PatchAttachmentsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "attachment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "PutAttachmentsById",
        "summary": "update"
      }
    },
    "/balances": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "GetBalances",
        "summary": "index"
      }
    },
    "/balances/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2018-06-16 10:49:28",
                "end_at": "2018-06-16 14:03:41",
                "id": 191,
                "pool_id": 21
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "pool_id": {
                  "type": "number"
                }
              },
              "required": [
                "pool_id",
                "id",
                "begin_at",
                "end_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "GetBalancesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "PatchBalancesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "PutBalancesById",
        "summary": "update"
      }
    },
    "/bloc_deadlines": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Bloc deadlines"
        ],
        "description": "",
        "operationId": "GetBlocDeadlines",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_deadline",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2022-11-29T00:00:00.000Z",
                "bloc_id": 1,
                "coalition_id": 2,
                "created_at": "2017-11-22T13:43:28.263Z",
                "end_at": "2023-11-29T00:00:00.000Z",
                "id": 6,
                "updated_at": "2017-11-22T13:43:28.263Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "bloc_id": {
                  "type": "number"
                },
                "coalition_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "bloc_id",
                "coalition_id",
                "begin_at",
                "end_at",
                "created_at",
                "updated_at",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Bloc deadlines"
        ],
        "description": "",
        "operationId": "PostBlocDeadlines",
        "summary": "create"
      }
    },
    "/bloc_deadlines/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-11-22T13:41:20.752Z",
                "bloc_id": 1,
                "coalition_id": 1,
                "created_at": "2017-11-22T13:41:20.764Z",
                "end_at": "2018-11-22T13:41:20.752Z",
                "id": 1,
                "updated_at": "2017-11-22T13:41:20.764Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "bloc_id": {
                  "type": "number"
                },
                "coalition_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "bloc_id",
                "coalition_id",
                "begin_at",
                "end_at",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Bloc deadlines"
        ],
        "description": "",
        "operationId": "GetBlocDeadlinesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_deadline",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Bloc deadlines"
        ],
        "description": "",
        "operationId": "PatchBlocDeadlinesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_deadline",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Bloc deadlines"
        ],
        "description": "",
        "operationId": "PutBlocDeadlinesById",
        "summary": "update"
      }
    },
    "/blocs": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus_id": 5,
                  "coalitions": [
                    {
                      "color": "#1c7f08",
                      "id": 1,
                      "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                      "name": "Indiana goblins",
                      "score": 54,
                      "slug": "super-slug",
                      "user_id": 38
                    },
                    {
                      "color": "#087262",
                      "id": 2,
                      "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                      "name": "Kansas giants",
                      "score": 83,
                      "slug": "super-slug",
                      "user_id": 90
                    }
                  ],
                  "created_at": "2017-11-22T13:41:20.665Z",
                  "cursus_id": 1,
                  "id": 1,
                  "squad_size": 80,
                  "updated_at": "2017-11-22T13:41:20.665Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus_id": {
                    "type": "number"
                  },
                  "coalitions": {
                    "items": {
                      "properties": {
                        "color": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "image_url": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "score": {
                          "type": "number"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "user_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "user_id",
                        "id",
                        "name",
                        "slug",
                        "image_url",
                        "color",
                        "score"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "squad_size": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "updated_at",
                  "coalitions",
                  "id",
                  "campus_id",
                  "cursus_id",
                  "squad_size",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Blocs"
        ],
        "description": "",
        "operationId": "GetBlocs",
        "summary": "index"
      }
    },
    "/blocs/:bloc_id/bloc_deadlines": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Bloc deadlines"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdBlocDeadlines",
        "summary": "index"
      }
    },
    "/blocs/:bloc_id/coalitions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "color": "#087262",
                  "id": 2,
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                  "name": "Kansas giants",
                  "score": 83,
                  "slug": "super-slug",
                  "user_id": 90
                },
                {
                  "color": "#1c7f08",
                  "id": 1,
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                  "name": "Indiana goblins",
                  "score": 54,
                  "slug": "super-slug",
                  "user_id": 38
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "score": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "slug",
                  "image_url",
                  "color",
                  "score",
                  "user_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdCoalitions",
        "summary": "index"
      }
    },
    "/blocs/:bloc_id/scores": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdScores",
        "summary": "index"
      }
    },
    "/blocs/:bloc_id/scores/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "calculation_id": 3,
                "coalition_id": 1,
                "coalitions_user_id": 3,
                "created_at": "2017-11-22T13:42:09.850Z",
                "id": 2,
                "reason": "Who's the more foolish; the fool, or the fool who follows him?",
                "scoreable_id": 5,
                "scoreable_type": "Location",
                "updated_at": "2017-11-22T13:42:09.850Z",
                "value": 54
              }
            },
            "schema": {
              "properties": {
                "calculation_id": {
                  "type": "number"
                },
                "coalition_id": {
                  "type": "number"
                },
                "coalitions_user_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "scoreable_id": {
                  "type": "number"
                },
                "scoreable_type": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "coalition_id",
                "coalitions_user_id",
                "updated_at",
                "reason",
                "created_at",
                "scoreable_id",
                "scoreable_type",
                "calculation_id",
                "value"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdScoresById",
        "summary": "show"
      }
    },
    "/blocs/:bloc_id/squads": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdSquads",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "squad",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "bloc": {
                  "campus_id": 22,
                  "created_at": "2019-10-24T23:57:59.098Z",
                  "cursus_id": 21,
                  "id": 21,
                  "squad_size": 4,
                  "updated_at": "2019-11-06T11:15:35.845Z"
                },
                "bloc_id": 21,
                "created_at": "2019-11-08T13:53:26.404Z",
                "id": 4934,
                "locked_at": null,
                "squads_users": [
                  {
                    "created_at": "2019-11-08T13:53:26.408Z",
                    "id": 10717,
                    "leader": true,
                    "squad_id": 4934,
                    "updated_at": "2019-11-08T13:53:26.408Z",
                    "user": {
                      "id": 18763,
                      "login": "gmonein"
                    },
                    "validated": false
                  }
                ],
                "updated_at": "2019-11-08T13:53:26.404Z"
              }
            },
            "schema": {
              "properties": {
                "bloc": {
                  "properties": {
                    "campus_id": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "cursus_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "squad_size": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "campus_id",
                    "cursus_id",
                    "squad_size"
                  ],
                  "type": "object"
                },
                "bloc_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "locked_at": {
                  "type": "null"
                },
                "squads_users": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "leader": {
                        "type": "boolean"
                      },
                      "squad_id": {
                        "type": "number"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "login": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "login"
                        ],
                        "type": "object"
                      },
                      "validated": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "user",
                      "id",
                      "squad_id",
                      "leader",
                      "validated",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "updated_at",
                "bloc",
                "id",
                "bloc_id",
                "locked_at",
                "squads_users",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "PostBlocsFromBlocIdSquads",
        "summary": "create"
      }
    },
    "/blocs/:bloc_id/squads/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "DeleteBlocsFromBlocIdSquadsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdSquadsById",
        "summary": "show"
      }
    },
    "/blocs/:bloc_id/squads_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads users"
        ],
        "description": "",
        "operationId": "GetBlocsFromBlocIdSquadsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads users"
        ],
        "description": "",
        "operationId": "PostBlocsFromBlocIdSquadsUsers",
        "summary": "create"
      }
    },
    "/blocs/:bloc_id/squads_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads users"
        ],
        "description": "",
        "operationId": "DeleteBlocsFromBlocIdSquadsUsersById",
        "summary": "destroy"
      }
    },
    "/blocs/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "campus_id": 5,
                "coalitions": [
                  {
                    "color": "#1c7f08",
                    "id": 1,
                    "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                    "name": "Indiana goblins",
                    "score": 54,
                    "slug": "super-slug",
                    "user_id": 38
                  },
                  {
                    "color": "#087262",
                    "id": 2,
                    "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                    "name": "Kansas giants",
                    "score": 83,
                    "slug": "super-slug",
                    "user_id": 90
                  }
                ],
                "created_at": "2017-11-22T13:41:20.665Z",
                "cursus_id": 1,
                "id": 1,
                "squad_size": 80,
                "updated_at": "2017-11-22T13:41:20.665Z"
              }
            },
            "schema": {
              "properties": {
                "campus_id": {
                  "type": "number"
                },
                "coalitions": {
                  "items": {
                    "properties": {
                      "color": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "image_url": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "score": {
                        "type": "number"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "slug",
                      "image_url",
                      "color",
                      "score",
                      "user_id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "squad_size": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "updated_at",
                "coalitions",
                "id",
                "campus_id",
                "cursus_id",
                "squad_size",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Blocs"
        ],
        "description": "",
        "operationId": "GetBlocsById",
        "summary": "show"
      }
    },
    "/campus": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active": true,
                  "address": "96, boulevard Bessières",
                  "city": "Paris",
                  "country": "France",
                  "default_hidden_phone": false,
                  "email_extension": "42.fr",
                  "endpoint": {
                    "created_at": "2021-06-14T07:49:14.872Z",
                    "description": "42paris's new ldapkdc endpoint",
                    "id": 33,
                    "updated_at": "2021-06-28T15:24:45.089Z",
                    "url": "https://endpoint.42paris.fr"
                  },
                  "facebook": "https://facebook.com/42born2code",
                  "id": 1,
                  "language": {
                    "id": 1,
                    "identifier": "fr",
                    "name": "Français"
                  },
                  "name": "Paris",
                  "public": true,
                  "time_zone": "Europe/Paris",
                  "twitter": "https://twitter.com/42born2code",
                  "users_count": 22997,
                  "vogsphere_id": 1,
                  "website": "http://www.42.fr/",
                  "zip": "75017"
                },
                {
                  "active": true,
                  "address": "Campus Région – 78 route de Paris",
                  "city": "Charbonnières-les-Bains",
                  "country": "France",
                  "default_hidden_phone": false,
                  "email_extension": "42lyon.fr",
                  "endpoint": {
                    "created_at": "2020-07-28T15:21:29.199Z",
                    "description": "42 Lyon endpoint tmp",
                    "id": 19,
                    "updated_at": "2020-07-28T15:21:29.199Z",
                    "url": "https://bigbro.42lyon.fr"
                  },
                  "facebook": "https://www.facebook.com/42lyon",
                  "id": 9,
                  "language": {
                    "id": 1,
                    "identifier": "fr",
                    "name": "Français"
                  },
                  "name": "Lyon",
                  "public": true,
                  "time_zone": "Europe/Paris",
                  "twitter": "https://twitter.com/42lyon",
                  "users_count": 2077,
                  "vogsphere_id": 4,
                  "website": "https://www.42lyon.fr/",
                  "zip": "69260"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "address": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "default_hidden_phone": {
                    "type": "boolean"
                  },
                  "email_extension": {
                    "type": "string"
                  },
                  "endpoint": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "url",
                      "description",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "facebook": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "language": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "identifier"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "time_zone": {
                    "type": "string"
                  },
                  "twitter": {
                    "type": "string"
                  },
                  "users_count": {
                    "type": "number"
                  },
                  "vogsphere_id": {
                    "type": "number"
                  },
                  "website": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  }
                },
                "required": [
                  "country",
                  "name",
                  "users_count",
                  "email_extension",
                  "id",
                  "language",
                  "address",
                  "zip",
                  "city",
                  "facebook",
                  "twitter",
                  "endpoint",
                  "time_zone",
                  "vogsphere_id",
                  "website",
                  "active",
                  "public",
                  "default_hidden_phone"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Campus"
        ],
        "description": "",
        "operationId": "GetCampus",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "endpoint": null,
                "id": 7,
                "language": {
                  "id": 1,
                  "identifier": "fr",
                  "name": "Français"
                },
                "name": "Argentina1",
                "time_zone": "Pacific/Pago_Pago",
                "users_count": 0,
                "vogsphere_id": null
              }
            },
            "schema": {
              "properties": {
                "endpoint": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "identifier"
                  ],
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "time_zone": {
                  "type": "string"
                },
                "users_count": {
                  "type": "number"
                },
                "vogsphere_id": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "name",
                "time_zone",
                "language",
                "users_count",
                "vogsphere_id",
                "endpoint"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Campus"
        ],
        "description": "",
        "operationId": "PostCampus",
        "summary": "create"
      }
    },
    "/campus/:campus_id/achievements": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "achievements": [],
                  "description": "Regarder 1 video sur l'e-learning.",
                  "id": 1,
                  "image": "/uploads/achievement/image/1/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 1,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/1/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 21 videos sur l'e-learning.",
                  "id": 3,
                  "image": "/uploads/achievement/image/3/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 21,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/3/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 42 videos sur l'e-learning.",
                  "id": 4,
                  "image": "/uploads/achievement/image/4/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 42,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/4/users",
                  "visible": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "achievements": {
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_of_success": {
                    "type": "number"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "tier": {
                    "type": "string"
                  },
                  "title": {
                    "type": "null"
                  },
                  "users_url": {
                    "type": "string"
                  },
                  "visible": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "kind",
                  "visible",
                  "image",
                  "users_url",
                  "achievements",
                  "description",
                  "tier",
                  "nbr_of_success",
                  "parent",
                  "title"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "List all visibles achievements. Invisibles achievements need at least the <code>basic_staff</code> role.",
        "operationId": "GetCampusFromCampusIdAchievements",
        "summary": "index"
      }
    },
    "/campus/:campus_id/anti_grav_units_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "anti_grav_units_user": {
                    "anti_grav_unit_id": 1,
                    "begin_date": "2019-12-09",
                    "close_id": 65822,
                    "created_at": "2019-12-09T14:17:15.986Z",
                    "expected_end_date": "2020-02-10",
                    "id": 64,
                    "is_free": true,
                    "reason": "I secured a job/internship",
                    "updated_at": "2019-12-09T14:17:15.986Z",
                    "user_id": 18763
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "anti_grav_units_user": {
                    "properties": {
                      "anti_grav_unit_id": {
                        "type": "number"
                      },
                      "begin_date": {
                        "type": "string"
                      },
                      "close_id": {
                        "type": "number"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "expected_end_date": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_free": {
                        "type": "boolean"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "begin_date",
                      "user_id",
                      "is_free",
                      "reason",
                      "expected_end_date",
                      "created_at",
                      "updated_at",
                      "anti_grav_unit_id",
                      "close_id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "anti_grav_units_user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdAntiGravUnitsUsers",
        "summary": "index"
      }
    },
    "/campus/:campus_id/broadcasts": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Broadcasts"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdBroadcasts",
        "summary": "index"
      }
    },
    "/campus/:campus_id/cursus/:cursus_id/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-25T13:42:10.090Z",
                  "campus_ids": [
                    3
                  ],
                  "created_at": "2017-11-22T13:42:10.110Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et selfies beard williamsburg quisquam ramps. Molestiae craft beer consectetur asperiores dolor. Small batch placeat banjo vhs mollitia aut vero. Distinctio est readymade offal tote bag +1.",
                  "end_at": "2017-11-25T15:42:10.090Z",
                  "id": 4,
                  "kind": "rush",
                  "location": "West Wisozk",
                  "max_people": 112,
                  "name": "Oklahoma whales",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 15,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 36,
                      "name": "AI",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 37,
                      "name": "Entrepreneurship",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.127Z",
                  "waitlist": null
                },
                {
                  "begin_at": "2017-11-24T13:42:10.014Z",
                  "campus_ids": [
                    6
                  ],
                  "created_at": "2017-11-22T13:42:10.037Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                  "end_at": "2017-11-24T15:42:10.015Z",
                  "id": 3,
                  "kind": "other",
                  "location": "Southern Bauch",
                  "max_people": 39,
                  "name": "Wyoming cattle",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 2,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 10,
                      "name": "Meeting",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 15,
                      "name": "Association",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.082Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 392,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 3,
                    "waitlistable_type": "Event"
                  }
                },
                {
                  "begin_at": "2017-11-23T13:42:09.970Z",
                  "campus_ids": [
                    4
                  ],
                  "created_at": "2017-11-22T13:42:09.991Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et tousled small batch street voluptas +1. Nisi small batch shoreditch est bicycle rights similique sed. Pbr&b sit exercitationem etsy ea. Cumque et forage reprehenderit officia quas. Chartreuse ad tacos commodi.",
                  "end_at": "2017-11-23T15:42:09.970Z",
                  "id": 2,
                  "kind": "association",
                  "location": "South Wisconsin Academy",
                  "max_people": 94,
                  "name": "Nevada sheep",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 10,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 12,
                      "name": "Security",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 42,
                      "name": "Recrutement",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.009Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 33,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 2,
                    "waitlistable_type": "Event"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "prohibition_of_cancellation": {
                    "type": "number"
                  },
                  "themes": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created_at",
                        "id",
                        "name",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "waitlist": {
                    "type": "null"
                  }
                },
                "required": [
                  "cursus_ids",
                  "waitlist",
                  "themes",
                  "nbr_subscribers",
                  "end_at",
                  "campus_ids",
                  "prohibition_of_cancellation",
                  "name",
                  "location",
                  "kind",
                  "max_people",
                  "created_at",
                  "id",
                  "description",
                  "begin_at",
                  "updated_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdCursusFromCursusIdEvents",
        "summary": "index"
      }
    },
    "/campus/:campus_id/cursus/:cursus_id/exams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "campus": {
                    "active": true,
                    "address": "96, boulevard Bessières",
                    "city": "Paris",
                    "country": "France",
                    "default_hidden_phone": false,
                    "email_extension": "42.fr",
                    "facebook": "https://facebook.com/42born2code",
                    "id": 1,
                    "language": {
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "twitter": "https://twitter.com/42born2code",
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "website": "http://www.42.fr/",
                    "zip": "75017"
                  },
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "cursus": [
                    {
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "id": 4,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "id": 6,
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "id": 13,
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "location": "e1, e2, e3",
                  "max_people": 780,
                  "name": "Piscine C - Exam 01",
                  "nbr_subscribers": 594,
                  "projects": [
                    {
                      "attachments": [],
                      "children": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "exam": true,
                      "git_id": null,
                      "id": 405,
                      "name": "Exam01",
                      "parent": null,
                      "repository": null,
                      "slug": "piscine-c-exam01",
                      "updated_at": "2021-09-01T08:35:01.074Z"
                    }
                  ],
                  "updated_at": "2018-08-27T16:56:15.032Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "default_hidden_phone": {
                        "type": "boolean"
                      },
                      "email_extension": {
                        "type": "string"
                      },
                      "facebook": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      },
                      "website": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "vogsphere_id",
                      "website",
                      "facebook",
                      "default_hidden_phone",
                      "language",
                      "country",
                      "city",
                      "twitter",
                      "name",
                      "address",
                      "zip",
                      "time_zone",
                      "users_count",
                      "active",
                      "email_extension"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ip_range": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "projects": {
                    "items": {
                      "properties": {
                        "attachments": {
                          "type": "array"
                        },
                        "children": {
                          "type": "array"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "exam": {
                          "type": "boolean"
                        },
                        "git_id": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "null"
                        },
                        "repository": {
                          "type": "null"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "children",
                        "attachments",
                        "id",
                        "name",
                        "slug",
                        "parent",
                        "created_at",
                        "updated_at",
                        "exam",
                        "git_id",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "projects",
                  "ip_range",
                  "end_at",
                  "max_people",
                  "name",
                  "created_at",
                  "updated_at",
                  "cursus",
                  "id",
                  "begin_at",
                  "location",
                  "nbr_subscribers",
                  "campus"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "List all visibles exams. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetCampusFromCampusIdCursusFromCursusIdExams",
        "summary": "index"
      }
    },
    "/campus/:campus_id/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-25T13:42:10.090Z",
                  "campus_ids": [
                    3
                  ],
                  "created_at": "2017-11-22T13:42:10.110Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et selfies beard williamsburg quisquam ramps. Molestiae craft beer consectetur asperiores dolor. Small batch placeat banjo vhs mollitia aut vero. Distinctio est readymade offal tote bag +1.",
                  "end_at": "2017-11-25T15:42:10.090Z",
                  "id": 4,
                  "kind": "rush",
                  "location": "West Wisozk",
                  "max_people": 112,
                  "name": "Oklahoma whales",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 15,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 36,
                      "name": "AI",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 37,
                      "name": "Entrepreneurship",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.127Z",
                  "waitlist": null
                },
                {
                  "begin_at": "2017-11-24T13:42:10.014Z",
                  "campus_ids": [
                    6
                  ],
                  "created_at": "2017-11-22T13:42:10.037Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                  "end_at": "2017-11-24T15:42:10.015Z",
                  "id": 3,
                  "kind": "other",
                  "location": "Southern Bauch",
                  "max_people": 39,
                  "name": "Wyoming cattle",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 2,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 10,
                      "name": "Meeting",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 15,
                      "name": "Association",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.082Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 392,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 3,
                    "waitlistable_type": "Event"
                  }
                },
                {
                  "begin_at": "2017-11-23T13:42:09.970Z",
                  "campus_ids": [
                    4
                  ],
                  "created_at": "2017-11-22T13:42:09.991Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et tousled small batch street voluptas +1. Nisi small batch shoreditch est bicycle rights similique sed. Pbr&b sit exercitationem etsy ea. Cumque et forage reprehenderit officia quas. Chartreuse ad tacos commodi.",
                  "end_at": "2017-11-23T15:42:09.970Z",
                  "id": 2,
                  "kind": "association",
                  "location": "South Wisconsin Academy",
                  "max_people": 94,
                  "name": "Nevada sheep",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 10,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 12,
                      "name": "Security",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 42,
                      "name": "Recrutement",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.009Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 33,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 2,
                    "waitlistable_type": "Event"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "prohibition_of_cancellation": {
                    "type": "number"
                  },
                  "themes": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created_at",
                        "id",
                        "name",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "waitlist": {
                    "type": "null"
                  }
                },
                "required": [
                  "max_people",
                  "nbr_subscribers",
                  "end_at",
                  "campus_ids",
                  "prohibition_of_cancellation",
                  "name",
                  "location",
                  "kind",
                  "created_at",
                  "updated_at",
                  "id",
                  "description",
                  "begin_at",
                  "cursus_ids",
                  "waitlist",
                  "themes"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdEvents",
        "summary": "index"
      }
    },
    "/campus/:campus_id/exams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "campus": {
                    "active": true,
                    "address": "96, boulevard Bessières",
                    "city": "Paris",
                    "country": "France",
                    "default_hidden_phone": false,
                    "email_extension": "42.fr",
                    "facebook": "https://facebook.com/42born2code",
                    "id": 1,
                    "language": {
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "twitter": "https://twitter.com/42born2code",
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "website": "http://www.42.fr/",
                    "zip": "75017"
                  },
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "cursus": [
                    {
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "id": 4,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "id": 6,
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "id": 13,
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "location": "e1, e2, e3",
                  "max_people": 780,
                  "name": "Piscine C - Exam 01",
                  "nbr_subscribers": 594,
                  "projects": [
                    {
                      "attachments": [],
                      "children": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "exam": true,
                      "git_id": null,
                      "id": 405,
                      "name": "Exam01",
                      "parent": null,
                      "repository": null,
                      "slug": "piscine-c-exam01",
                      "updated_at": "2021-09-01T08:35:01.074Z"
                    }
                  ],
                  "updated_at": "2018-08-27T16:56:15.032Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "default_hidden_phone": {
                        "type": "boolean"
                      },
                      "email_extension": {
                        "type": "string"
                      },
                      "facebook": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      },
                      "website": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "vogsphere_id",
                      "website",
                      "facebook",
                      "default_hidden_phone",
                      "id",
                      "country",
                      "city",
                      "twitter",
                      "language",
                      "address",
                      "zip",
                      "name",
                      "users_count",
                      "active",
                      "email_extension",
                      "time_zone"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "slug",
                        "id",
                        "created_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ip_range": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "projects": {
                    "items": {
                      "properties": {
                        "attachments": {
                          "type": "array"
                        },
                        "children": {
                          "type": "array"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "exam": {
                          "type": "boolean"
                        },
                        "git_id": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "null"
                        },
                        "repository": {
                          "type": "null"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "children",
                        "attachments",
                        "parent",
                        "created_at",
                        "updated_at",
                        "exam",
                        "git_id",
                        "id",
                        "name",
                        "slug",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "begin_at",
                  "location",
                  "nbr_subscribers",
                  "campus",
                  "id",
                  "end_at",
                  "max_people",
                  "name",
                  "created_at",
                  "updated_at",
                  "cursus",
                  "projects",
                  "ip_range"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "List all visibles exams. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetCampusFromCampusIdExams",
        "summary": "index"
      }
    },
    "/campus/:campus_id/experiences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdExperiences",
        "summary": "index"
      }
    },
    "/campus/:campus_id/journals": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "begin_at",
            "type": "string"
          },
          {
            "in": "query",
            "name": "end_at",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus_id": 1,
                  "created_at": "2021-10-16T01:01:34.979Z",
                  "cursus_id": 9,
                  "event_at": "2021-10-15T01:01:31.450Z",
                  "id": 5276532,
                  "item_id": 11547,
                  "item_type": "Internship",
                  "reason": "Currently doing internship",
                  "updated_at": "2021-10-16T01:01:34.979Z",
                  "user_id": 69936
                },
                {
                  "campus_id": 1,
                  "created_at": "2021-10-16T05:15:15.874Z",
                  "cursus_id": 9,
                  "event_at": "2021-10-15T05:14:13.644Z",
                  "id": 5178542,
                  "item_id": 11547,
                  "item_type": "User",
                  "reason": "Used intranet",
                  "updated_at": "2021-10-16T05:15:15.874Z",
                  "user_id": 69937
                },
                {
                  "campus_id": 1,
                  "created_at": "2021-10-17T05:15:25.874Z",
                  "cursus_id": 9,
                  "event_at": "2021-10-16T05:02:45.644Z",
                  "id": 42424242,
                  "item_id": 11547,
                  "item_type": "ScaleTeam",
                  "reason": "Was evaluated by someone",
                  "updated_at": "2021-10-17T05:15:25.874Z",
                  "user_id": 69936
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus_id": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "event_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "item_id": {
                    "type": "number"
                  },
                  "item_type": {
                    "type": "string"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "user_id",
                  "item_type",
                  "updated_at",
                  "created_at",
                  "event_at",
                  "id",
                  "cursus_id",
                  "campus_id",
                  "item_id",
                  "reason"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Journals"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdJournals",
        "summary": "index"
      }
    },
    "/campus/:campus_id/locations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "host": "ariel",
                  "begin_at": "2017-11-22T13:42:10.248Z",
                  "campus_id": 1,
                  "end_at": "2017-11-22T13:42:10.248Z",
                  "floor": null,
                  "id": 6,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 120,
                    "login": "obkenobi",
                    "url": "https://api.intra.42.fr/v2/users/obkenobi"
                  }
                },
                {
                  "host": "puck",
                  "begin_at": "2017-11-22T13:42:09.406Z",
                  "campus_id": 1,
                  "end_at": "2017-11-22T13:42:09.406Z",
                  "floor": null,
                  "id": 1,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 73,
                    "login": "padmamid",
                    "url": "https://api.intra.42.fr/v2/users/padmamid"
                  }
                },
                {
                  "host": "ganymede",
                  "begin_at": "2017-11-21T13:42:10.737Z",
                  "campus_id": 1,
                  "end_at": "2017-11-21T14:42:10.737Z",
                  "floor": null,
                  "id": 7,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 53,
                    "login": "dvader",
                    "url": "https://api.intra.42.fr/v2/users/dvader"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_id": {
                    "type": "number"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "floor": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "post": {
                    "type": "null"
                  },
                  "primary": {
                    "type": "boolean"
                  },
                  "row": {
                    "type": "null"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "user",
                  "begin_at",
                  "primary",
                  "floor",
                  "row",
                  "campus_id",
                  "id",
                  "end_at",
                  "post",
                  "host"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdLocations",
        "summary": "index"
      }
    },
    "/campus/:campus_id/locations/end_all": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "Will end all locations of a given campus.",
        "operationId": "DeleteCampusFromCampusIdLocationsEndAll",
        "summary": "end_all"
      }
    },
    "/campus/:campus_id/notes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "content": "Mathieu n'aime pas se faire appeler princesse ♥️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "id": 1,
                  "subject": "Chevelure abondante",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  }
                },
                {
                  "content": "Est secretement amoureux de flav️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "id": 2,
                  "subject": "Amour caché",
                  "user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  }
                },
                {
                  "content": "Est secretement amoureux de andré",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "id": 3,
                  "subject": "Amour caché (2)",
                  "user": {
                    "id": 10935,
                    "login": "fguilloc",
                    "url": "https://api.intra.42.fr/v2/users/fguilloc"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "from_user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "id": {
                    "type": "number"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "user",
                  "id",
                  "from_user",
                  "subject",
                  "content",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdNotes",
        "summary": "index"
      }
    },
    "/campus/:campus_id/products": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.457Z",
                  "description": "Utapau",
                  "end_at": null,
                  "id": 1,
                  "image": {
                    "thumb": {
                      "url": "/uploads/product/image/1/thumb_logo.png"
                    },
                    "url": "/uploads/product/image/1/logo.png"
                  },
                  "is_uniq": true,
                  "kind": "auto",
                  "name": "Jakku",
                  "one_time_purchase": false,
                  "price": 100,
                  "quantity": 20,
                  "slug": "jakku",
                  "updated_at": "2017-11-22T13:41:20.498Z"
                },
                {
                  "begin_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.528Z",
                  "description": "Lothal",
                  "end_at": null,
                  "id": 2,
                  "image": {
                    "thumb": {
                      "url": "/uploads/product/image/2/thumb_logo.png"
                    },
                    "url": "/uploads/product/image/2/logo.png"
                  },
                  "is_uniq": true,
                  "kind": "auto",
                  "name": "Sullust",
                  "one_time_purchase": false,
                  "price": 100,
                  "quantity": 20,
                  "slug": "sullust",
                  "updated_at": "2017-11-22T13:41:20.561Z"
                },
                {
                  "begin_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.590Z",
                  "description": "Naboo",
                  "end_at": null,
                  "id": 3,
                  "image": {
                    "thumb": {
                      "url": "/uploads/product/image/3/thumb_logo.png"
                    },
                    "url": "/uploads/product/image/3/logo.png"
                  },
                  "is_uniq": true,
                  "kind": "auto",
                  "name": "Geonosis",
                  "one_time_purchase": false,
                  "price": 100,
                  "quantity": 20,
                  "slug": "geonosis",
                  "updated_at": "2017-11-22T13:41:20.621Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "null"
                  },
                  "category_id": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "thumb": {
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "thumb"
                    ],
                    "type": "object"
                  },
                  "is_uniq": {
                    "type": "boolean"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "one_time_purchase": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "slug",
                  "image",
                  "is_uniq",
                  "begin_at",
                  "category_id",
                  "quantity",
                  "updated_at",
                  "id",
                  "description",
                  "kind",
                  "one_time_purchase",
                  "price",
                  "end_at",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdProducts",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-05-22T13:43:51.000Z",
                "category_id": 3,
                "created_at": "2017-11-22T13:43:52.063Z",
                "description": "Utapau",
                "end_at": "2023-11-22T13:43:51.000Z",
                "id": 6,
                "image": {
                  "thumb": {
                    "url": "/uploads/product/image/6/thumb_logo.png"
                  },
                  "url": "/uploads/product/image/6/logo.png"
                },
                "is_uniq": true,
                "kind": "auto",
                "name": "Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris.",
                "one_time_purchase": true,
                "price": 10,
                "quantity": 10,
                "slug": "chuck-norris-s-keyboard-doesn-t-have-a-ctrl-key-because-nothing-controls-chuck-norris",
                "updated_at": "2017-11-22T13:43:52.097Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "category_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "properties": {
                    "thumb": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "thumb",
                    "url"
                  ],
                  "type": "object"
                },
                "is_uniq": {
                  "type": "boolean"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "one_time_purchase": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "kind",
                "id",
                "price",
                "quantity",
                "category_id",
                "created_at",
                "one_time_purchase",
                "name",
                "updated_at",
                "image",
                "slug",
                "is_uniq",
                "description",
                "begin_at",
                "end_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "PostCampusFromCampusIdProducts",
        "summary": "create"
      }
    },
    "/campus/:campus_id/products/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "DeleteCampusFromCampusIdProductsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": null,
                "category_id": 1,
                "created_at": "2017-11-22T13:41:20.457Z",
                "description": "Utapau",
                "end_at": null,
                "id": 1,
                "image": {
                  "thumb": {
                    "url": "/uploads/product/image/1/thumb_logo.png"
                  },
                  "url": "/uploads/product/image/1/logo.png"
                },
                "is_uniq": true,
                "kind": "auto",
                "name": "Jakku",
                "one_time_purchase": false,
                "price": 100,
                "quantity": 20,
                "slug": "jakku",
                "updated_at": "2017-11-22T13:41:20.498Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "null"
                },
                "category_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "properties": {
                    "thumb": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "thumb"
                  ],
                  "type": "object"
                },
                "is_uniq": {
                  "type": "boolean"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "one_time_purchase": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "end_at",
                "updated_at",
                "name",
                "slug",
                "image",
                "is_uniq",
                "category_id",
                "created_at",
                "one_time_purchase",
                "id",
                "description",
                "price",
                "quantity",
                "begin_at",
                "kind"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdProductsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "PatchCampusFromCampusIdProductsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "PutCampusFromCampusIdProductsById",
        "summary": "update"
      }
    },
    "/campus/:campus_id/products/:product_id/commands": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "product_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Commands"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdProductsFromProductIdCommands",
        "summary": "index"
      }
    },
    "/campus/:campus_id/quests": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:42:11.464Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "description": "Reach the level 14.",
                  "grade": null,
                  "grade_id": null,
                  "id": 1,
                  "internal_name": null,
                  "kind": "main",
                  "name": "Level 14",
                  "position": 1,
                  "slug": "level-14",
                  "updated_at": "2017-11-22T13:42:11.464Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus": {
                    "type": "null"
                  },
                  "campus_id": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "grade": {
                    "type": "null"
                  },
                  "grade_id": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "internal_name": {
                    "type": "null"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "created_at",
                  "id",
                  "updated_at",
                  "campus",
                  "name",
                  "cursus_id",
                  "campus_id",
                  "grade_id",
                  "position",
                  "grade",
                  "cursus",
                  "slug",
                  "internal_name",
                  "description",
                  "kind"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdQuests",
        "summary": "index"
      }
    },
    "/campus/:campus_id/stats": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Campus"
        ],
        "description": "This endpoint is only for <code>42Network</code> app.",
        "operationId": "GetCampusFromCampusIdStats",
        "summary": "stats"
      }
    },
    "/campus/:campus_id/tags_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdTagsUsers",
        "summary": "index"
      }
    },
    "/campus/:campus_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "large",
                          "medium",
                          "small",
                          "micro"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetCampusFromCampusIdUsers",
        "summary": "index"
      }
    },
    "/campus/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "active": true,
                "address": "96, boulevard Bessières",
                "city": "Paris",
                "country": "France",
                "default_hidden_phone": false,
                "email_extension": "42.fr",
                "endpoint": {
                  "created_at": "2021-06-14T07:49:14.872Z",
                  "description": "42paris's new ldapkdc endpoint",
                  "id": 33,
                  "updated_at": "2021-06-28T15:24:45.089Z",
                  "url": "https://endpoint.42paris.fr"
                },
                "facebook": "https://facebook.com/42born2code",
                "id": 1,
                "language": {
                  "id": 1,
                  "identifier": "fr",
                  "name": "Français"
                },
                "name": "Paris",
                "public": true,
                "time_zone": "Europe/Paris",
                "twitter": "https://twitter.com/42born2code",
                "users_count": 22997,
                "vogsphere_id": 1,
                "website": "http://www.42.fr/",
                "zip": "75017"
              }
            },
            "schema": {
              "properties": {
                "active": {
                  "type": "boolean"
                },
                "address": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "default_hidden_phone": {
                  "type": "boolean"
                },
                "email_extension": {
                  "type": "string"
                },
                "endpoint": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "description",
                    "created_at",
                    "updated_at",
                    "id"
                  ],
                  "type": "object"
                },
                "facebook": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "identifier",
                    "id"
                  ],
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "public": {
                  "type": "boolean"
                },
                "time_zone": {
                  "type": "string"
                },
                "twitter": {
                  "type": "string"
                },
                "users_count": {
                  "type": "number"
                },
                "vogsphere_id": {
                  "type": "number"
                },
                "website": {
                  "type": "string"
                },
                "zip": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "public",
                "default_hidden_phone",
                "facebook",
                "active",
                "email_extension",
                "language",
                "vogsphere_id",
                "zip",
                "city",
                "website",
                "time_zone",
                "address",
                "twitter",
                "users_count",
                "country",
                "endpoint"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Campus"
        ],
        "description": "",
        "operationId": "GetCampusById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Campus"
        ],
        "description": "",
        "operationId": "PatchCampusById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Campus"
        ],
        "description": "",
        "operationId": "PutCampusById",
        "summary": "update"
      }
    },
    "/campus_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Campus users"
        ],
        "description": "",
        "operationId": "GetCampusUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "campus_id": 6,
                "id": 127,
                "is_primary": false,
                "user_id": 1
              }
            },
            "schema": {
              "properties": {
                "campus_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "is_primary": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "campus_id",
                "is_primary",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Campus users"
        ],
        "description": "",
        "operationId": "PostCampusUsers",
        "summary": "create"
      }
    },
    "/campus_users/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "campus_id": 1,
                "id": 126,
                "is_primary": true,
                "user_id": 126
              }
            },
            "schema": {
              "properties": {
                "campus_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "is_primary": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "campus_id",
                "is_primary",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Campus users"
        ],
        "description": "",
        "operationId": "GetCampusUsersById",
        "summary": "show"
      }
    },
    "/certificates": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificate",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates"
        ],
        "description": "",
        "operationId": "GetCertificates",
        "summary": "index"
      }
    },
    "/certificates/:certificate_id/certificates_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "certificate_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificates_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates users"
        ],
        "description": "",
        "operationId": "GetCertificatesFromCertificateIdCertificatesUsers",
        "summary": "index"
      }
    },
    "/certificates/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificate",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates"
        ],
        "description": "",
        "operationId": "GetCertificatesById",
        "summary": "show"
      }
    },
    "/certificates_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "certificate_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificates_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates users"
        ],
        "description": "",
        "operationId": "GetCertificatesUsers",
        "summary": "index"
      }
    },
    "/certificates_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificates_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates users"
        ],
        "description": "",
        "operationId": "DeleteCertificatesUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificates_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates users"
        ],
        "description": "",
        "operationId": "GetCertificatesUsersById",
        "summary": "show"
      }
    },
    "/closes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closer": {
                    "id": 2,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "community_services": [
                    {
                      "created_at": "2017-11-22T13:42:20.944Z",
                      "duration": 14400,
                      "id": 2,
                      "occupation": "West Virginia lions",
                      "schedule_at": "2017-11-28T06:00:00.000Z",
                      "state": "schedule",
                      "updated_at": "2017-11-22T13:42:21.007Z"
                    }
                  ],
                  "created_at": "2017-11-22T13:42:20.888Z",
                  "end_at": null,
                  "id": 3,
                  "reason": "Connecticut giants",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.987Z",
                  "user": {
                    "id": 82,
                    "login": "kyren",
                    "url": "https://api.intra.42.fr/v2/users/kyren"
                  }
                },
                {
                  "closer": {
                    "id": 3,
                    "login": "gargamel",
                    "url": "https://api.intra.42.fr/v2/users/gargamel"
                  },
                  "community_services": [
                    {
                      "created_at": "2017-11-22T13:42:20.806Z",
                      "duration": 14400,
                      "id": 1,
                      "occupation": "North Carolina spirits",
                      "schedule_at": "2017-11-27T11:00:00.000Z",
                      "state": "schedule",
                      "updated_at": "2017-11-22T13:42:20.876Z"
                    }
                  ],
                  "created_at": "2017-11-22T13:42:20.695Z",
                  "end_at": null,
                  "id": 2,
                  "reason": "Florida druids",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.857Z",
                  "user": {
                    "id": 114,
                    "login": "darmaul",
                    "url": "https://api.intra.42.fr/v2/users/darmaul"
                  }
                },
                {
                  "closer": {
                    "id": 3,
                    "login": "gargamel",
                    "url": "https://api.intra.42.fr/v2/users/gargamel"
                  },
                  "community_services": [],
                  "created_at": "2017-11-22T13:42:20.695Z",
                  "end_at": "2017-11-24T13:42:20.857Z",
                  "id": 1,
                  "reason": "Florida druids",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.857Z",
                  "user": {
                    "id": 114,
                    "login": "darmaul",
                    "url": "https://api.intra.42.fr/v2/users/darmaul"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closer": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "community_services": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "duration": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "occupation": {
                          "type": "string"
                        },
                        "schedule_at": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "duration",
                        "schedule_at",
                        "occupation",
                        "state",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "state",
                  "updated_at",
                  "community_services",
                  "user",
                  "reason",
                  "created_at",
                  "end_at",
                  "closer"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "",
        "operationId": "GetCloses",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "close",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "closer": {
                  "id": 2,
                  "login": "andre",
                  "url": "https://api.intra.42.fr/v2/users/andre"
                },
                "community_services": [],
                "created_at": "2017-11-22T13:43:29.676Z",
                "id": 3,
                "reason": "Mange des patates douces en cluster 🍠",
                "state": "close",
                "updated_at": "2017-11-22T13:43:29.676Z",
                "user": {
                  "id": 64,
                  "login": "shepalpa",
                  "url": "https://api.intra.42.fr/v2/users/shepalpa"
                }
              }
            },
            "schema": {
              "properties": {
                "closer": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "community_services": {
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "reason",
                "state",
                "created_at",
                "updated_at",
                "community_services",
                "user",
                "closer",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "If you want to link a community service with this close, pass it trough the <code>community_services_attributes</code> array attribute. An email is automatically sent to the user when he is assigned to a community service.",
        "operationId": "PostCloses",
        "summary": "create"
      }
    },
    "/closes/:close_id/community_services": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "close_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "close": {
                    "created_at": "2017-11-22T13:42:20.888Z",
                    "id": 2,
                    "reason": "Connecticut giants",
                    "state": "unclose",
                    "updated_at": "2017-11-22T13:42:20.987Z"
                  },
                  "created_at": "2017-11-22T13:42:20.944Z",
                  "duration": 14400,
                  "id": 2,
                  "occupation": "West Virginia lions",
                  "schedule_at": "2017-11-28T06:00:00.000Z",
                  "state": "schedule",
                  "updated_at": "2017-11-22T13:42:21.007Z"
                },
                {
                  "close": {
                    "created_at": "2017-11-22T13:42:20.695Z",
                    "id": 1,
                    "reason": "Florida druids",
                    "state": "unclose",
                    "updated_at": "2017-11-22T13:42:20.857Z"
                  },
                  "created_at": "2017-11-22T13:42:20.806Z",
                  "duration": 14400,
                  "id": 1,
                  "occupation": "North Carolina spirits",
                  "schedule_at": "2017-11-27T11:00:00.000Z",
                  "state": "schedule",
                  "updated_at": "2017-11-22T13:42:20.876Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "close": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "updated_at",
                      "id",
                      "reason",
                      "state"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "occupation": {
                    "type": "string"
                  },
                  "schedule_at": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "schedule_at",
                  "occupation",
                  "state",
                  "created_at",
                  "updated_at",
                  "close",
                  "id",
                  "duration"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "",
        "operationId": "GetClosesFromCloseIdCommunityServices",
        "summary": "index"
      }
    },
    "/closes/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "close",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "",
        "operationId": "DeleteClosesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "closer": {
                  "id": 2,
                  "login": "andre",
                  "url": "https://api.intra.42.fr/v2/users/andre"
                },
                "community_services": [
                  {
                    "created_at": "2017-11-22T13:42:20.944Z",
                    "duration": 14400,
                    "id": 2,
                    "occupation": "West Virginia lions",
                    "schedule_at": "2017-11-28T06:00:00.000Z",
                    "state": "schedule",
                    "updated_at": "2017-11-22T13:42:21.007Z"
                  }
                ],
                "created_at": "2017-11-22T13:42:20.888Z",
                "end_at": null,
                "id": 2,
                "reason": "Connecticut giants",
                "state": "unclose",
                "updated_at": "2017-11-22T13:42:20.987Z",
                "user": {
                  "id": 82,
                  "login": "kyren",
                  "url": "https://api.intra.42.fr/v2/users/kyren"
                }
              }
            },
            "schema": {
              "properties": {
                "closer": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "community_services": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "occupation": {
                        "type": "string"
                      },
                      "schedule_at": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "duration",
                      "schedule_at",
                      "occupation",
                      "state",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "reason",
                "community_services",
                "closer",
                "state",
                "created_at",
                "updated_at",
                "end_at",
                "user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "",
        "operationId": "GetClosesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "close",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "",
        "operationId": "PatchClosesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "close",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "",
        "operationId": "PutClosesById",
        "summary": "update"
      }
    },
    "/closes/:id/close": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "Change the close state from <code>unclose</code> to <code>close</code>.",
        "operationId": "PatchClosesFromIdClose",
        "summary": "close"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "Change the close state from <code>unclose</code> to <code>close</code>.",
        "operationId": "PutClosesFromIdClose",
        "summary": "close"
      }
    },
    "/closes/:id/unclose": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "Change the close state from <code>close</code> to <code>unclose</code>.",
        "operationId": "PatchClosesFromIdUnclose",
        "summary": "unclose"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "Change the close state from <code>close</code> to <code>unclose</code>.",
        "operationId": "PutClosesFromIdUnclose",
        "summary": "unclose"
      }
    },
    "/coalitions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "color": "#087262",
                  "id": 2,
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                  "name": "Kansas giants",
                  "score": 83,
                  "slug": "super-slug",
                  "user_id": 90
                },
                {
                  "color": "#1c7f08",
                  "id": 1,
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                  "name": "Indiana goblins",
                  "score": 54,
                  "slug": "super-slug",
                  "user_id": 38
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "score": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "color",
                  "score",
                  "user_id",
                  "id",
                  "name",
                  "slug",
                  "image_url"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "GetCoalitions",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "color": "#4231d7",
                "id": 3,
                "image_url": "https://admin.intra.42.fr/uploads/coalition/image/3/logo.svg",
                "name": "rabbits",
                "score": 0,
                "slug": "rabbits",
                "user_id": 35
              }
            },
            "schema": {
              "properties": {
                "color": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "image_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "image_url",
                "color",
                "score",
                "user_id",
                "id",
                "name",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "PostCoalitions",
        "summary": "create"
      }
    },
    "/coalitions/:coalition_id/coalitions_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "coalition_id": 1,
                  "created_at": "2017-11-22T13:42:09.775Z",
                  "id": 4,
                  "updated_at": "2017-11-22T13:42:09.775Z",
                  "user_id": 67
                },
                {
                  "coalition_id": 1,
                  "created_at": "2017-11-22T13:42:09.750Z",
                  "id": 3,
                  "updated_at": "2017-11-22T13:42:09.750Z",
                  "user_id": 25
                },
                {
                  "coalition_id": 2,
                  "created_at": "2017-11-22T13:42:09.723Z",
                  "id": 2,
                  "updated_at": "2017-11-22T13:42:09.723Z",
                  "user_id": 23
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "coalition_id": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "coalition_id",
                  "user_id",
                  "created_at",
                  "updated_at",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "GetCoalitionsFromCoalitionIdCoalitionsUsers",
        "summary": "index"
      }
    },
    "/coalitions/:coalition_id/scores": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetCoalitionsFromCoalitionIdScores",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "PostCoalitionsFromCoalitionIdScores",
        "summary": "create"
      }
    },
    "/coalitions/:coalition_id/scores/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "DeleteCoalitionsFromCoalitionIdScoresById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "calculation_id": 3,
                "coalition_id": 1,
                "coalitions_user_id": 3,
                "created_at": "2017-11-22T13:42:09.850Z",
                "id": 2,
                "reason": "Who's the more foolish; the fool, or the fool who follows him?",
                "scoreable_id": 5,
                "scoreable_type": "Location",
                "updated_at": "2017-11-22T13:42:09.850Z",
                "value": 54
              }
            },
            "schema": {
              "properties": {
                "calculation_id": {
                  "type": "number"
                },
                "coalition_id": {
                  "type": "number"
                },
                "coalitions_user_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "scoreable_id": {
                  "type": "number"
                },
                "scoreable_type": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "coalitions_user_id",
                "updated_at",
                "id",
                "coalition_id",
                "calculation_id",
                "value",
                "reason",
                "created_at",
                "scoreable_id",
                "scoreable_type"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetCoalitionsFromCoalitionIdScoresById",
        "summary": "show"
      }
    },
    "/coalitions/:coalition_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "large",
                          "medium",
                          "small",
                          "micro"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetCoalitionsFromCoalitionIdUsers",
        "summary": "index"
      }
    },
    "/coalitions/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "color": "#087262",
                "id": 2,
                "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                "name": "Kansas giants",
                "score": 83,
                "slug": "super-slug",
                "user_id": 90
              }
            },
            "schema": {
              "properties": {
                "color": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "image_url": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "score": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "score",
                "user_id",
                "id",
                "name",
                "slug",
                "image_url",
                "color"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "GetCoalitionsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "PatchCoalitionsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "PutCoalitionsById",
        "summary": "update"
      }
    },
    "/coalitions_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "coalition_id": 1,
                  "created_at": "2017-11-22T13:42:09.775Z",
                  "id": 4,
                  "updated_at": "2017-11-22T13:42:09.775Z",
                  "user_id": 67
                },
                {
                  "coalition_id": 1,
                  "created_at": "2017-11-22T13:42:09.750Z",
                  "id": 3,
                  "updated_at": "2017-11-22T13:42:09.750Z",
                  "user_id": 25
                },
                {
                  "coalition_id": 2,
                  "created_at": "2017-11-22T13:42:09.723Z",
                  "id": 2,
                  "updated_at": "2017-11-22T13:42:09.723Z",
                  "user_id": 23
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "coalition_id": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "user_id",
                  "created_at",
                  "updated_at",
                  "id",
                  "coalition_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "GetCoalitionsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "coalition_id": 2,
                "created_at": "2017-11-22T13:43:31.350Z",
                "id": 5,
                "updated_at": "2017-11-22T13:43:31.350Z",
                "user_id": 60
              }
            },
            "schema": {
              "properties": {
                "coalition_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "coalition_id",
                "user_id",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "PostCoalitionsUsers",
        "summary": "create"
      }
    },
    "/coalitions_users/:coalitions_user_id/scores": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetCoalitionsUsersFromCoalitionsUserIdScores",
        "summary": "index"
      }
    },
    "/coalitions_users/:coalitions_user_id/scores/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "calculation_id": 3,
                "coalition_id": 1,
                "coalitions_user_id": 3,
                "created_at": "2017-11-22T13:42:09.850Z",
                "id": 2,
                "reason": "Who's the more foolish; the fool, or the fool who follows him?",
                "scoreable_id": 5,
                "scoreable_type": "Location",
                "updated_at": "2017-11-22T13:42:09.850Z",
                "value": 54
              }
            },
            "schema": {
              "properties": {
                "calculation_id": {
                  "type": "number"
                },
                "coalition_id": {
                  "type": "number"
                },
                "coalitions_user_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "scoreable_id": {
                  "type": "number"
                },
                "scoreable_type": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "calculation_id",
                "value",
                "reason",
                "created_at",
                "scoreable_id",
                "scoreable_type",
                "coalitions_user_id",
                "updated_at",
                "id",
                "coalition_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetCoalitionsUsersFromCoalitionsUserIdScoresById",
        "summary": "show"
      }
    },
    "/coalitions_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "DeleteCoalitionsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "coalition_id": 1,
                "created_at": "2017-11-22T13:42:09.775Z",
                "id": 4,
                "updated_at": "2017-11-22T13:42:09.775Z",
                "user_id": 67
              }
            },
            "schema": {
              "properties": {
                "coalition_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "coalition_id",
                "user_id",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "GetCoalitionsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "PatchCoalitionsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "PutCoalitionsUsersById",
        "summary": "update"
      }
    },
    "/community_services": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "close_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "close": {
                    "created_at": "2017-11-22T13:42:20.888Z",
                    "id": 2,
                    "reason": "Connecticut giants",
                    "state": "unclose",
                    "updated_at": "2017-11-22T13:42:20.987Z"
                  },
                  "created_at": "2017-11-22T13:42:20.944Z",
                  "duration": 14400,
                  "id": 2,
                  "occupation": "West Virginia lions",
                  "schedule_at": "2017-11-28T06:00:00.000Z",
                  "state": "schedule",
                  "updated_at": "2017-11-22T13:42:21.007Z"
                },
                {
                  "close": {
                    "created_at": "2017-11-22T13:42:20.695Z",
                    "id": 1,
                    "reason": "Florida druids",
                    "state": "unclose",
                    "updated_at": "2017-11-22T13:42:20.857Z"
                  },
                  "created_at": "2017-11-22T13:42:20.806Z",
                  "duration": 14400,
                  "id": 1,
                  "occupation": "North Carolina spirits",
                  "schedule_at": "2017-11-27T11:00:00.000Z",
                  "state": "schedule",
                  "updated_at": "2017-11-22T13:42:20.876Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "close": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "updated_at",
                      "id",
                      "reason",
                      "state"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "occupation": {
                    "type": "string"
                  },
                  "schedule_at": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "duration",
                  "schedule_at",
                  "occupation",
                  "state",
                  "created_at",
                  "updated_at",
                  "close",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "",
        "operationId": "GetCommunityServices",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "community_service",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "close": {
                  "created_at": "2017-11-22T13:42:20.888Z",
                  "id": 2,
                  "reason": "Connecticut giants",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.987Z"
                },
                "created_at": "2017-11-22T13:43:32.216Z",
                "duration": 14400,
                "id": 3,
                "occupation": "Regarder Shrek, en entier, avec Mathieu Trentin",
                "schedule_at": "2017-11-27T06:00:00.000Z",
                "state": "schedule",
                "updated_at": "2017-11-22T13:43:32.216Z"
              }
            },
            "schema": {
              "properties": {
                "close": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "reason",
                    "state",
                    "created_at",
                    "updated_at"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "occupation": {
                  "type": "string"
                },
                "schedule_at": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "occupation",
                "state",
                "created_at",
                "updated_at",
                "close",
                "id",
                "duration",
                "schedule_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "<em>Warning</em>: When you use this call, we suggest that you know what you do. If you want to link a community service with this community_service, pass it trough the <em>closes#index</em> API call, with his <code>community_services_attributes</code> array attribute. An email is automatically sent to the user when he is assigned to a community service.",
        "operationId": "PostCommunityServices",
        "summary": "create"
      }
    },
    "/community_services/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "community_service",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "<em>Warning</em>: When you use this call, we suggest that you know what you do.",
        "operationId": "DeleteCommunityServicesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "close": {
                  "created_at": "2017-11-22T13:42:20.695Z",
                  "id": 1,
                  "reason": "Florida druids",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.857Z"
                },
                "created_at": "2017-11-22T13:42:20.806Z",
                "duration": 14400,
                "id": 1,
                "occupation": "North Carolina spirits",
                "schedule_at": "2017-11-27T11:00:00.000Z",
                "state": "schedule",
                "updated_at": "2017-11-22T13:42:20.876Z"
              }
            },
            "schema": {
              "properties": {
                "close": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "reason",
                    "state"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "occupation": {
                  "type": "string"
                },
                "schedule_at": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "updated_at",
                "close",
                "id",
                "duration",
                "schedule_at",
                "occupation",
                "state",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "",
        "operationId": "GetCommunityServicesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "community_service",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "<em>Warning</em>: When you use this call, we suggest that you know what you do.",
        "operationId": "PatchCommunityServicesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "community_service",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "<em>Warning</em>: When you use this call, we suggest that you know what you do.",
        "operationId": "PutCommunityServicesById",
        "summary": "update"
      }
    },
    "/community_services/:id/invalidate": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "Set the given community service state to <code>invalidated</code>",
        "operationId": "PatchCommunityServicesFromIdInvalidate",
        "summary": "invalidate"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "Set the given community service state to <code>invalidated</code>",
        "operationId": "PutCommunityServicesFromIdInvalidate",
        "summary": "invalidate"
      }
    },
    "/community_services/:id/validate": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "Set the given community service state to <code>validated</code>",
        "operationId": "PatchCommunityServicesFromIdValidate",
        "summary": "validate"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "Set the given community service state to <code>validated</code>",
        "operationId": "PutCommunityServicesFromIdValidate",
        "summary": "validate"
      }
    },
    "/community_services/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 2
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Community services"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetCommunityServicesGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/companies": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Companies"
        ],
        "description": "",
        "operationId": "GetCompanies",
        "summary": "index"
      }
    },
    "/companies/:company_id/internships_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "company_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "company",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Companies"
        ],
        "description": "",
        "operationId": "GetCompaniesFromCompanyIdInternshipsUsers",
        "summary": "internships_users"
      }
    },
    "/companies/:company_id/subscribed_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "company_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "company",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Companies"
        ],
        "description": "",
        "operationId": "GetCompaniesFromCompanyIdSubscribedUsers",
        "summary": "subscribed_users"
      }
    },
    "/companies/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Companies"
        ],
        "description": "",
        "operationId": "GetCompaniesById",
        "summary": "show"
      }
    },
    "/cursus": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:00.825Z",
                  "id": 2,
                  "name": "42",
                  "slug": "42"
                },
                {
                  "created_at": "2017-11-22T13:41:00.750Z",
                  "id": 1,
                  "name": "Piscine C",
                  "slug": "piscine-c"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "required": [
                  "slug",
                  "id",
                  "created_at",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Cursus"
        ],
        "description": "",
        "operationId": "GetCursus",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:33.469Z",
                "id": 3,
                "name": "Oregon tigers",
                "slug": "oregon-tigers"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "created_at",
                "name",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Cursus"
        ],
        "description": "",
        "operationId": "PostCursus",
        "summary": "create"
      }
    },
    "/cursus/:cursus_id/achievements": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "achievements": [],
                  "description": "Regarder 1 video sur l'e-learning.",
                  "id": 1,
                  "image": "/uploads/achievement/image/1/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 1,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/1/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 21 videos sur l'e-learning.",
                  "id": 3,
                  "image": "/uploads/achievement/image/3/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 21,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/3/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 42 videos sur l'e-learning.",
                  "id": 4,
                  "image": "/uploads/achievement/image/4/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 42,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/4/users",
                  "visible": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "achievements": {
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_of_success": {
                    "type": "number"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "tier": {
                    "type": "string"
                  },
                  "title": {
                    "type": "null"
                  },
                  "users_url": {
                    "type": "string"
                  },
                  "visible": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "kind",
                  "visible",
                  "image",
                  "users_url",
                  "achievements",
                  "id",
                  "name",
                  "nbr_of_success",
                  "parent",
                  "title",
                  "description",
                  "tier"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "List all visibles achievements. Invisibles achievements need at least the <code>basic_staff</code> role.",
        "operationId": "GetCursusFromCursusIdAchievements",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/announcements": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "announcement",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "author": "42partnerships",
                "created_at": "2017-11-22T13:43:27.259Z",
                "expire_at": "2017-11-22T14:13:10.000Z",
                "id": 5,
                "kind": "global",
                "link": null,
                "text": "42partnerships revient",
                "title": "Partenariats écoles 2016",
                "updated_at": "2017-11-22T13:43:27.259Z"
              }
            },
            "schema": {
              "properties": {
                "author": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "expire_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "link": {
                  "type": "null"
                },
                "text": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "text",
                "link",
                "created_at",
                "id",
                "title",
                "updated_at",
                "expire_at",
                "author",
                "kind"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Announcements"
        ],
        "description": "",
        "operationId": "PostCursusFromCursusIdAnnouncements",
        "summary": "create"
      }
    },
    "/cursus/:cursus_id/cursus_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2016-12-16T07:41:39.516Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 126,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  }
                },
                {
                  "begin_at": "2017-11-10T21:38:19.158Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "id": 1,
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  },
                  "cursus_id": 1,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 125,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  }
                },
                {
                  "begin_at": "2017-07-22T03:48:20.016Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 124,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "grade": {
                    "type": "string"
                  },
                  "has_coalition": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "level": {
                    "type": "number"
                  },
                  "skills": {
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "end_at",
                  "skills",
                  "user",
                  "id",
                  "begin_at",
                  "grade",
                  "level",
                  "cursus_id",
                  "has_coalition",
                  "cursus"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdCursusUsers",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-25T13:42:10.090Z",
                  "campus_ids": [
                    3
                  ],
                  "created_at": "2017-11-22T13:42:10.110Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et selfies beard williamsburg quisquam ramps. Molestiae craft beer consectetur asperiores dolor. Small batch placeat banjo vhs mollitia aut vero. Distinctio est readymade offal tote bag +1.",
                  "end_at": "2017-11-25T15:42:10.090Z",
                  "id": 4,
                  "kind": "rush",
                  "location": "West Wisozk",
                  "max_people": 112,
                  "name": "Oklahoma whales",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 15,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 36,
                      "name": "AI",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 37,
                      "name": "Entrepreneurship",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.127Z",
                  "waitlist": null
                },
                {
                  "begin_at": "2017-11-24T13:42:10.014Z",
                  "campus_ids": [
                    6
                  ],
                  "created_at": "2017-11-22T13:42:10.037Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                  "end_at": "2017-11-24T15:42:10.015Z",
                  "id": 3,
                  "kind": "other",
                  "location": "Southern Bauch",
                  "max_people": 39,
                  "name": "Wyoming cattle",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 2,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 10,
                      "name": "Meeting",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 15,
                      "name": "Association",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.082Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 392,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 3,
                    "waitlistable_type": "Event"
                  }
                },
                {
                  "begin_at": "2017-11-23T13:42:09.970Z",
                  "campus_ids": [
                    4
                  ],
                  "created_at": "2017-11-22T13:42:09.991Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et tousled small batch street voluptas +1. Nisi small batch shoreditch est bicycle rights similique sed. Pbr&b sit exercitationem etsy ea. Cumque et forage reprehenderit officia quas. Chartreuse ad tacos commodi.",
                  "end_at": "2017-11-23T15:42:09.970Z",
                  "id": 2,
                  "kind": "association",
                  "location": "South Wisconsin Academy",
                  "max_people": 94,
                  "name": "Nevada sheep",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 10,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 12,
                      "name": "Security",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 42,
                      "name": "Recrutement",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.009Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 33,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 2,
                    "waitlistable_type": "Event"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "prohibition_of_cancellation": {
                    "type": "number"
                  },
                  "themes": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "updated_at",
                        "created_at",
                        "id",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "waitlist": {
                    "type": "null"
                  }
                },
                "required": [
                  "end_at",
                  "campus_ids",
                  "prohibition_of_cancellation",
                  "name",
                  "location",
                  "kind",
                  "max_people",
                  "nbr_subscribers",
                  "created_at",
                  "id",
                  "description",
                  "begin_at",
                  "updated_at",
                  "cursus_ids",
                  "waitlist",
                  "themes"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdEvents",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/exams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "campus": {
                    "active": true,
                    "address": "96, boulevard Bessières",
                    "city": "Paris",
                    "country": "France",
                    "default_hidden_phone": false,
                    "email_extension": "42.fr",
                    "facebook": "https://facebook.com/42born2code",
                    "id": 1,
                    "language": {
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "twitter": "https://twitter.com/42born2code",
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "website": "http://www.42.fr/",
                    "zip": "75017"
                  },
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "cursus": [
                    {
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "id": 4,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "id": 6,
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "id": 13,
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "location": "e1, e2, e3",
                  "max_people": 780,
                  "name": "Piscine C - Exam 01",
                  "nbr_subscribers": 594,
                  "projects": [
                    {
                      "attachments": [],
                      "children": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "exam": true,
                      "git_id": null,
                      "id": 405,
                      "name": "Exam01",
                      "parent": null,
                      "repository": null,
                      "slug": "piscine-c-exam01",
                      "updated_at": "2021-09-01T08:35:01.074Z"
                    }
                  ],
                  "updated_at": "2018-08-27T16:56:15.032Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "default_hidden_phone": {
                        "type": "boolean"
                      },
                      "email_extension": {
                        "type": "string"
                      },
                      "facebook": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      },
                      "website": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "vogsphere_id",
                      "website",
                      "facebook",
                      "default_hidden_phone",
                      "language",
                      "country",
                      "city",
                      "twitter",
                      "name",
                      "address",
                      "zip",
                      "time_zone",
                      "users_count",
                      "active",
                      "email_extension"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ip_range": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "projects": {
                    "items": {
                      "properties": {
                        "attachments": {
                          "type": "array"
                        },
                        "children": {
                          "type": "array"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "exam": {
                          "type": "boolean"
                        },
                        "git_id": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "null"
                        },
                        "repository": {
                          "type": "null"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "children",
                        "attachments",
                        "id",
                        "name",
                        "slug",
                        "parent",
                        "created_at",
                        "updated_at",
                        "exam",
                        "git_id",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "cursus",
                  "projects",
                  "ip_range",
                  "end_at",
                  "max_people",
                  "name",
                  "created_at",
                  "updated_at",
                  "id",
                  "begin_at",
                  "location",
                  "nbr_subscribers",
                  "campus"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "List all visibles exams. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetCursusFromCursusIdExams",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/levels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Levels"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdLevels",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/notions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 6,
                      "kind": "project",
                      "name": "Jour 13"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.091Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "id": 2,
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "id": 10,
                  "name": "Piscine OCaml - D08 - Object oriented programming 2/2",
                  "slug": "piscine-ocaml-d08-object-oriented-programming-2-2",
                  "subnotions": []
                },
                {
                  "tags": [
                    {
                      "id": 7,
                      "kind": "general",
                      "name": "Bocal"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.053Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "id": 2,
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "id": 9,
                  "name": "Piscine Unity - D07 - GUI 3D, navmesh and raycasting",
                  "slug": "piscine-unity-d07-gui-3d-navmesh-and-raycasting",
                  "subnotions": []
                },
                {
                  "tags": [
                    {
                      "id": 7,
                      "kind": "general",
                      "name": "Bocal"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.021Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "id": 8,
                  "name": "Piscine OCaml - D05 - Imperative traits",
                  "slug": "piscine-ocaml-d05-imperative-traits",
                  "subnotions": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created_at",
                        "name",
                        "slug",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  }
                },
                "required": [
                  "created_at",
                  "subnotions",
                  "tags",
                  "cursus",
                  "id",
                  "name",
                  "slug"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdNotions",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 12,
                      "kind": "general",
                      "name": "Libft"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:25.963Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The first project of 42 !",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 1,
                  "name": "Libft",
                  "objectives": [
                    "initiation"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.149Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 1,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 1,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 1,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:42:09.376Z",
                      "uploads": [
                        {
                          "id": 1,
                          "name": "Idaho kangaroos"
                        }
                      ]
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.305Z",
                      "id": 2,
                      "name": "Company experience"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "libft",
                  "updated_at": "2017-11-22T13:41:26.243Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 13,
                      "kind": "general",
                      "name": "Ordinary Wizarding Levels"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:26.356Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                  "difficulty": 5000,
                  "exam": true,
                  "id": 2,
                  "name": "Ordinary Wizarding Levels",
                  "objectives": [
                    "Wizarding"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.375Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 2,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 2,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 2,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:28.347Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    }
                  ],
                  "slug": "ordinary-wizarding-levels",
                  "updated_at": "2017-11-22T13:41:26.441Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 15,
                      "kind": "general",
                      "name": "Hogwarts Quidditch Cup"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [
                    {
                      "id": 5,
                      "name": "Quarter Finals",
                      "slug": "hogwarts-quidditch-cup-quarter-finals",
                      "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:26.765Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 4,
                  "name": "Hogwarts Quidditch Cup",
                  "objectives": [
                    "Quidditch"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.786Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": null,
                      "id": 4,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 4,
                      "scales": [],
                      "solo": false,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:26.786Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "hogwarts-quidditch-cup",
                  "updated_at": "2017-11-22T13:41:26.975Z",
                  "videos": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "attachments": {
                    "type": "array"
                  },
                  "campus": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "language": {
                          "properties": {
                            "created_at": {
                              "type": "string"
                            },
                            "id": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "identifier",
                            "created_at",
                            "updated_at",
                            "id"
                          ],
                          "type": "object"
                        },
                        "name": {
                          "type": "string"
                        },
                        "time_zone": {
                          "type": "string"
                        },
                        "users_count": {
                          "type": "number"
                        },
                        "vogsphere_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "time_zone",
                        "language",
                        "users_count",
                        "vogsphere_id",
                        "id",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "children": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "slug",
                        "id",
                        "created_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "difficulty": {
                    "type": "number"
                  },
                  "exam": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "objectives": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "project_sessions": {
                    "items": {
                      "properties": {
                        "begin_at": {
                          "type": "null"
                        },
                        "campus_id": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "cursus_id": {
                          "type": "null"
                        },
                        "difficulty": {
                          "type": "number"
                        },
                        "duration_days": {
                          "type": "null"
                        },
                        "end_at": {
                          "type": "null"
                        },
                        "estimate_time": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "is_subscriptable": {
                          "type": "boolean"
                        },
                        "max_people": {
                          "type": "null"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "scales": {
                          "items": {
                            "properties": {
                              "correction_number": {
                                "type": "number"
                              },
                              "id": {
                                "type": "number"
                              },
                              "is_primary": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "correction_number",
                              "is_primary"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "solo": {
                          "type": "boolean"
                        },
                        "team_behaviour": {
                          "type": "string"
                        },
                        "terminating_after": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "uploads": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "scales",
                        "team_behaviour",
                        "id",
                        "begin_at",
                        "estimate_time",
                        "campus_id",
                        "cursus_id",
                        "updated_at",
                        "end_at",
                        "created_at",
                        "max_people",
                        "difficulty",
                        "terminating_after",
                        "project_id",
                        "solo",
                        "duration_days",
                        "is_subscriptable",
                        "uploads"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "skills": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "created_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "videos": {
                    "type": "array"
                  }
                },
                "required": [
                  "attachments",
                  "updated_at",
                  "tags",
                  "project_sessions",
                  "parent",
                  "children",
                  "difficulty",
                  "objectives",
                  "created_at",
                  "id",
                  "slug",
                  "cursus",
                  "campus",
                  "skills",
                  "videos",
                  "description",
                  "exam",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdProjects",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/quests": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:42:11.464Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "description": "Reach the level 14.",
                  "grade": null,
                  "grade_id": null,
                  "id": 1,
                  "internal_name": null,
                  "kind": "main",
                  "name": "Level 14",
                  "position": 1,
                  "slug": "level-14",
                  "updated_at": "2017-11-22T13:42:11.464Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus": {
                    "type": "null"
                  },
                  "campus_id": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "slug",
                      "id",
                      "created_at",
                      "name"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "grade": {
                    "type": "null"
                  },
                  "grade_id": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "internal_name": {
                    "type": "null"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "updated_at",
                  "campus",
                  "grade_id",
                  "position",
                  "grade",
                  "cursus",
                  "slug",
                  "cursus_id",
                  "campus_id",
                  "kind",
                  "internal_name",
                  "description",
                  "id",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdQuests",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/skills": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdSkills",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/tags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issue_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 11,
                  "kind": "archived",
                  "name": "Archived",
                  "subnotions": [],
                  "users": []
                },
                {
                  "id": 7,
                  "kind": "general",
                  "name": "Bocal",
                  "subnotions": [
                    {
                      "created_at": "2017-11-22T13:41:24.154Z",
                      "id": 1,
                      "name": "Emacs",
                      "notepad": null,
                      "slug": "piscine-c-text-editors-emacs"
                    }
                  ],
                  "users": []
                },
                {
                  "id": 4,
                  "kind": "project",
                  "name": "Colle 08",
                  "subnotions": [],
                  "users": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  },
                  "users": {
                    "type": "array"
                  }
                },
                "required": [
                  "kind",
                  "users",
                  "subnotions",
                  "id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdTags",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/tags_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdTagsUsers",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "login",
                        "url",
                        "leader",
                        "occurrence",
                        "validated",
                        "projects_user_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "locked_at",
                  "id",
                  "url",
                  "updated_at",
                  "terminating_at",
                  "created_at",
                  "locked?",
                  "repo_url",
                  "scale_teams",
                  "closed?",
                  "project_session_id",
                  "teams_uploads",
                  "name",
                  "final_mark",
                  "project_id",
                  "validated?",
                  "status",
                  "users",
                  "repo_uuid",
                  "closed_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdTeams",
        "summary": "index"
      }
    },
    "/cursus/:cursus_id/teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetCursusFromCursusIdTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/cursus/:cursus_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "usual_full_name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetCursusFromCursusIdUsers",
        "summary": "index"
      }
    },
    "/cursus/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Cursus"
        ],
        "description": "",
        "operationId": "DeleteCursusById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:00.825Z",
                "id": 2,
                "name": "42",
                "slug": "42"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "slug",
                "id",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Cursus"
        ],
        "description": "",
        "operationId": "GetCursusById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Cursus"
        ],
        "description": "",
        "operationId": "PatchCursusById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Cursus"
        ],
        "description": "",
        "operationId": "PutCursusById",
        "summary": "update"
      }
    },
    "/cursus_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2016-12-16T07:41:39.516Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 126,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  }
                },
                {
                  "begin_at": "2017-11-10T21:38:19.158Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "id": 1,
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  },
                  "cursus_id": 1,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 125,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  }
                },
                {
                  "begin_at": "2017-07-22T03:48:20.016Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 124,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "grade": {
                    "type": "string"
                  },
                  "has_coalition": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "level": {
                    "type": "number"
                  },
                  "skills": {
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "end_at",
                  "skills",
                  "user",
                  "has_coalition",
                  "cursus",
                  "id",
                  "begin_at",
                  "grade",
                  "level",
                  "cursus_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "GetCursusUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-07-22T13:43:10.000Z",
                "cursus": {
                  "created_at": "2017-11-22T13:41:00.825Z",
                  "id": 2,
                  "name": "42",
                  "slug": "42"
                },
                "cursus_id": 2,
                "end_at": "2018-03-22T13:43:10.000Z",
                "grade": null,
                "has_coalition": true,
                "id": 127,
                "level": 0,
                "skills": [],
                "user": {
                  "id": 1,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                }
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "cursus": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "name",
                    "slug"
                  ],
                  "type": "object"
                },
                "cursus_id": {
                  "type": "number"
                },
                "end_at": {
                  "type": "string"
                },
                "grade": {
                  "type": "null"
                },
                "has_coalition": {
                  "type": "boolean"
                },
                "id": {
                  "type": "number"
                },
                "level": {
                  "type": "number"
                },
                "skills": {
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "user",
                "cursus",
                "id",
                "level",
                "skills",
                "cursus_id",
                "has_coalition",
                "begin_at",
                "end_at",
                "grade"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "PostCursusUsers",
        "summary": "create"
      }
    },
    "/cursus_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "DeleteCursusUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-06-13T03:05:07.756Z",
                "cursus": {
                  "created_at": "2017-11-22T13:41:00.750Z",
                  "id": 1,
                  "name": "Piscine C",
                  "slug": "piscine-c"
                },
                "cursus_id": 1,
                "end_at": null,
                "grade": "Cadet",
                "has_coalition": true,
                "id": 7,
                "level": 0,
                "skills": [],
                "user": {
                  "id": 7,
                  "login": "jbinks",
                  "url": "https://api.intra.42.fr/v2/users/jbinks"
                }
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "cursus": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "name",
                    "slug"
                  ],
                  "type": "object"
                },
                "cursus_id": {
                  "type": "number"
                },
                "end_at": {
                  "type": "null"
                },
                "grade": {
                  "type": "string"
                },
                "has_coalition": {
                  "type": "boolean"
                },
                "id": {
                  "type": "number"
                },
                "level": {
                  "type": "number"
                },
                "skills": {
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "user",
                "cursus",
                "level",
                "skills",
                "cursus_id",
                "has_coalition",
                "begin_at",
                "end_at",
                "grade"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "GetCursusUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "PatchCursusUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "PutCursusUsersById",
        "summary": "update"
      }
    },
    "/cursus_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 126
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetCursusUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/dashes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "",
        "operationId": "GetDashes",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dash",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-11-25T13:43:35.000Z",
                "campus_id": 2,
                "cursus_id": 1,
                "description": "Le sujet dbon courage!",
                "end_at": "2017-11-25T14:03:35.000Z",
                "id": 2,
                "name": "Dashname",
                "nbr_xp": "20",
                "skill_id": 3,
                "slug": "dashname"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "campus_id": {
                  "type": "number"
                },
                "cursus_id": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "nbr_xp": {
                  "type": "string"
                },
                "skill_id": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "slug",
                "cursus_id",
                "nbr_xp",
                "begin_at",
                "end_at",
                "id",
                "campus_id",
                "skill_id",
                "description"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "",
        "operationId": "PostDashes",
        "summary": "create"
      }
    },
    "/dashes/:dash_id/dashes_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "dash_id": 1,
                  "final_mark": null,
                  "id": 1,
                  "repo_url": null,
                  "repo_uuid": null,
                  "user_id": 6
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "dash_id": {
                    "type": "number"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "null"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "repo_uuid",
                  "final_mark",
                  "id",
                  "dash_id",
                  "user_id",
                  "repo_url"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "GetDashesFromDashIdDashesUsers",
        "summary": "index"
      }
    },
    "/dashes/:dash_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "large",
                          "medium",
                          "small",
                          "micro"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetDashesFromDashIdUsers",
        "summary": "index"
      }
    },
    "/dashes/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "",
        "operationId": "DeleteDashesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "",
        "operationId": "GetDashesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "",
        "operationId": "PatchDashesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "",
        "operationId": "PutDashesById",
        "summary": "update"
      }
    },
    "/dashes/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Dashes"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetDashesGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/dashes_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "dash_id": 1,
                  "final_mark": null,
                  "id": 1,
                  "repo_url": null,
                  "repo_uuid": null,
                  "user_id": 6
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "dash_id": {
                    "type": "number"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "null"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "final_mark",
                  "id",
                  "dash_id",
                  "user_id",
                  "repo_url",
                  "repo_uuid"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "GetDashesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dashes_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "dash_id": 1,
                "final_mark": null,
                "id": 2,
                "repo_url": null,
                "repo_uuid": null,
                "user_id": 1
              }
            },
            "schema": {
              "properties": {
                "dash_id": {
                  "type": "number"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "repo_url": {
                  "type": "null"
                },
                "repo_uuid": {
                  "type": "null"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "dash_id",
                "user_id",
                "repo_url",
                "repo_uuid",
                "final_mark"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "PostDashesUsers",
        "summary": "create"
      }
    },
    "/dashes_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "DeleteDashesUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "dash_id": 1,
                "final_mark": null,
                "id": 1,
                "repo_url": null,
                "repo_uuid": null,
                "user_id": 6
              }
            },
            "schema": {
              "properties": {
                "dash_id": {
                  "type": "number"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "repo_url": {
                  "type": "null"
                },
                "repo_uuid": {
                  "type": "null"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "dash_id",
                "user_id",
                "repo_url",
                "repo_uuid",
                "final_mark"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "GetDashesUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dashes_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "PatchDashesUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dashes_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "",
        "operationId": "PutDashesUsersById",
        "summary": "update"
      }
    },
    "/dashes_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 1
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Dashes users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetDashesUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/endpoints": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus": [],
                  "created_at": "2016-05-06T08:45:06.194Z",
                  "description": "The endpoint for the evil machine",
                  "id": 1,
                  "updated_at": "2016-05-06T08:45:06.194Z",
                  "url": "http://evil.machine.ai"
                },
                {
                  "campus": [],
                  "created_at": "2016-05-06T08:45:06.194Z",
                  "description": "Another endpoint",
                  "id": 2,
                  "updated_at": "2016-05-06T08:45:06.194Z",
                  "url": "http://burning.endpoint.io"
                },
                {
                  "campus": [
                    {
                      "id": 9,
                      "language": {
                        "created_at": "2015-04-14T16:07:38.122Z",
                        "id": 2,
                        "identifier": "en",
                        "name": "English",
                        "updated_at": "2015-04-14T16:07:38.122Z"
                      },
                      "name": "Tokyo",
                      "time_zone": "Asia/Tokyo",
                      "users_count": 1
                    }
                  ],
                  "created_at": "2016-05-06T08:45:06.194Z",
                  "description": "The tokyo endpoint",
                  "id": 3,
                  "updated_at": "2016-05-06T08:49:40.574Z",
                  "url": "https://intra.42.jp"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "updated_at",
                  "campus",
                  "id",
                  "url",
                  "description",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "",
        "operationId": "GetEndpoints",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "endpoint",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "",
        "operationId": "PostEndpoints",
        "summary": "create"
      }
    },
    "/endpoints/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "",
        "operationId": "DeleteEndpointsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "campus": [
                  {
                    "id": 9,
                    "language": {
                      "created_at": "2015-04-14T16:07:38.122Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2015-04-14T16:07:38.122Z"
                    },
                    "name": "Tokyo",
                    "time_zone": "Asia/Tokyo",
                    "users_count": 1
                  }
                ],
                "created_at": "2016-05-06T08:45:06.194Z",
                "description": "The tokyo endpoint",
                "id": 3,
                "updated_at": "2016-05-06T08:49:40.574Z",
                "url": "https://intra.42.jp"
              }
            },
            "schema": {
              "properties": {
                "campus": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at",
                          "id"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "time_zone",
                      "language",
                      "users_count"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "url",
                "description",
                "created_at",
                "updated_at",
                "campus"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "",
        "operationId": "GetEndpointsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpoint",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "",
        "operationId": "PatchEndpointsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "endpoint",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Endpoints"
        ],
        "description": "",
        "operationId": "PutEndpointsById",
        "summary": "update"
      }
    },
    "/evaluations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Evaluations"
        ],
        "description": "",
        "operationId": "GetEvaluations",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "evaluation",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Evaluations"
        ],
        "description": "",
        "operationId": "PostEvaluations",
        "summary": "create"
      }
    },
    "/evaluations/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Evaluations"
        ],
        "description": "",
        "operationId": "DeleteEvaluationsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Evaluations"
        ],
        "description": "",
        "operationId": "GetEvaluationsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "evaluation",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Evaluations"
        ],
        "description": "",
        "operationId": "PatchEvaluationsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "evaluation",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Evaluations"
        ],
        "description": "",
        "operationId": "PutEvaluationsById",
        "summary": "update"
      }
    },
    "/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-25T13:42:10.090Z",
                  "campus_ids": [
                    3
                  ],
                  "created_at": "2017-11-22T13:42:10.110Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et selfies beard williamsburg quisquam ramps. Molestiae craft beer consectetur asperiores dolor. Small batch placeat banjo vhs mollitia aut vero. Distinctio est readymade offal tote bag +1.",
                  "end_at": "2017-11-25T15:42:10.090Z",
                  "id": 4,
                  "kind": "rush",
                  "location": "West Wisozk",
                  "max_people": 112,
                  "name": "Oklahoma whales",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 15,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 36,
                      "name": "AI",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 37,
                      "name": "Entrepreneurship",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.127Z",
                  "waitlist": null
                },
                {
                  "begin_at": "2017-11-24T13:42:10.014Z",
                  "campus_ids": [
                    6
                  ],
                  "created_at": "2017-11-22T13:42:10.037Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                  "end_at": "2017-11-24T15:42:10.015Z",
                  "id": 3,
                  "kind": "other",
                  "location": "Southern Bauch",
                  "max_people": 39,
                  "name": "Wyoming cattle",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 2,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 10,
                      "name": "Meeting",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 15,
                      "name": "Association",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.082Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 392,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 3,
                    "waitlistable_type": "Event"
                  }
                },
                {
                  "begin_at": "2017-11-23T13:42:09.970Z",
                  "campus_ids": [
                    4
                  ],
                  "created_at": "2017-11-22T13:42:09.991Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et tousled small batch street voluptas +1. Nisi small batch shoreditch est bicycle rights similique sed. Pbr&b sit exercitationem etsy ea. Cumque et forage reprehenderit officia quas. Chartreuse ad tacos commodi.",
                  "end_at": "2017-11-23T15:42:09.970Z",
                  "id": 2,
                  "kind": "association",
                  "location": "South Wisconsin Academy",
                  "max_people": 94,
                  "name": "Nevada sheep",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 10,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 12,
                      "name": "Security",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 42,
                      "name": "Recrutement",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.009Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 33,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 2,
                    "waitlistable_type": "Event"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "prohibition_of_cancellation": {
                    "type": "number"
                  },
                  "themes": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created_at",
                        "id",
                        "name",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "waitlist": {
                    "type": "null"
                  }
                },
                "required": [
                  "waitlist",
                  "cursus_ids",
                  "themes",
                  "location",
                  "kind",
                  "max_people",
                  "nbr_subscribers",
                  "end_at",
                  "campus_ids",
                  "prohibition_of_cancellation",
                  "name",
                  "created_at",
                  "description",
                  "begin_at",
                  "updated_at",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "GetEvents",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-11-25T13:43:10.000Z",
                "campus_ids": [
                  1
                ],
                "created_at": "2017-11-22T13:43:37.609Z",
                "cursus_ids": [
                  1
                ],
                "description": "A fucking great event",
                "end_at": "2017-11-29T13:43:10.000Z",
                "id": 5,
                "kind": "workshop",
                "location": "Holodeck",
                "max_people": 120,
                "name": "Rainbowcat festival 🌈",
                "nbr_subscribers": 0,
                "prohibition_of_cancellation": 10,
                "themes": [
                  {
                    "created_at": "2018-10-21T16:35:38.782Z",
                    "id": 11,
                    "name": "Security",
                    "updated_at": "2018-10-21T16:35:38.782Z"
                  },
                  {
                    "created_at": "2019-01-14T15:06:56.968Z",
                    "id": 42,
                    "name": "My awesome new theme",
                    "updated_at": "2019-01-14T15:06:56.968Z"
                  },
                  {
                    "created_at": "2019-01-14T15:06:56.968Z",
                    "id": 43,
                    "name": "My awesome new theme 2",
                    "updated_at": "2019-01-14T15:06:56.968Z"
                  }
                ],
                "updated_at": "2017-11-22T13:43:37.633Z",
                "waitlist": {
                  "created_at": "2019-01-14T16:20:43.412Z",
                  "id": 389,
                  "updated_at": "2019-01-14T16:20:43.412Z",
                  "waitlistable_id": 5,
                  "waitlistable_type": "Event"
                }
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "campus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "max_people": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "nbr_subscribers": {
                  "type": "number"
                },
                "prohibition_of_cancellation": {
                  "type": "number"
                },
                "themes": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "id",
                      "name",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                },
                "waitlist": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "waitlistable_id": {
                      "type": "number"
                    },
                    "waitlistable_type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "waitlistable_id",
                    "waitlistable_type"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "description",
                "themes",
                "created_at",
                "name",
                "waitlist",
                "prohibition_of_cancellation",
                "id",
                "max_people",
                "begin_at",
                "cursus_ids",
                "updated_at",
                "kind",
                "nbr_subscribers",
                "end_at",
                "campus_ids",
                "location"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "PostEvents",
        "summary": "create"
      }
    },
    "/events/:event_id/events_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "GetEventsFromEventIdEventsUsers",
        "summary": "index"
      }
    },
    "/events/:event_id/feedbacks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "GetEventsFromEventIdFeedbacks",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PostEventsFromEventIdFeedbacks",
        "summary": "create"
      }
    },
    "/events/:event_id/feedbacks/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "DeleteEventsFromEventIdFeedbacksById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "GetEventsFromEventIdFeedbacksById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PatchEventsFromEventIdFeedbacksById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PutEventsFromEventIdFeedbacksById",
        "summary": "update"
      }
    },
    "/events/:event_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "micro",
                          "large",
                          "medium",
                          "small"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetEventsFromEventIdUsers",
        "summary": "index"
      }
    },
    "/events/:event_id/waitlist": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "exam_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2018-09-19T15:15:33.124Z",
                "id": 32,
                "waitlistable_id": 2530,
                "waitlistable_type": "Event"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "waitlistable_id": {
                  "type": "number"
                },
                "waitlistable_type": {
                  "type": "string"
                }
              },
              "required": [
                "created_at",
                "id",
                "waitlistable_id",
                "waitlistable_type"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Waitlists"
        ],
        "description": "",
        "operationId": "GetEventsFromEventIdWaitlist",
        "summary": "show"
      }
    },
    "/events/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "DeleteEventsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-11-24T13:42:10.014Z",
                "campus_ids": [
                  6
                ],
                "created_at": "2017-11-22T13:42:10.037Z",
                "cursus_ids": [
                  1
                ],
                "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                "end_at": "2017-11-24T15:42:10.015Z",
                "id": 3,
                "kind": "other",
                "location": "Southern Bauch",
                "max_people": 39,
                "name": "Wyoming cattle",
                "nbr_subscribers": 0,
                "prohibition_of_cancellation": 10,
                "themes": [
                  {
                    "created_at": "2019-01-09T17:18:54.779Z",
                    "id": 36,
                    "name": "AI",
                    "updated_at": "2019-01-09T17:18:54.779Z"
                  },
                  {
                    "created_at": "2019-01-09T17:18:54.819Z",
                    "id": 37,
                    "name": "Entrepreneurship",
                    "updated_at": "2019-01-09T17:18:54.819Z"
                  }
                ],
                "updated_at": "2017-11-22T13:42:10.082Z",
                "waitlist": {
                  "created_at": "2019-01-14T16:25:05.941Z",
                  "id": 391,
                  "updated_at": "2019-01-14T16:25:05.941Z",
                  "waitlistable_id": 3,
                  "waitlistable_type": "Event"
                }
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "campus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "max_people": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "nbr_subscribers": {
                  "type": "number"
                },
                "prohibition_of_cancellation": {
                  "type": "number"
                },
                "themes": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "updated_at",
                      "created_at",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                },
                "waitlist": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "waitlistable_id": {
                      "type": "number"
                    },
                    "waitlistable_type": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "id",
                    "updated_at",
                    "waitlistable_id",
                    "waitlistable_type"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "name",
                "nbr_subscribers",
                "begin_at",
                "end_at",
                "cursus_ids",
                "themes",
                "waitlist",
                "id",
                "location",
                "max_people",
                "campus_ids",
                "created_at",
                "description",
                "kind",
                "prohibition_of_cancellation",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Return the event specified by the <code>:id</code> parameter. Invisibles event need at least the <code>basic_staff</code> role.",
        "operationId": "GetEventsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "PatchEventsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "PutEventsById",
        "summary": "update"
      }
    },
    "/events/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 4
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetEventsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/events_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "GetEventsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "events_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "PostEventsUsers",
        "summary": "create"
      }
    },
    "/events_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "DeleteEventsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "GetEventsUsersById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "events_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "PatchEventsUsersById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "events_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "PutEventsUsersById",
        "summary": "update"
      }
    },
    "/exams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "campus": {
                    "active": true,
                    "address": "96, boulevard Bessières",
                    "city": "Paris",
                    "country": "France",
                    "default_hidden_phone": false,
                    "email_extension": "42.fr",
                    "facebook": "https://facebook.com/42born2code",
                    "id": 1,
                    "language": {
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "twitter": "https://twitter.com/42born2code",
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "website": "http://www.42.fr/",
                    "zip": "75017"
                  },
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "cursus": [
                    {
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "id": 4,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "id": 6,
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "id": 13,
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "location": "e1, e2, e3",
                  "max_people": 780,
                  "name": "Piscine C - Exam 01",
                  "nbr_subscribers": 594,
                  "projects": [
                    {
                      "attachments": [],
                      "children": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "exam": true,
                      "git_id": null,
                      "id": 405,
                      "name": "Exam01",
                      "parent": null,
                      "repository": null,
                      "slug": "piscine-c-exam01",
                      "updated_at": "2021-09-01T08:35:01.074Z"
                    }
                  ],
                  "updated_at": "2018-08-27T16:56:15.032Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "default_hidden_phone": {
                        "type": "boolean"
                      },
                      "email_extension": {
                        "type": "string"
                      },
                      "facebook": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      },
                      "website": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "time_zone",
                      "users_count",
                      "active",
                      "email_extension",
                      "id",
                      "vogsphere_id",
                      "website",
                      "facebook",
                      "default_hidden_phone",
                      "language",
                      "country",
                      "city",
                      "twitter",
                      "name",
                      "address",
                      "zip"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ip_range": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "projects": {
                    "items": {
                      "properties": {
                        "attachments": {
                          "type": "array"
                        },
                        "children": {
                          "type": "array"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "exam": {
                          "type": "boolean"
                        },
                        "git_id": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "null"
                        },
                        "repository": {
                          "type": "null"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "children",
                        "attachments",
                        "created_at",
                        "updated_at",
                        "exam",
                        "git_id",
                        "id",
                        "name",
                        "slug",
                        "parent",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "begin_at",
                  "location",
                  "nbr_subscribers",
                  "campus",
                  "projects",
                  "ip_range",
                  "end_at",
                  "max_people",
                  "name",
                  "created_at",
                  "updated_at",
                  "cursus"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "List all visibles exams. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetExams",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exam",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2015-07-17T15:00:00.000Z",
                "campus": {
                  "active": true,
                  "address": "96, boulevard Bessières",
                  "city": "Paris",
                  "country": "France",
                  "default_hidden_phone": false,
                  "email_extension": "42.fr",
                  "facebook": "https://facebook.com/42born2code",
                  "id": 1,
                  "language": {
                    "created_at": "2014-11-02T16:43:38.466Z",
                    "id": 1,
                    "identifier": "fr",
                    "name": "Français",
                    "updated_at": "2021-10-08T16:28:44.040Z"
                  },
                  "name": "Paris",
                  "time_zone": "Europe/Paris",
                  "twitter": "https://twitter.com/42born2code",
                  "users_count": 22319,
                  "vogsphere_id": 1,
                  "website": "http://www.42.fr/",
                  "zip": "75017"
                },
                "created_at": "2015-07-15T13:05:26.006Z",
                "cursus": [
                  {
                    "created_at": "2015-05-01T17:46:08.433Z",
                    "id": 4,
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  },
                  {
                    "created_at": "2015-09-21T12:36:09.128Z",
                    "id": 6,
                    "name": "Piscine C décloisonnée",
                    "slug": "piscine-c-decloisonnee"
                  },
                  {
                    "created_at": "2017-02-01T14:25:42.300Z",
                    "id": 13,
                    "name": "42 Labs",
                    "slug": "42-labs"
                  }
                ],
                "end_at": "2015-07-17T19:00:00.000Z",
                "id": 42,
                "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                "location": "e1,e2,e3",
                "max_people": 780,
                "name": "Piscine C - Exam 01",
                "nbr_subscribers": 594,
                "projects": [
                  {
                    "attachments": [],
                    "children": [],
                    "created_at": "2015-06-29T13:14:31.702Z",
                    "exam": true,
                    "git_id": null,
                    "id": 405,
                    "name": "Exam01",
                    "parent": null,
                    "repository": null,
                    "slug": "piscine-c-exam01",
                    "updated_at": "2021-09-01T08:35:01.074Z"
                  }
                ],
                "updated_at": "2018-08-27T16:56:15.032Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "campus": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "default_hidden_phone": {
                      "type": "boolean"
                    },
                    "email_extension": {
                      "type": "string"
                    },
                    "facebook": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "language": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "identifier",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "time_zone": {
                      "type": "string"
                    },
                    "twitter": {
                      "type": "string"
                    },
                    "users_count": {
                      "type": "number"
                    },
                    "vogsphere_id": {
                      "type": "number"
                    },
                    "website": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "website",
                    "facebook",
                    "twitter",
                    "active",
                    "id",
                    "users_count",
                    "country",
                    "zip",
                    "default_hidden_phone",
                    "vogsphere_id",
                    "email_extension",
                    "time_zone",
                    "language",
                    "address",
                    "city",
                    "name"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "ip_range": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "max_people": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "nbr_subscribers": {
                  "type": "number"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "attachments": {
                        "type": "array"
                      },
                      "children": {
                        "type": "array"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "exam": {
                        "type": "boolean"
                      },
                      "git_id": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent": {
                        "type": "null"
                      },
                      "repository": {
                        "type": "null"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "updated_at",
                      "git_id",
                      "slug",
                      "name",
                      "parent",
                      "children",
                      "attachments",
                      "created_at",
                      "exam",
                      "repository",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "nbr_subscribers",
                "created_at",
                "updated_at",
                "campus",
                "begin_at",
                "max_people",
                "end_at",
                "location",
                "name",
                "cursus",
                "projects",
                "id",
                "ip_range"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "",
        "operationId": "PostExams",
        "summary": "create"
      }
    },
    "/exams/:exam_id/exams_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exam_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Exams users"
        ],
        "description": "List all visibles exams_users",
        "operationId": "GetExamsFromExamIdExamsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exam_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Exams users"
        ],
        "description": "",
        "operationId": "PostExamsFromExamIdExamsUsers",
        "summary": "create"
      }
    },
    "/exams/:exam_id/exams_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "exam_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Exams users"
        ],
        "description": "",
        "operationId": "DeleteExamsFromExamIdExamsUsersById",
        "summary": "destroy"
      }
    },
    "/exams/:exam_id/waitlist": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "exam_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2018-09-19T15:15:33.124Z",
                "id": 32,
                "waitlistable_id": 2530,
                "waitlistable_type": "Event"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "waitlistable_id": {
                  "type": "number"
                },
                "waitlistable_type": {
                  "type": "string"
                }
              },
              "required": [
                "created_at",
                "id",
                "waitlistable_id",
                "waitlistable_type"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Waitlists"
        ],
        "description": "",
        "operationId": "GetExamsFromExamIdWaitlist",
        "summary": "show"
      }
    },
    "/exams/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "",
        "operationId": "DeleteExamsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2015-07-17T15:00:00.000Z",
                "campus": {
                  "active": true,
                  "address": "96, boulevard Bessières",
                  "city": "Paris",
                  "country": "France",
                  "default_hidden_phone": false,
                  "email_extension": "42.fr",
                  "facebook": "https://facebook.com/42born2code",
                  "id": 1,
                  "language": {
                    "created_at": "2014-11-02T16:43:38.466Z",
                    "id": 1,
                    "identifier": "fr",
                    "name": "Français",
                    "updated_at": "2021-10-08T16:28:44.040Z"
                  },
                  "name": "Paris",
                  "time_zone": "Europe/Paris",
                  "twitter": "https://twitter.com/42born2code",
                  "users_count": 22319,
                  "vogsphere_id": 1,
                  "website": "http://www.42.fr/",
                  "zip": "75017"
                },
                "created_at": "2015-07-15T13:05:26.006Z",
                "cursus": [
                  {
                    "created_at": "2015-05-01T17:46:08.433Z",
                    "id": 4,
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  },
                  {
                    "created_at": "2015-09-21T12:36:09.128Z",
                    "id": 6,
                    "name": "Piscine C décloisonnée",
                    "slug": "piscine-c-decloisonnee"
                  },
                  {
                    "created_at": "2017-02-01T14:25:42.300Z",
                    "id": 13,
                    "name": "42 Labs",
                    "slug": "42-labs"
                  }
                ],
                "end_at": "2015-07-17T19:00:00.000Z",
                "id": 42,
                "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                "location": "e1,e2,e3",
                "max_people": 780,
                "name": "Piscine C - Exam 01",
                "nbr_subscribers": 594,
                "projects": [
                  {
                    "attachments": [],
                    "children": [],
                    "created_at": "2015-06-29T13:14:31.702Z",
                    "exam": true,
                    "git_id": null,
                    "id": 405,
                    "name": "Exam01",
                    "parent": null,
                    "repository": null,
                    "slug": "piscine-c-exam01",
                    "updated_at": "2021-09-01T08:35:01.074Z"
                  }
                ],
                "updated_at": "2018-08-27T16:56:15.032Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "campus": {
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "address": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "default_hidden_phone": {
                      "type": "boolean"
                    },
                    "email_extension": {
                      "type": "string"
                    },
                    "facebook": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "language": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "identifier",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "time_zone": {
                      "type": "string"
                    },
                    "twitter": {
                      "type": "string"
                    },
                    "users_count": {
                      "type": "number"
                    },
                    "vogsphere_id": {
                      "type": "number"
                    },
                    "website": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "time_zone",
                    "active",
                    "website",
                    "facebook",
                    "twitter",
                    "language",
                    "country",
                    "email_extension",
                    "default_hidden_phone",
                    "users_count",
                    "vogsphere_id",
                    "address",
                    "zip",
                    "city"
                  ],
                  "type": "object"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "ip_range": {
                  "type": "string"
                },
                "location": {
                  "type": "string"
                },
                "max_people": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "nbr_subscribers": {
                  "type": "number"
                },
                "projects": {
                  "items": {
                    "properties": {
                      "attachments": {
                        "type": "array"
                      },
                      "children": {
                        "type": "array"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "exam": {
                        "type": "boolean"
                      },
                      "git_id": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent": {
                        "type": "null"
                      },
                      "repository": {
                        "type": "null"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "children",
                      "attachments",
                      "exam",
                      "repository",
                      "name",
                      "slug",
                      "created_at",
                      "updated_at",
                      "git_id",
                      "id",
                      "parent"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "location",
                "max_people",
                "updated_at",
                "name",
                "created_at",
                "campus",
                "cursus",
                "ip_range",
                "begin_at",
                "end_at",
                "nbr_subscribers",
                "projects"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "Return the exam specified by the <code>:id</code> parameter. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetExamsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "exam",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "",
        "operationId": "PatchExamsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "exam",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "",
        "operationId": "PutExamsById",
        "summary": "update"
      }
    },
    "/exams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 2
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetExamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/experiences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetExperiences",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "experience",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "PostExperiences",
        "summary": "create"
      }
    },
    "/experiences/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "DeleteExperiencesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetExperiencesById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "experience",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "PatchExperiencesById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "experience",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "PutExperiencesById",
        "summary": "update"
      }
    },
    "/expertises": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:01.825Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/magic/expertises_users",
                  "id": 10,
                  "kind": "languages",
                  "name": "Magic",
                  "slug": "magic",
                  "url": "https://api.intra.42.fr/v2/expertises/magic"
                },
                {
                  "created_at": "2017-11-22T13:41:01.819Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/elixir/expertises_users",
                  "id": 9,
                  "kind": "languages",
                  "name": "Elixir",
                  "slug": "elixir",
                  "url": "https://api.intra.42.fr/v2/expertises/elixir"
                },
                {
                  "created_at": "2017-11-22T13:41:01.814Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/ios/expertises_users",
                  "id": 8,
                  "kind": "frameworks",
                  "name": "iOS",
                  "slug": "ios",
                  "url": "https://api.intra.42.fr/v2/expertises/ios"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "expertises_users_url": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "slug",
                  "url",
                  "kind",
                  "created_at",
                  "expertises_users_url"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Expertises"
        ],
        "description": "",
        "operationId": "GetExpertises",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:39.345Z",
                "expertises_users_url": "https://api.intra.42.fr/v2/expertises/west-virginia-frogs/expertises_users",
                "id": 11,
                "kind": "databases",
                "name": "West Virginia frogs",
                "slug": "west-virginia-frogs",
                "url": "https://api.intra.42.fr/v2/expertises/west-virginia-frogs"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "expertises_users_url": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "expertises_users_url",
                "id",
                "name",
                "slug",
                "url",
                "kind",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Expertises"
        ],
        "description": "",
        "operationId": "PostExpertises",
        "summary": "create"
      }
    },
    "/expertises/:expertise_id/expertises_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.630Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.803Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/angularjs/expertises_users",
                    "id": 6,
                    "kind": "frameworks",
                    "name": "AngularJS",
                    "slug": "angularjs",
                    "url": "https://api.intra.42.fr/v2/expertises/angularjs"
                  },
                  "expertise_id": 6,
                  "id": 126,
                  "interested": false,
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  },
                  "user_id": 126,
                  "value": 2
                },
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.614Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.791Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/c/expertises_users",
                    "id": 4,
                    "kind": "languages",
                    "name": "C",
                    "slug": "c",
                    "url": "https://api.intra.42.fr/v2/expertises/c"
                  },
                  "expertise_id": 4,
                  "id": 125,
                  "interested": false,
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  },
                  "user_id": 125,
                  "value": 2
                },
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.598Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.773Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/net/expertises_users",
                    "id": 1,
                    "kind": "languages",
                    "name": ".NET",
                    "slug": "net",
                    "url": "https://api.intra.42.fr/v2/expertises/net"
                  },
                  "expertise_id": 1,
                  "id": 124,
                  "interested": false,
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  },
                  "user_id": 124,
                  "value": 2
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "contact_me": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "expertise": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "expertises_users_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "expertises_users_url",
                      "id",
                      "name",
                      "slug",
                      "url",
                      "kind",
                      "created_at"
                    ],
                    "type": "object"
                  },
                  "expertise_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "interested": {
                    "type": "boolean"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "value",
                  "contact_me",
                  "created_at",
                  "user_id",
                  "id",
                  "interested",
                  "user",
                  "expertise_id",
                  "expertise"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "GetExpertisesFromExpertiseIdExpertisesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertises_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "contact_me": false,
                "created_at": "2017-11-22T13:43:39.996Z",
                "expertise": {
                  "created_at": "2017-11-22T13:41:01.779Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/jquery/expertises_users",
                  "id": 2,
                  "kind": "other",
                  "name": "jQuery",
                  "slug": "jquery",
                  "url": "https://api.intra.42.fr/v2/expertises/jquery"
                },
                "expertise_id": 2,
                "id": 127,
                "interested": false,
                "user": {
                  "id": 106,
                  "login": "anaskywa",
                  "url": "https://api.intra.42.fr/v2/users/anaskywa"
                },
                "user_id": 106,
                "value": 1
              }
            },
            "schema": {
              "properties": {
                "contact_me": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string"
                },
                "expertise": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "expertises_users_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "expertises_users_url",
                    "id",
                    "name",
                    "slug",
                    "url",
                    "kind"
                  ],
                  "type": "object"
                },
                "expertise_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "interested": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "contact_me",
                "created_at",
                "user_id",
                "user",
                "expertise_id",
                "interested",
                "value",
                "expertise"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "PostExpertisesFromExpertiseIdExpertisesUsers",
        "summary": "create"
      }
    },
    "/expertises/:expertise_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "versions",
                      "link"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetExpertisesFromExpertiseIdUsers",
        "summary": "index"
      }
    },
    "/expertises/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Expertises"
        ],
        "description": "",
        "operationId": "DeleteExpertisesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:01.785Z",
                "expertises_users_url": "https://api.intra.42.fr/v2/expertises/android/expertises_users",
                "id": 3,
                "kind": "frameworks",
                "name": "Android",
                "slug": "android",
                "url": "https://api.intra.42.fr/v2/expertises/android"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "expertises_users_url": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "slug",
                "url",
                "kind",
                "created_at",
                "expertises_users_url"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Expertises"
        ],
        "description": "",
        "operationId": "GetExpertisesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Expertises"
        ],
        "description": "",
        "operationId": "PatchExpertisesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Expertises"
        ],
        "description": "",
        "operationId": "PutExpertisesById",
        "summary": "update"
      }
    },
    "/expertises_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.630Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.803Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/angularjs/expertises_users",
                    "id": 6,
                    "kind": "frameworks",
                    "name": "AngularJS",
                    "slug": "angularjs",
                    "url": "https://api.intra.42.fr/v2/expertises/angularjs"
                  },
                  "expertise_id": 6,
                  "id": 126,
                  "interested": false,
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  },
                  "user_id": 126,
                  "value": 2
                },
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.614Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.791Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/c/expertises_users",
                    "id": 4,
                    "kind": "languages",
                    "name": "C",
                    "slug": "c",
                    "url": "https://api.intra.42.fr/v2/expertises/c"
                  },
                  "expertise_id": 4,
                  "id": 125,
                  "interested": false,
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  },
                  "user_id": 125,
                  "value": 2
                },
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.598Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.773Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/net/expertises_users",
                    "id": 1,
                    "kind": "languages",
                    "name": ".NET",
                    "slug": "net",
                    "url": "https://api.intra.42.fr/v2/expertises/net"
                  },
                  "expertise_id": 1,
                  "id": 124,
                  "interested": false,
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  },
                  "user_id": 124,
                  "value": 2
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "contact_me": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "expertise": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "expertises_users_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "created_at",
                      "expertises_users_url",
                      "id",
                      "name",
                      "slug",
                      "url"
                    ],
                    "type": "object"
                  },
                  "expertise_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "interested": {
                    "type": "boolean"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "user_id",
                  "id",
                  "interested",
                  "value",
                  "contact_me",
                  "created_at",
                  "expertise_id",
                  "expertise",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "GetExpertisesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertises_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "contact_me": false,
                "created_at": "2017-11-22T13:43:39.996Z",
                "expertise": {
                  "created_at": "2017-11-22T13:41:01.779Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/jquery/expertises_users",
                  "id": 2,
                  "kind": "other",
                  "name": "jQuery",
                  "slug": "jquery",
                  "url": "https://api.intra.42.fr/v2/expertises/jquery"
                },
                "expertise_id": 2,
                "id": 127,
                "interested": false,
                "user": {
                  "id": 106,
                  "login": "anaskywa",
                  "url": "https://api.intra.42.fr/v2/users/anaskywa"
                },
                "user_id": 106,
                "value": 1
              }
            },
            "schema": {
              "properties": {
                "contact_me": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string"
                },
                "expertise": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "expertises_users_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "expertises_users_url",
                    "id",
                    "name",
                    "slug",
                    "url",
                    "kind"
                  ],
                  "type": "object"
                },
                "expertise_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "interested": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "user",
                "id",
                "contact_me",
                "created_at",
                "expertise",
                "expertise_id",
                "interested",
                "value"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "PostExpertisesUsers",
        "summary": "create"
      }
    },
    "/expertises_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "DeleteExpertisesUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "contact_me": false,
                "created_at": "2017-11-22T13:41:22.512Z",
                "expertise": {
                  "created_at": "2017-11-22T13:41:01.803Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/angularjs/expertises_users",
                  "id": 6,
                  "kind": "frameworks",
                  "name": "AngularJS",
                  "slug": "angularjs",
                  "url": "https://api.intra.42.fr/v2/expertises/angularjs"
                },
                "expertise_id": 6,
                "id": 3,
                "interested": false,
                "user": {
                  "id": 3,
                  "login": "gargamel",
                  "url": "https://api.intra.42.fr/v2/users/gargamel"
                },
                "user_id": 3,
                "value": 2
              }
            },
            "schema": {
              "properties": {
                "contact_me": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string"
                },
                "expertise": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "expertises_users_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "expertises_users_url",
                    "id",
                    "name",
                    "slug",
                    "url",
                    "kind",
                    "created_at"
                  ],
                  "type": "object"
                },
                "expertise_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "interested": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "interested",
                "value",
                "created_at",
                "user_id",
                "expertise",
                "user",
                "id",
                "expertise_id",
                "contact_me"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "GetExpertisesUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertises_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "PatchExpertisesUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertises_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "PutExpertisesUsersById",
        "summary": "update"
      }
    },
    "/feedbacks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "GetFeedbacks",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PostFeedbacks",
        "summary": "create"
      }
    },
    "/feedbacks/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "DeleteFeedbacksById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "GetFeedbacksById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PatchFeedbacksById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PutFeedbacksById",
        "summary": "update"
      }
    },
    "/flags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Flags"
        ],
        "description": "",
        "operationId": "GetFlags",
        "summary": "index"
      }
    },
    "/flash_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Flash users"
        ],
        "description": "",
        "operationId": "GetFlashUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flash_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "end_at": "2018-07-01T18:40:57.031Z",
                "flash_id": 1,
                "id": 166513,
                "seen": false,
                "user": {
                  "id": 19265,
                  "login": "jgengo",
                  "url": "http://localhost:13000/v2/users/jgengo"
                }
              }
            },
            "schema": {
              "properties": {
                "end_at": {
                  "type": "string"
                },
                "flash_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "seen": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "seen",
                "end_at",
                "user",
                "id",
                "flash_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Flash users"
        ],
        "description": "",
        "operationId": "PostFlashUsers",
        "summary": "create"
      }
    },
    "/flash_users/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "end_at": "2016-06-13T18:40:57.031Z",
                "flash_id": 2,
                "id": 28,
                "seen": true,
                "user": {
                  "id": 10292,
                  "login": "mguilbau",
                  "url": "http://localhost:13000/v2/users/mguilbau"
                }
              }
            },
            "schema": {
              "properties": {
                "end_at": {
                  "type": "string"
                },
                "flash_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "seen": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "flash_id",
                "seen",
                "end_at",
                "user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Flash users"
        ],
        "description": "",
        "operationId": "GetFlashUsersById",
        "summary": "show"
      }
    },
    "/flashes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Flashes"
        ],
        "description": "",
        "operationId": "GetFlashes",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "content": "One of our member is leaving us in few days...",
                "duration": 4200,
                "id": 53,
                "identifier": "the_end",
                "title": "Almost the end!"
              }
            },
            "schema": {
              "properties": {
                "content": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "identifier": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "identifier",
                "duration",
                "id",
                "title",
                "content"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Flashes"
        ],
        "description": "",
        "operationId": "PostFlashes",
        "summary": "create"
      }
    },
    "/flashes/:flash_id/flash_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Flash users"
        ],
        "description": "",
        "operationId": "GetFlashesFromFlashIdFlashUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "flash_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "end_at": "2018-07-01T18:40:57.031Z",
                "flash_id": 1,
                "id": 166513,
                "seen": false,
                "user": {
                  "id": 19265,
                  "login": "jgengo",
                  "url": "http://localhost:13000/v2/users/jgengo"
                }
              }
            },
            "schema": {
              "properties": {
                "end_at": {
                  "type": "string"
                },
                "flash_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "seen": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "user",
                "id",
                "flash_id",
                "seen",
                "end_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Flash users"
        ],
        "description": "",
        "operationId": "PostFlashesFromFlashIdFlashUsers",
        "summary": "create"
      }
    },
    "/flashes/:flash_id/flash_users/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "flash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "end_at": "2016-06-13T18:40:57.031Z",
                "flash_id": 2,
                "id": 28,
                "seen": true,
                "user": {
                  "id": 10292,
                  "login": "mguilbau",
                  "url": "http://localhost:13000/v2/users/mguilbau"
                }
              }
            },
            "schema": {
              "properties": {
                "end_at": {
                  "type": "string"
                },
                "flash_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "seen": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "flash_id",
                "seen",
                "end_at",
                "user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Flash users"
        ],
        "description": "",
        "operationId": "GetFlashesFromFlashIdFlashUsersById",
        "summary": "show"
      }
    },
    "/flashes/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "content": "<div class='achievement-modal'>\n<img class='achievement-modal--image' src='https://admin.intrav2.42.fr/uploads/achievement/image/83/PED010.svg' alt='achievement logo'/>\n        <div class='achievement-modal--content'>\n          <h3 class='achievement-modal--title'>Serial examiner</h3>\n          <p class='achievement-modal--desc'>Effectuer 10 soutenances en une journée en tant que correcteur.</div>\n</div>\n",
                "duration": 4320,
                "id": 27,
                "identifier": "achievement-83",
                "selector": "",
                "title": "Achievement unlocked !"
              }
            },
            "schema": {
              "properties": {
                "content": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "identifier": {
                  "type": "string"
                },
                "selector": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              },
              "required": [
                "content",
                "identifier",
                "duration",
                "selector",
                "id",
                "title"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Flashes"
        ],
        "description": "",
        "operationId": "GetFlashesById",
        "summary": "show"
      }
    },
    "/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "gnomes"
                },
                {
                  "id": 2,
                  "name": "vampires"
                },
                {
                  "id": 3,
                  "name": "sons"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "GetGroups",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "group",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 5,
                "name": "tigers"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "PostGroups",
        "summary": "create"
      }
    },
    "/groups/:group_id/groups_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:42:12.972Z",
                  "group_id": 1,
                  "id": 1,
                  "updated_at": "2017-11-22T13:42:12.972Z",
                  "user_id": 33
                },
                {
                  "created_at": "2017-11-22T13:42:12.992Z",
                  "group_id": 2,
                  "id": 2,
                  "updated_at": "2017-11-22T13:42:12.992Z",
                  "user_id": 119
                },
                {
                  "created_at": "2017-11-22T13:42:13.010Z",
                  "group_id": 3,
                  "id": 3,
                  "updated_at": "2017-11-22T13:42:13.010Z",
                  "user_id": 44
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "group_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "updated_at",
                  "id",
                  "user_id",
                  "group_id",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "GetGroupsFromGroupIdGroupsUsers",
        "summary": "index"
      }
    },
    "/groups/:group_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "micro",
                          "large",
                          "medium",
                          "small"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "updated_at",
                  "alumni?",
                  "first_name",
                  "location",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetGroupsFromGroupIdUsers",
        "summary": "index"
      }
    },
    "/groups/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "DeleteGroupsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 1,
                "name": "gnomes"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "GetGroupsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "PatchGroupsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "PutGroupsById",
        "summary": "update"
      }
    },
    "/groups_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:42:12.972Z",
                  "group_id": 1,
                  "id": 1,
                  "updated_at": "2017-11-22T13:42:12.972Z",
                  "user_id": 33
                },
                {
                  "created_at": "2017-11-22T13:42:12.992Z",
                  "group_id": 2,
                  "id": 2,
                  "updated_at": "2017-11-22T13:42:12.992Z",
                  "user_id": 119
                },
                {
                  "created_at": "2017-11-22T13:42:13.010Z",
                  "group_id": 3,
                  "id": 3,
                  "updated_at": "2017-11-22T13:42:13.010Z",
                  "user_id": 44
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "group_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "updated_at",
                  "id",
                  "user_id",
                  "group_id",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "GetGroupsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "groups_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:41.210Z",
                "group_id": 3,
                "id": 5,
                "updated_at": "2017-11-22T13:43:41.210Z",
                "user_id": 9
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "group_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "updated_at",
                "id",
                "user_id",
                "group_id",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "PostGroupsUsers",
        "summary": "create"
      }
    },
    "/groups_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "DeleteGroupsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:42:13.028Z",
                "group_id": 4,
                "id": 4,
                "updated_at": "2017-11-22T13:42:13.028Z",
                "user_id": 101
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "group_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "group_id",
                "created_at",
                "updated_at",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "GetGroupsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "groups_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "PatchGroupsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "groups_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "PutGroupsUsersById",
        "summary": "update"
      }
    },
    "/internships": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "GetInternships",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "PostInternships",
        "summary": "create"
      }
    },
    "/internships/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "DeleteInternshipsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "administration_id": 1,
                "breach_at": null,
                "company_address": "96 Boulevard Bessières",
                "company_boss_user_email": "boss@42.fr",
                "company_boss_user_first_name": "FirstName",
                "company_boss_user_last_name": "LastName",
                "company_boss_user_phone": "0123456789",
                "company_city": "Paris",
                "company_country": "France",
                "company_name": "Association 42",
                "company_postal": "75017",
                "company_siret": "0",
                "company_user_email": "gargamel@42.fr",
                "company_user_first_name": "Quentin",
                "company_user_last_name": "Bollache",
                "company_user_phone": "0123456789",
                "company_user_post": "Responsable technique et pedagogique",
                "contract_type": "stage",
                "convention": {
                  "convention": {
                    "url": "/uploads/internship/convention/jgengo-9543c17018c04a7f99fd01bf62a478/2350/jgengo.zip"
                  }
                },
                "currency": "eur",
                "days": "[\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\"]",
                "duration": 6,
                "end_at": "2018-01-30T23:00:00.000Z",
                "id": 2350,
                "internship_address": "96 Boulevard Bessières",
                "internship_city": "Paris",
                "internship_country": "France",
                "internship_postal": "75017",
                "language_id": 1,
                "movement": null,
                "nb_days": 5,
                "nb_hours": 35,
                "offer_id": null,
                "salary": 50000,
                "start_at": "2017-07-31T22:00:00.000Z",
                "state": "uploaded",
                "subject": "Développement de tous les sites web reliés à 42",
                "user": {
                  "id": 19265,
                  "login": "jgengo",
                  "url": "http://localhost:13000/v2/users/jgengo"
                },
                "user_address": "5 rue de la paix",
                "user_city": "Paris",
                "user_country": "France",
                "user_postal": "75001"
              }
            },
            "schema": {
              "properties": {
                "administration_id": {
                  "type": "number"
                },
                "breach_at": {
                  "type": "null"
                },
                "company_address": {
                  "type": "string"
                },
                "company_boss_user_email": {
                  "type": "string"
                },
                "company_boss_user_first_name": {
                  "type": "string"
                },
                "company_boss_user_last_name": {
                  "type": "string"
                },
                "company_boss_user_phone": {
                  "type": "string"
                },
                "company_city": {
                  "type": "string"
                },
                "company_country": {
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "company_postal": {
                  "type": "string"
                },
                "company_siret": {
                  "type": "string"
                },
                "company_user_email": {
                  "type": "string"
                },
                "company_user_first_name": {
                  "type": "string"
                },
                "company_user_last_name": {
                  "type": "string"
                },
                "company_user_phone": {
                  "type": "string"
                },
                "company_user_post": {
                  "type": "string"
                },
                "contract_type": {
                  "type": "string"
                },
                "convention": {
                  "properties": {
                    "convention": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "convention"
                  ],
                  "type": "object"
                },
                "currency": {
                  "type": "string"
                },
                "days": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "internship_address": {
                  "type": "string"
                },
                "internship_city": {
                  "type": "string"
                },
                "internship_country": {
                  "type": "string"
                },
                "internship_postal": {
                  "type": "string"
                },
                "language_id": {
                  "type": "number"
                },
                "movement": {
                  "type": "null"
                },
                "nb_days": {
                  "type": "number"
                },
                "nb_hours": {
                  "type": "number"
                },
                "offer_id": {
                  "type": "null"
                },
                "salary": {
                  "type": "number"
                },
                "start_at": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_address": {
                  "type": "string"
                },
                "user_city": {
                  "type": "string"
                },
                "user_country": {
                  "type": "string"
                },
                "user_postal": {
                  "type": "string"
                }
              },
              "required": [
                "company_user_first_name",
                "company_country",
                "company_siret",
                "nb_hours",
                "movement",
                "salary",
                "language_id",
                "days",
                "currency",
                "convention",
                "user_address",
                "internship_address",
                "end_at",
                "breach_at",
                "company_address",
                "company_city",
                "duration",
                "user",
                "offer_id",
                "internship_city",
                "company_boss_user_email",
                "company_boss_user_phone",
                "subject",
                "start_at",
                "administration_id",
                "company_boss_user_first_name",
                "company_user_email",
                "user_city",
                "company_user_post",
                "company_user_phone",
                "company_postal",
                "internship_postal",
                "nb_days",
                "user_country",
                "company_boss_user_last_name",
                "user_postal",
                "company_name",
                "company_user_last_name",
                "internship_country",
                "contract_type",
                "id",
                "state"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "GetInternshipsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "PatchInternshipsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "PutInternshipsById",
        "summary": "update"
      }
    },
    "/internships/:internship_id/amendments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amendment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Amendments"
        ],
        "description": "",
        "operationId": "GetInternshipsFromInternshipIdAmendments",
        "summary": "index"
      }
    },
    "/issues/:issue_id/tags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issue_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 11,
                  "kind": "archived",
                  "name": "Archived",
                  "subnotions": [],
                  "users": []
                },
                {
                  "id": 7,
                  "kind": "general",
                  "name": "Bocal",
                  "subnotions": [
                    {
                      "created_at": "2017-11-22T13:41:24.154Z",
                      "id": 1,
                      "name": "Emacs",
                      "notepad": null,
                      "slug": "piscine-c-text-editors-emacs"
                    }
                  ],
                  "users": []
                },
                {
                  "id": 4,
                  "kind": "project",
                  "name": "Colle 08",
                  "subnotions": [],
                  "users": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  },
                  "users": {
                    "type": "array"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "kind",
                  "users",
                  "subnotions"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetIssuesFromIssueIdTags",
        "summary": "index"
      }
    },
    "/languages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 3,
                  "identifier": "ro",
                  "name": "Romanian"
                },
                {
                  "id": 2,
                  "identifier": "en",
                  "name": "English"
                },
                {
                  "id": 1,
                  "identifier": "fr",
                  "name": "Français"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "identifier"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "",
        "operationId": "GetLanguages",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "",
        "operationId": "PostLanguages",
        "summary": "create"
      }
    },
    "/languages/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "",
        "operationId": "DeleteLanguagesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 3,
                "identifier": "ro",
                "name": "Romanian"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "identifier": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "identifier",
                "id",
                "name"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "",
        "operationId": "GetLanguagesById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "",
        "operationId": "PatchLanguagesById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "language",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "",
        "operationId": "PutLanguagesById",
        "summary": "update"
      }
    },
    "/languages/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Languages"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetLanguagesGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/languages_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:20.168Z",
                  "id": 126,
                  "language_id": 3,
                  "position": 1,
                  "user_id": 126
                },
                {
                  "created_at": "2017-11-22T13:41:20.041Z",
                  "id": 125,
                  "language_id": 2,
                  "position": 1,
                  "user_id": 125
                },
                {
                  "created_at": "2017-11-22T13:41:19.915Z",
                  "id": 124,
                  "language_id": 3,
                  "position": 1,
                  "user_id": 124
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "language_id": {
                    "type": "number"
                  },
                  "position": {
                    "type": "number"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "position",
                  "created_at",
                  "id",
                  "language_id",
                  "user_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "GetLanguagesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "languages_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:42.355Z",
                "id": 127,
                "language_id": 3,
                "position": 1,
                "user_id": 7
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language_id": {
                  "type": "number"
                },
                "position": {
                  "type": "number"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "position",
                "created_at",
                "id",
                "language_id",
                "user_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "PostLanguagesUsers",
        "summary": "create"
      }
    },
    "/languages_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "DeleteLanguagesUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:12.367Z",
                "id": 70,
                "language_id": 2,
                "position": 1,
                "user_id": 70
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language_id": {
                  "type": "number"
                },
                "position": {
                  "type": "number"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "created_at",
                "id",
                "language_id",
                "user_id",
                "position"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "GetLanguagesUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "languages_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "PatchLanguagesUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "languages_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "PutLanguagesUsersById",
        "summary": "update"
      }
    },
    "/languages_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 126
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetLanguagesUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/levels": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Levels"
        ],
        "description": "",
        "operationId": "GetLevels",
        "summary": "index"
      }
    },
    "/locations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "host": "ariel",
                  "begin_at": "2017-11-22T13:42:10.248Z",
                  "campus_id": 1,
                  "end_at": "2017-11-22T13:42:10.248Z",
                  "floor": null,
                  "id": 6,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 120,
                    "login": "obkenobi",
                    "url": "https://api.intra.42.fr/v2/users/obkenobi"
                  }
                },
                {
                  "host": "puck",
                  "begin_at": "2017-11-22T13:42:09.406Z",
                  "campus_id": 1,
                  "end_at": "2017-11-22T13:42:09.406Z",
                  "floor": null,
                  "id": 1,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 73,
                    "login": "padmamid",
                    "url": "https://api.intra.42.fr/v2/users/padmamid"
                  }
                },
                {
                  "host": "ganymede",
                  "begin_at": "2017-11-21T13:42:10.737Z",
                  "campus_id": 1,
                  "end_at": "2017-11-21T14:42:10.737Z",
                  "floor": null,
                  "id": 7,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 53,
                    "login": "dvader",
                    "url": "https://api.intra.42.fr/v2/users/dvader"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_id": {
                    "type": "number"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "floor": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "post": {
                    "type": "null"
                  },
                  "primary": {
                    "type": "boolean"
                  },
                  "row": {
                    "type": "null"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "end_at",
                  "post",
                  "host",
                  "begin_at",
                  "primary",
                  "floor",
                  "row",
                  "campus_id",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "GetLocations",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "host": "burrito",
                "begin_at": "2017-11-22T11:43:10.000Z",
                "campus_id": 2,
                "end_at": null,
                "floor": null,
                "id": 16,
                "post": null,
                "primary": true,
                "row": null,
                "user": {
                  "id": 56,
                  "login": "pdameron",
                  "url": "https://api.intra.42.fr/v2/users/pdameron"
                }
              }
            },
            "schema": {
              "properties": {
                "host": {
                  "type": "string"
                },
                "begin_at": {
                  "type": "string"
                },
                "campus_id": {
                  "type": "number"
                },
                "end_at": {
                  "type": "null"
                },
                "floor": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "post": {
                  "type": "null"
                },
                "primary": {
                  "type": "boolean"
                },
                "row": {
                  "type": "null"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "row",
                "host",
                "begin_at",
                "end_at",
                "floor",
                "post",
                "campus_id",
                "user",
                "id",
                "primary"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "PostLocations",
        "summary": "create"
      }
    },
    "/locations/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "DeleteLocationsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "host": "oberon",
                "begin_at": "2017-11-19T13:42:09.511Z",
                "campus_id": 1,
                "end_at": "2017-11-19T16:42:09.511Z",
                "floor": null,
                "id": 4,
                "post": null,
                "primary": true,
                "row": null,
                "user": {
                  "id": 59,
                  "login": "davader",
                  "url": "https://api.intra.42.fr/v2/users/davader"
                }
              }
            },
            "schema": {
              "properties": {
                "host": {
                  "type": "string"
                },
                "begin_at": {
                  "type": "string"
                },
                "campus_id": {
                  "type": "number"
                },
                "end_at": {
                  "type": "string"
                },
                "floor": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "post": {
                  "type": "null"
                },
                "primary": {
                  "type": "boolean"
                },
                "row": {
                  "type": "null"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "begin_at",
                "primary",
                "floor",
                "post",
                "user",
                "id",
                "row",
                "host",
                "campus_id",
                "end_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "GetLocationsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "PatchLocationsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "PutLocationsById",
        "summary": "update"
      }
    },
    "/locations/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-13": 1,
                "2017-11-14": 1,
                "2017-11-15": 1,
                "2017-11-16": 1,
                "2017-11-17": 1,
                "2017-11-18": 2,
                "2017-11-19": 2,
                "2017-11-20": 2,
                "2017-11-21": 2,
                "2017-11-22": 2
              }
            },
            "schema": {
              "properties": {
                "2017-11-13": {
                  "type": "number"
                },
                "2017-11-14": {
                  "type": "number"
                },
                "2017-11-15": {
                  "type": "number"
                },
                "2017-11-16": {
                  "type": "number"
                },
                "2017-11-17": {
                  "type": "number"
                },
                "2017-11-18": {
                  "type": "number"
                },
                "2017-11-19": {
                  "type": "number"
                },
                "2017-11-20": {
                  "type": "number"
                },
                "2017-11-21": {
                  "type": "number"
                },
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22",
                "2017-11-14",
                "2017-11-15",
                "2017-11-18",
                "2017-11-19",
                "2017-11-20",
                "2017-11-13",
                "2017-11-16",
                "2017-11-17",
                "2017-11-21"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "Count all occurences on a particular field (default on <code>begin_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetLocationsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/mailings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "attachment": null,
                  "attachments": null,
                  "bcc": [],
                  "cc": [],
                  "content": "Hi,\nYou will review thifranc's code in 15 minutes!",
                  "created_at": "2016-04-28T12:30:10.116Z",
                  "from": "noreply@42.fr",
                  "html_content": "<p>Hi,\nYou will review thifranc&#39;s code in 15 minutes!",
                  "id": 1725549,
                  "identifier": "imminent_correction_correctors",
                  "meta": {
                    "date": "2016-04-28T14:45:00+02:00",
                    "id": 268129,
                    "name": "Defense for ft_ls",
                    "other_user": "thifranc",
                    "user": "Romain Baran"
                  },
                  "subject": "Evaluation imminent",
                  "subtitle": null,
                  "title": "Evaluation imminent",
                  "to": [
                    "rbaran@student.42.fr"
                  ],
                  "updated_at": "2016-04-28T12:30:10.116Z"
                },
                {
                  "attachment": null,
                  "attachments": null,
                  "bcc": [],
                  "cc": [],
                  "content": "Hi,\nYour code will be reviewed by pnoyelle in 15 minutes!",
                  "created_at": "2016-04-28T12:30:11.252Z",
                  "from": "noreply@42.fr",
                  "html_content": "<p>Hi,\nYour code will be reviewed by pnoyelle in 15 minutes!",
                  "id": 1725550,
                  "identifier": "imminent_correction_correcteds",
                  "meta": {
                    "date": "2016-04-28T14:45:00+02:00",
                    "id": 268140,
                    "name": "Defense for ft_traceroute",
                    "other_user": "pnoyelle",
                    "user": "Jean Alexandre Bert"
                  },
                  "subject": "Evaluation imminent",
                  "subtitle": null,
                  "title": "Evaluation imminent",
                  "to": [
                    "jbert@student.42.fr"
                  ],
                  "updated_at": "2016-04-28T12:30:11.252Z"
                },
                {
                  "attachment": null,
                  "attachments": null,
                  "bcc": [],
                  "cc": [],
                  "content": "Hi,\nYou will review jbert's code in 15 minutes!",
                  "created_at": "2016-04-28T12:30:11.292Z",
                  "from": "noreply@42.fr",
                  "html_content": "<p>Hi,\nYou will review jbert&#39;s code in 15 minutes!",
                  "id": 1725551,
                  "identifier": "imminent_correction_correctors",
                  "meta": {
                    "date": "2016-04-28T14:45:00+02:00",
                    "id": 268140,
                    "name": "Defense for ft_traceroute",
                    "other_user": "jbert",
                    "user": "Pierre Noyelle"
                  },
                  "subject": "Evaluation imminent",
                  "subtitle": null,
                  "title": "Evaluation imminent",
                  "to": [
                    "pnoyelle@student.42.fr"
                  ],
                  "updated_at": "2016-04-28T12:30:11.292Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "attachment": {
                    "type": "null"
                  },
                  "attachments": {
                    "type": "null"
                  },
                  "bcc": {
                    "type": "array"
                  },
                  "cc": {
                    "type": "array"
                  },
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "from": {
                    "type": "string"
                  },
                  "html_content": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "meta": {
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "other_user": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "other_user",
                      "id",
                      "date",
                      "name",
                      "user"
                    ],
                    "type": "object"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "null"
                  },
                  "title": {
                    "type": "string"
                  },
                  "to": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "title",
                  "meta",
                  "html_content",
                  "created_at",
                  "identifier",
                  "from",
                  "to",
                  "content",
                  "attachments",
                  "updated_at",
                  "subtitle",
                  "cc",
                  "bcc",
                  "subject",
                  "attachment"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "",
        "operationId": "GetMailings",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mailing",
            "type": "string"
          },
          {
            "in": "query",
            "name": "at",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "attachment": null,
                "attachments": null,
                "bcc": null,
                "cc": null,
                "content": "Hi andre,\nYou just *won* the mego jackpot !\nCheck [this link](http://spam.prizepool-game-lottery.xxx/winner.php)",
                "created_at": "2017-11-22T13:43:44.207Z",
                "from": "superwin-ultimate-@prizepool-game-lottery.sexy",
                "html_content": "<p>Hi andre,\nYou just <em>won</em> the mego jackpot !\nCheck <a href=\"http://spam.prizepool-game-lottery.xxx/winner.php\">this link</a>",
                "id": 11,
                "identifier": "an_unique_identifier",
                "meta": {},
                "subject": "You are the super online contest winner !!!",
                "subtitle": "And it's kinda awesome",
                "title": "You won the big jackpot",
                "to": [
                  "andre@42.fr"
                ],
                "updated_at": "2017-11-22T13:43:44.207Z"
              }
            },
            "schema": {
              "properties": {
                "attachment": {
                  "type": "null"
                },
                "attachments": {
                  "type": "null"
                },
                "bcc": {
                  "type": "null"
                },
                "cc": {
                  "type": "null"
                },
                "content": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "from": {
                  "type": "string"
                },
                "html_content": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "identifier": {
                  "type": "string"
                },
                "meta": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "subject": {
                  "type": "string"
                },
                "subtitle": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "to": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "identifier",
                "title",
                "to",
                "subtitle",
                "attachment",
                "from",
                "html_content",
                "updated_at",
                "meta",
                "cc",
                "bcc",
                "content",
                "id",
                "subject",
                "created_at",
                "attachments"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "Create a new, authenticated mail, from 42.",
        "operationId": "PostMailings",
        "summary": "create"
      }
    },
    "/mailings/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "",
        "operationId": "DeleteMailingsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "attachment": null,
                "attachments": null,
                "bcc": [],
                "cc": [],
                "content": "Banh mi mixtape distillery gentrify post-ironic pour-over. Deep v fixie hella selfies irony direct trade paleo migas. Mumblecore kitsch hella selvage bicycle rights green juice. Keffiyeh salvia wolf vhs umami 90's. Cred lumbersexual chia hoodie pbr&b.\nSlow-carb sustainable cliche. Squid ennui kombucha yuccie biodiesel. Vhs cliche deep v mustache jean shorts trust fund fashion axe. Keffiyeh squid pbr&b fixie selvage.\nRoof blue bottle stumptown godard drinking yuccie. Craft beer artisan bushwick kale chips selvage. Kickstarter ethical asymmetrical franzen brooklyn etsy.",
                "created_at": "2017-11-22T13:42:11.054Z",
                "from": "kenton@schmeler.co",
                "html_content": "<p>Banh mi mixtape distillery gentrify post-ironic pour-over. Deep v fixie hella selfies irony direct trade paleo migas. Mumblecore kitsch hella selvage bicycle rights green juice. Keffiyeh salvia wolf vhs umami 90&#39;s. Cred lumbersexual chia hoodie pbr&amp;b.\nSlow-carb sustainable cliche. Squid ennui kombucha yuccie biodiesel. Vhs cliche deep v mustache jean shorts trust fund fashion axe. Keffiyeh squid pbr&amp;b fixie selvage.\nRoof blue bottle stumptown godard drinking yuccie. Craft beer artisan bushwick kale chips selvage. Kickstarter ethical asymmetrical franzen brooklyn etsy.",
                "id": 7,
                "identifier": "spec-mail",
                "meta": {},
                "subject": "Judge me by my size, do you?",
                "subtitle": null,
                "title": "I'll copy the wireless AGP pixel, that should interface the RSS application!",
                "to": [
                  "bohutt2@student.42.fr"
                ],
                "updated_at": "2017-11-22T13:42:11.054Z"
              }
            },
            "schema": {
              "properties": {
                "attachment": {
                  "type": "null"
                },
                "attachments": {
                  "type": "null"
                },
                "bcc": {
                  "type": "array"
                },
                "cc": {
                  "type": "array"
                },
                "content": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "from": {
                  "type": "string"
                },
                "html_content": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "identifier": {
                  "type": "string"
                },
                "meta": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "subject": {
                  "type": "string"
                },
                "subtitle": {
                  "type": "null"
                },
                "title": {
                  "type": "string"
                },
                "to": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "attachment",
                "from",
                "to",
                "attachments",
                "updated_at",
                "bcc",
                "html_content",
                "subtitle",
                "id",
                "meta",
                "title",
                "cc",
                "content",
                "subject",
                "created_at",
                "identifier"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "",
        "operationId": "GetMailingsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "mailing",
            "type": "string"
          },
          {
            "in": "query",
            "name": "at",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "",
        "operationId": "PatchMailingsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "mailing",
            "type": "string"
          },
          {
            "in": "query",
            "name": "at",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "",
        "operationId": "PutMailingsById",
        "summary": "update"
      }
    },
    "/me": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "achievements": [],
                "active?": true,
                "alumni?": false,
                "anonymize_date": "2021-02-20T00:00:00.000+03:00",
                "campus": [
                  {
                    "id": 1,
                    "language": {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    },
                    "name": "Cluj",
                    "time_zone": "Europe/Bucharest",
                    "users_count": 28,
                    "vogsphere_id": 1
                  }
                ],
                "campus_users": [
                  {
                    "campus_id": 1,
                    "id": 2,
                    "is_primary": true,
                    "user_id": 2
                  }
                ],
                "correction_point": 4,
                "cursus_users": [
                  {
                    "begin_at": "2017-05-14T21:37:50.172Z",
                    "cursus": {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    "cursus_id": 1,
                    "end_at": null,
                    "grade": null,
                    "has_coalition": true,
                    "id": 2,
                    "level": 0,
                    "skills": [],
                    "user": {
                      "id": 2,
                      "login": "andre",
                      "url": "https://api.intra.42.fr/v2/users/andre"
                    }
                  }
                ],
                "data_erasure_date": null,
                "displayname": "André Aubin",
                "email": "andre@42.fr",
                "expertises_users": [
                  {
                    "contact_me": false,
                    "created_at": "2017-11-22T13:41:22.504Z",
                    "expertise_id": 3,
                    "id": 2,
                    "interested": false,
                    "user_id": 2,
                    "value": 2
                  }
                ],
                "first_name": "André",
                "groups": [],
                "id": 2,
                "image": {
                  "link": "https://cdn.intra.42.fr/users/1234567890/andre.jpg",
                  "versions": {
                    "large": "https://cdn.intra.42.fr/users/1234567890/large_andre.jpg",
                    "medium": "https://cdn.intra.42.fr/users/1234567890/medium_andre.jpg",
                    "micro": "https://cdn.intra.42.fr/users/1234567890/micro_andre.jpgg",
                    "small": "https://cdn.intra.42.fr/users/1234567890/small_andre.jpg"
                  }
                },
                "kind": "admin",
                "languages_users": [
                  {
                    "created_at": "2017-11-22T13:41:03.638Z",
                    "id": 2,
                    "language_id": 3,
                    "position": 1,
                    "user_id": 2
                  }
                ],
                "last_name": "Aubin",
                "location": null,
                "login": "andre",
                "partnerships": [],
                "patroned": [
                  {
                    "created_at": "2017-11-22T13:42:11.565Z",
                    "godfather_id": 15,
                    "id": 4,
                    "ongoing": true,
                    "updated_at": "2017-11-22T13:42:11.572Z",
                    "user_id": 2
                  }
                ],
                "patroning": [],
                "phone": null,
                "pool_month": "july",
                "pool_year": "2016",
                "projects_users": [],
                "roles": [],
                "staff?": false,
                "titles": [],
                "titles_users": [],
                "url": "https://api.intra.42.fr/v2/users/andre",
                "usual_first_name": "Juliette",
                "usual_full_name": "Juliette Aubin",
                "wallet": 0
              }
            },
            "schema": {
              "properties": {
                "achievements": {
                  "type": "array"
                },
                "active?": {
                  "type": "boolean"
                },
                "alumni?": {
                  "type": "boolean"
                },
                "anonymize_date": {
                  "type": "string"
                },
                "campus": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "created_at",
                          "updated_at",
                          "id",
                          "name",
                          "identifier"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "language",
                      "users_count",
                      "vogsphere_id",
                      "id",
                      "name",
                      "time_zone"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "campus_users": {
                  "items": {
                    "properties": {
                      "campus_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_primary": {
                        "type": "boolean"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "user_id",
                      "campus_id",
                      "is_primary",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "correction_point": {
                  "type": "number"
                },
                "cursus_users": {
                  "items": {
                    "properties": {
                      "begin_at": {
                        "type": "string"
                      },
                      "cursus": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "name",
                          "slug"
                        ],
                        "type": "object"
                      },
                      "cursus_id": {
                        "type": "number"
                      },
                      "end_at": {
                        "type": "null"
                      },
                      "grade": {
                        "type": "null"
                      },
                      "has_coalition": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "level": {
                        "type": "number"
                      },
                      "skills": {
                        "type": "array"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "login": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "url",
                          "id",
                          "login"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "cursus",
                      "id",
                      "end_at",
                      "grade",
                      "has_coalition",
                      "user",
                      "begin_at",
                      "level",
                      "skills",
                      "cursus_id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "data_erasure_date": {
                  "type": "null"
                },
                "displayname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "expertises_users": {
                  "items": {
                    "properties": {
                      "contact_me": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "expertise_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "interested": {
                        "type": "boolean"
                      },
                      "user_id": {
                        "type": "number"
                      },
                      "value": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "interested",
                      "value",
                      "contact_me",
                      "created_at",
                      "user_id",
                      "id",
                      "expertise_id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "groups": {
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "properties": {
                    "link": {
                      "type": "string"
                    },
                    "versions": {
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "micro": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "large",
                        "medium",
                        "small",
                        "micro"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "link",
                    "versions"
                  ],
                  "type": "object"
                },
                "kind": {
                  "type": "string"
                },
                "languages_users": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language_id": {
                        "type": "number"
                      },
                      "position": {
                        "type": "number"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "created_at",
                      "id",
                      "language_id",
                      "user_id",
                      "position"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "last_name": {
                  "type": "string"
                },
                "location": {
                  "type": "null"
                },
                "login": {
                  "type": "string"
                },
                "partnerships": {
                  "type": "array"
                },
                "patroned": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "godfather_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "ongoing": {
                        "type": "boolean"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "user_id",
                      "godfather_id",
                      "ongoing",
                      "created_at",
                      "updated_at",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "patroning": {
                  "type": "array"
                },
                "phone": {
                  "type": "null"
                },
                "pool_month": {
                  "type": "string"
                },
                "pool_year": {
                  "type": "string"
                },
                "projects_users": {
                  "type": "array"
                },
                "roles": {
                  "type": "array"
                },
                "staff?": {
                  "type": "boolean"
                },
                "titles": {
                  "type": "array"
                },
                "titles_users": {
                  "type": "array"
                },
                "url": {
                  "type": "string"
                },
                "usual_first_name": {
                  "type": "string"
                },
                "usual_full_name": {
                  "type": "string"
                },
                "wallet": {
                  "type": "number"
                }
              },
              "required": [
                "email",
                "first_name",
                "image",
                "pool_year",
                "anonymize_date",
                "cursus_users",
                "expertises_users",
                "campus",
                "id",
                "login",
                "displayname",
                "staff?",
                "location",
                "roles",
                "patroned",
                "usual_full_name",
                "phone",
                "wallet",
                "titles_users",
                "patroning",
                "campus_users",
                "last_name",
                "kind",
                "correction_point",
                "pool_month",
                "projects_users",
                "titles",
                "usual_first_name",
                "data_erasure_date",
                "partnerships",
                "groups",
                "languages_users",
                "url",
                "alumni?",
                "active?",
                "achievements"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Will respond with the current resource owner, wich is the token owner (the actually logged-in user).",
        "operationId": "GetMe",
        "summary": "me"
      }
    },
    "/me/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 12,
                      "kind": "general",
                      "name": "Libft"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:25.963Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The first project of 42 !",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 1,
                  "name": "Libft",
                  "objectives": [
                    "initiation"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.149Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 1,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 1,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 1,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:42:09.376Z",
                      "uploads": [
                        {
                          "id": 1,
                          "name": "Idaho kangaroos"
                        }
                      ]
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.305Z",
                      "id": 2,
                      "name": "Company experience"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "libft",
                  "updated_at": "2017-11-22T13:41:26.243Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 13,
                      "kind": "general",
                      "name": "Ordinary Wizarding Levels"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:26.356Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                  "difficulty": 5000,
                  "exam": true,
                  "id": 2,
                  "name": "Ordinary Wizarding Levels",
                  "objectives": [
                    "Wizarding"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.375Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 2,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 2,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 2,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:28.347Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    }
                  ],
                  "slug": "ordinary-wizarding-levels",
                  "updated_at": "2017-11-22T13:41:26.441Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 15,
                      "kind": "general",
                      "name": "Hogwarts Quidditch Cup"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [
                    {
                      "id": 5,
                      "name": "Quarter Finals",
                      "slug": "hogwarts-quidditch-cup-quarter-finals",
                      "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:26.765Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 4,
                  "name": "Hogwarts Quidditch Cup",
                  "objectives": [
                    "Quidditch"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.786Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": null,
                      "id": 4,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 4,
                      "scales": [],
                      "solo": false,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:26.786Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "hogwarts-quidditch-cup",
                  "updated_at": "2017-11-22T13:41:26.975Z",
                  "videos": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "attachments": {
                    "type": "array"
                  },
                  "campus": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "language": {
                          "properties": {
                            "created_at": {
                              "type": "string"
                            },
                            "id": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "created_at",
                            "updated_at",
                            "id",
                            "name",
                            "identifier"
                          ],
                          "type": "object"
                        },
                        "name": {
                          "type": "string"
                        },
                        "time_zone": {
                          "type": "string"
                        },
                        "users_count": {
                          "type": "number"
                        },
                        "vogsphere_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "language",
                        "users_count",
                        "vogsphere_id",
                        "id",
                        "name",
                        "time_zone"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "children": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "slug",
                        "id",
                        "created_at",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "difficulty": {
                    "type": "number"
                  },
                  "exam": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "objectives": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "project_sessions": {
                    "items": {
                      "properties": {
                        "begin_at": {
                          "type": "null"
                        },
                        "campus_id": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "cursus_id": {
                          "type": "null"
                        },
                        "difficulty": {
                          "type": "number"
                        },
                        "duration_days": {
                          "type": "null"
                        },
                        "end_at": {
                          "type": "null"
                        },
                        "estimate_time": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "is_subscriptable": {
                          "type": "boolean"
                        },
                        "max_people": {
                          "type": "null"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "scales": {
                          "items": {
                            "properties": {
                              "correction_number": {
                                "type": "number"
                              },
                              "id": {
                                "type": "number"
                              },
                              "is_primary": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "correction_number",
                              "is_primary"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "solo": {
                          "type": "boolean"
                        },
                        "team_behaviour": {
                          "type": "string"
                        },
                        "terminating_after": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "uploads": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "end_at",
                        "created_at",
                        "max_people",
                        "difficulty",
                        "terminating_after",
                        "project_id",
                        "solo",
                        "duration_days",
                        "is_subscriptable",
                        "uploads",
                        "updated_at",
                        "scales",
                        "team_behaviour",
                        "id",
                        "begin_at",
                        "estimate_time",
                        "campus_id",
                        "cursus_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "skills": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "created_at",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "videos": {
                    "type": "array"
                  }
                },
                "required": [
                  "attachments",
                  "updated_at",
                  "tags",
                  "project_sessions",
                  "parent",
                  "children",
                  "difficulty",
                  "objectives",
                  "created_at",
                  "id",
                  "slug",
                  "cursus",
                  "campus",
                  "skills",
                  "videos",
                  "description",
                  "exam",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "GetMeProjects",
        "summary": "index"
      }
    },
    "/me/scale_teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetMeScaleTeams",
        "summary": "index"
      }
    },
    "/me/scale_teams/as_corrected": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetMeScaleTeamsAsCorrected",
        "summary": "index"
      }
    },
    "/me/scale_teams/as_corrector": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetMeScaleTeamsAsCorrector",
        "summary": "index"
      }
    },
    "/me/slots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 27,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 76,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 110,
                  "scale_team": null,
                  "user": "invisible"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "scale_team": {
                    "type": "null"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "scale_team",
                  "user",
                  "id",
                  "begin_at",
                  "end_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nThis call obviously lists all slots.An user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.\n<ul>\n<li><strong>if there is a resource owner</strong> (an user uses this api trough your app, with the <a href=\"http://api.intra.42.fr/apidoc/guides/web_application_flow\">web application flow</a>):\n<ul>\n<li>The <code>/me/slots</code> endpoint will list all the slots set by the current user.</li>\n\n<li>The <code>/projects/:project_id/slots</code> endpoint will list all the available slots for the given project. Theses slots can be booked by the current user in order to make a defense.</li>\n</ul>\n</li>\n\n<li><strong>if there isn’t a resource owner</strong>\n<ul>\n<li>The <code>/projects/:project_id/slots</code> endpoint lists all the slots scheduled (with a <code>scale_team</code>) on this project, including all the past ones.</li>\n\n<li>The <code>/users/:user_id/slots</code> endpoint lists all the slots for the requested user, as evaluator and as evaluated. This call is restricted.</li>\n</ul>\n</li>\n</ul>\nIn all the cases, the <code>/slots</code> endpoint lists all the slots, booked or not, including all the past ones.",
        "operationId": "GetMeSlots",
        "summary": "index"
      }
    },
    "/me/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "login",
                        "url",
                        "leader",
                        "occurrence",
                        "validated",
                        "projects_user_id",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "status",
                  "users",
                  "repo_uuid",
                  "closed_at",
                  "id",
                  "url",
                  "updated_at",
                  "terminating_at",
                  "locked_at",
                  "created_at",
                  "locked?",
                  "repo_url",
                  "scale_teams",
                  "name",
                  "final_mark",
                  "project_id",
                  "validated?",
                  "closed?",
                  "project_session_id",
                  "teams_uploads"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetMeTeams",
        "summary": "index"
      }
    },
    "/notes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "content": "Mathieu n'aime pas se faire appeler princesse ♥️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "id": 1,
                  "subject": "Chevelure abondante",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  }
                },
                {
                  "content": "Est secretement amoureux de flav️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "id": 2,
                  "subject": "Amour caché",
                  "user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  }
                },
                {
                  "content": "Est secretement amoureux de andré",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "id": 3,
                  "subject": "Amour caché (2)",
                  "user": {
                    "id": 10935,
                    "login": "fguilloc",
                    "url": "https://api.intra.42.fr/v2/users/fguilloc"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "from_user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id"
                    ],
                    "type": "object"
                  },
                  "id": {
                    "type": "number"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "subject",
                  "content",
                  "created_at",
                  "user",
                  "id",
                  "from_user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "GetNotes",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "note",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "content": "gentrify roof beard keffiyeh squid franzen cold-pressed farm-to-table retro fingerstache hoodie health",
                "created_at": "2017-11-22T13:43:47.322Z",
                "from_user": {
                  "id": 74,
                  "login": "andre",
                  "url": "https://api.intra.42.fr/v2/users/andre"
                },
                "id": 11,
                "subject": "quinoa",
                "user": {
                  "id": 10,
                  "login": "ssebulba",
                  "url": "https://api.intra.42.fr/v2/users/ssebulba"
                }
              }
            },
            "schema": {
              "properties": {
                "content": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "from_user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "subject": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "from_user",
                "subject",
                "content",
                "created_at",
                "user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "PostNotes",
        "summary": "create"
      }
    },
    "/notes/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "DeleteNotesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "content": "You know, that little droid is going to cause me a lot of trouble.",
                "created_at": "2017-11-22T13:42:11.225Z",
                "from_user": {
                  "id": 74,
                  "login": "andre",
                  "url": "https://api.intra.42.fr/v2/users/andre"
                },
                "id": 9,
                "subject": "We need to back up the haptic XSS feed!",
                "user": {
                  "id": 116,
                  "login": "mwindu2",
                  "url": "https://api.intra.42.fr/v2/users/mwindu2"
                }
              }
            },
            "schema": {
              "properties": {
                "content": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "from_user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "subject": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "from_user",
                "subject",
                "content",
                "created_at",
                "user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "GetNotesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "note",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "PatchNotesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "note",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "PutNotesById",
        "summary": "update"
      }
    },
    "/notions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 6,
                      "kind": "project",
                      "name": "Jour 13"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.091Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "id": 2,
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "id": 10,
                  "name": "Piscine OCaml - D08 - Object oriented programming 2/2",
                  "slug": "piscine-ocaml-d08-object-oriented-programming-2-2",
                  "subnotions": []
                },
                {
                  "tags": [
                    {
                      "id": 7,
                      "kind": "general",
                      "name": "Bocal"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.053Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "id": 2,
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "id": 9,
                  "name": "Piscine Unity - D07 - GUI 3D, navmesh and raycasting",
                  "slug": "piscine-unity-d07-gui-3d-navmesh-and-raycasting",
                  "subnotions": []
                },
                {
                  "tags": [
                    {
                      "id": 7,
                      "kind": "general",
                      "name": "Bocal"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.021Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "id": 8,
                  "name": "Piscine OCaml - D05 - Imperative traits",
                  "slug": "piscine-ocaml-d05-imperative-traits",
                  "subnotions": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "slug",
                        "id",
                        "created_at",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "slug",
                  "created_at",
                  "subnotions",
                  "tags",
                  "cursus",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "GetNotions",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "notion",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "tags": [
                  {
                    "id": 2,
                    "kind": "project",
                    "name": "Friends with Benefits"
                  },
                  {
                    "id": 3,
                    "kind": "project",
                    "name": "GBmu"
                  },
                  {
                    "id": 6,
                    "kind": "project",
                    "name": "Jour 13"
                  }
                ],
                "created_at": "2017-11-22T13:43:48.180Z",
                "cursus": [
                  {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  }
                ],
                "id": 11,
                "name": "Metafiction",
                "slug": "metafiction",
                "subnotions": [
                  {
                    "created_at": "2017-11-22T13:43:48.192Z",
                    "id": 11,
                    "name": "Postern of Fate",
                    "notepad": null,
                    "slug": "postern-of-fate"
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "slug",
                      "id",
                      "created_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "subnotions": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "notepad": {
                        "type": "null"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "notepad",
                      "id",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "tags",
                "cursus",
                "id",
                "name",
                "slug",
                "created_at",
                "subnotions"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "PostNotions",
        "summary": "create"
      }
    },
    "/notions/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "DeleteNotionsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "tags": [
                  {
                    "id": 3,
                    "kind": "project",
                    "name": "GBmu"
                  }
                ],
                "created_at": "2017-11-22T13:41:23.822Z",
                "cursus": [
                  {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  }
                ],
                "id": 3,
                "name": "Piscine OCaml - D01 - MOAR functions",
                "slug": "piscine-ocaml-d01-moar-functions",
                "subnotions": []
              }
            },
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "slug",
                      "id",
                      "created_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "subnotions": {
                  "type": "array"
                }
              },
              "required": [
                "name",
                "slug",
                "created_at",
                "subnotions",
                "tags",
                "cursus",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "GetNotionsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "PatchNotionsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "PutNotionsById",
        "summary": "update"
      }
    },
    "/notions/:notion_id/subnotions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:24.254Z",
                  "id": 10,
                  "name": "Conclusion",
                  "notepad": null,
                  "notion": null,
                  "slug": "piscine-php-d08-even-moar-object-oriented-programming-conclusion"
                },
                {
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:24.204Z",
                  "id": 5,
                  "name": "Cosinus",
                  "notepad": null,
                  "notion": null,
                  "slug": "fract-ol-cosinus"
                },
                {
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:24.195Z",
                  "id": 4,
                  "name": "Démonstration",
                  "notepad": null,
                  "notion": null,
                  "slug": "wolf3d-demonstration"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "attachments": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notepad": {
                    "type": "null"
                  },
                  "notion": {
                    "type": "null"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "slug",
                  "created_at",
                  "notepad",
                  "attachments",
                  "notion"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "GetNotionsFromNotionIdSubnotions",
        "summary": "index"
      }
    },
    "/notions/:notion_id/tags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issue_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 11,
                  "kind": "archived",
                  "name": "Archived",
                  "subnotions": [],
                  "users": []
                },
                {
                  "id": 7,
                  "kind": "general",
                  "name": "Bocal",
                  "subnotions": [
                    {
                      "created_at": "2017-11-22T13:41:24.154Z",
                      "id": 1,
                      "name": "Emacs",
                      "notepad": null,
                      "slug": "piscine-c-text-editors-emacs"
                    }
                  ],
                  "users": []
                },
                {
                  "id": 4,
                  "kind": "project",
                  "name": "Colle 08",
                  "subnotions": [],
                  "users": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  },
                  "users": {
                    "type": "array"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "kind",
                  "users",
                  "subnotions"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetNotionsFromNotionIdTags",
        "summary": "index"
      }
    },
    "/offers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers"
        ],
        "description": "",
        "operationId": "GetOffers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offer",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers"
        ],
        "description": "",
        "operationId": "PostOffers",
        "summary": "create"
      }
    },
    "/offers/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers"
        ],
        "description": "",
        "operationId": "GetOffersById",
        "summary": "show"
      }
    },
    "/offers/:offer_id/offers_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offer_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers users"
        ],
        "description": "",
        "operationId": "GetOffersFromOfferIdOffersUsers",
        "summary": "index"
      }
    },
    "/offers_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offer_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers users"
        ],
        "description": "",
        "operationId": "GetOffersUsers",
        "summary": "index"
      }
    },
    "/offers_users/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers users"
        ],
        "description": "",
        "operationId": "GetOffersUsersById",
        "summary": "show"
      }
    },
    "/params_project_sessions_rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_sessions_rule_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "GetParamsProjectSessionsRules",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_sessions_rule_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "params_project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "PostParamsProjectSessionsRules",
        "summary": "create"
      }
    },
    "/params_project_sessions_rules/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "DeleteParamsProjectSessionsRulesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "GetParamsProjectSessionsRulesById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "params_project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "PatchParamsProjectSessionsRulesById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "params_project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "PutParamsProjectSessionsRulesById",
        "summary": "update"
      }
    },
    "/partnerships": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "Strosin-Kiehn",
                  "partnerships_users_url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn/partnerships_users",
                  "slug": "strosin-kiehn",
                  "tier": 1,
                  "url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "partnerships_users_url": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "tier": {
                    "type": "number"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "required": [
                  "tier",
                  "url",
                  "partnerships_users_url",
                  "id",
                  "name",
                  "slug"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Partnerships"
        ],
        "description": "",
        "operationId": "GetPartnerships",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partnership",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 2,
                "name": "Western Arkansas College",
                "partnerships_users_url": "https://api.intra.42.fr/v2/partnerships/western-arkansas-college/partnerships_users",
                "slug": "western-arkansas-college",
                "tier": 1,
                "url": "https://api.intra.42.fr/v2/partnerships/western-arkansas-college"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "partnerships_users_url": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "tier": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "url",
                "partnerships_users_url",
                "id",
                "name",
                "slug",
                "tier"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Partnerships"
        ],
        "description": "",
        "operationId": "PostPartnerships",
        "summary": "create"
      }
    },
    "/partnerships/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Partnerships"
        ],
        "description": "",
        "operationId": "DeletePartnershipsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Strosin-Kiehn",
                "partnerships_users_url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn/partnerships_users",
                "slug": "strosin-kiehn",
                "tier": 1,
                "url": "https://api.intra.42.fr/v2/partnerships/strosin-kiehn"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "partnerships_users_url": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "tier": {
                  "type": "number"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "tier",
                "url",
                "partnerships_users_url",
                "id",
                "name",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Partnerships"
        ],
        "description": "",
        "operationId": "GetPartnershipsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Partnerships"
        ],
        "description": "",
        "operationId": "PatchPartnershipsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Partnerships"
        ],
        "description": "",
        "operationId": "PutPartnershipsById",
        "summary": "update"
      }
    },
    "/partnerships/:partnership_id/partnerships_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "final_mark": null,
                  "id": 5,
                  "partnership_id": 1,
                  "user": {
                    "id": 77,
                    "login": "bofett",
                    "url": "https://api.intra.42.fr/v2/users/bofett"
                  }
                },
                {
                  "final_mark": null,
                  "id": 4,
                  "partnership_id": 1,
                  "user": {
                    "id": 12,
                    "login": "kiki-adi",
                    "url": "https://api.intra.42.fr/v2/users/kiki-adi"
                  }
                },
                {
                  "final_mark": null,
                  "id": 3,
                  "partnership_id": 1,
                  "user": {
                    "id": 14,
                    "login": "pamidala",
                    "url": "https://api.intra.42.fr/v2/users/pamidala"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "partnership_id": {
                    "type": "number"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "id",
                      "login"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "partnership_id",
                  "final_mark",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "GetPartnershipsFromPartnershipIdPartnershipsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "final_mark": null,
                "id": 6,
                "partnership_id": 1,
                "user": {
                  "id": 107,
                  "login": "lukeskyw",
                  "url": "https://api.intra.42.fr/v2/users/lukeskyw"
                }
              }
            },
            "schema": {
              "properties": {
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "partnership_id": {
                  "type": "number"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "user",
                "id",
                "partnership_id",
                "final_mark"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "PostPartnershipsFromPartnershipIdPartnershipsUsers",
        "summary": "create"
      }
    },
    "/partnerships/:partnership_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "large",
                          "medium",
                          "small",
                          "micro"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "first_name",
                  "location",
                  "alumni?",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "updated_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetPartnershipsFromPartnershipIdUsers",
        "summary": "index"
      }
    },
    "/partnerships_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "final_mark": null,
                  "id": 5,
                  "partnership_id": 1,
                  "user": {
                    "id": 77,
                    "login": "bofett",
                    "url": "https://api.intra.42.fr/v2/users/bofett"
                  }
                },
                {
                  "final_mark": null,
                  "id": 4,
                  "partnership_id": 1,
                  "user": {
                    "id": 12,
                    "login": "kiki-adi",
                    "url": "https://api.intra.42.fr/v2/users/kiki-adi"
                  }
                },
                {
                  "final_mark": null,
                  "id": 3,
                  "partnership_id": 1,
                  "user": {
                    "id": 14,
                    "login": "pamidala",
                    "url": "https://api.intra.42.fr/v2/users/pamidala"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "partnership_id": {
                    "type": "number"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "partnership_id",
                  "final_mark",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "GetPartnershipsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "final_mark": null,
                "id": 6,
                "partnership_id": 1,
                "user": {
                  "id": 107,
                  "login": "lukeskyw",
                  "url": "https://api.intra.42.fr/v2/users/lukeskyw"
                }
              }
            },
            "schema": {
              "properties": {
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "partnership_id": {
                  "type": "number"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "partnership_id",
                "final_mark",
                "user"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "PostPartnershipsUsers",
        "summary": "create"
      }
    },
    "/partnerships_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "DeletePartnershipsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "final_mark": null,
                "id": 5,
                "partnership_id": 1,
                "user": {
                  "id": 77,
                  "login": "bofett",
                  "url": "https://api.intra.42.fr/v2/users/bofett"
                }
              }
            },
            "schema": {
              "properties": {
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "partnership_id": {
                  "type": "number"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "user",
                "id",
                "partnership_id",
                "final_mark"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "GetPartnershipsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "PatchPartnershipsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Partnerships users"
        ],
        "description": "",
        "operationId": "PutPartnershipsUsersById",
        "summary": "update"
      }
    },
    "/partnerships_users/:partnerships_user_id/experiences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetPartnershipsUsersFromPartnershipsUserIdExperiences",
        "summary": "index"
      }
    },
    "/patronages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:42:12.790Z",
                  "godfather": {
                    "id": 39,
                    "login": "anskywal",
                    "url": "https://api.intra.42.fr/v2/users/anskywal"
                  },
                  "godfather_id": 39,
                  "id": 122,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.796Z",
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  },
                  "user_id": 124
                },
                {
                  "created_at": "2017-11-22T13:42:12.779Z",
                  "godfather": {
                    "id": 15,
                    "login": "mwindu",
                    "url": "https://api.intra.42.fr/v2/users/mwindu"
                  },
                  "godfather_id": 15,
                  "id": 121,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.786Z",
                  "user": {
                    "id": 116,
                    "login": "mwindu2",
                    "url": "https://api.intra.42.fr/v2/users/mwindu2"
                  },
                  "user_id": 116
                },
                {
                  "created_at": "2017-11-22T13:42:12.769Z",
                  "godfather": {
                    "id": 96,
                    "login": "wattwatt",
                    "url": "https://api.intra.42.fr/v2/users/wattwatt"
                  },
                  "godfather_id": 96,
                  "id": 120,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.774Z",
                  "user": {
                    "id": 123,
                    "login": "chewbche",
                    "url": "https://api.intra.42.fr/v2/users/chewbche"
                  },
                  "user_id": 123
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "godfather": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "godfather_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ongoing": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "updated_at",
                  "user",
                  "godfather",
                  "id",
                  "user_id",
                  "godfather_id",
                  "ongoing",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "GetPatronages",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:50.782Z",
                "godfather": {
                  "id": 4,
                  "login": "kpedro",
                  "url": "https://api.intra.42.fr/v2/users/kpedro"
                },
                "godfather_id": 4,
                "id": 123,
                "ongoing": true,
                "updated_at": "2017-11-22T13:43:50.794Z",
                "user": {
                  "id": 3,
                  "login": "gargamel",
                  "url": "https://api.intra.42.fr/v2/users/gargamel"
                },
                "user_id": 3
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "godfather": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                },
                "godfather_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "ongoing": {
                  "type": "boolean"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "ongoing",
                "created_at",
                "updated_at",
                "user",
                "godfather",
                "id",
                "user_id",
                "godfather_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "PostPatronages",
        "summary": "create"
      }
    },
    "/patronages/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "DeletePatronagesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:42:12.697Z",
                "godfather": {
                  "id": 85,
                  "login": "chewchew",
                  "url": "https://api.intra.42.fr/v2/users/chewchew"
                },
                "godfather_id": 85,
                "id": 113,
                "ongoing": true,
                "updated_at": "2017-11-22T13:42:12.704Z",
                "user": {
                  "id": 119,
                  "login": "hasolo",
                  "url": "https://api.intra.42.fr/v2/users/hasolo"
                },
                "user_id": 119
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "godfather": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "godfather_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "ongoing": {
                  "type": "boolean"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "godfather_id",
                "ongoing",
                "created_at",
                "updated_at",
                "user",
                "godfather",
                "id",
                "user_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "GetPatronagesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "PatchPatronagesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "PutPatronagesById",
        "summary": "update"
      }
    },
    "/patronages/:patronage_id/patronages_reports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "GetPatronagesFromPatronageIdPatronagesReports",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronages_report",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "answers": [],
                "begin_at": "2017-11-22T13:43:10.000Z",
                "created_at": "2017-11-22T13:43:51.496Z",
                "id": 127,
                "patronage": {
                  "created_at": "2017-11-22T13:42:12.541Z",
                  "godfather_id": 96,
                  "id": 98,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:43:51.499Z",
                  "user_id": 107
                },
                "patronage_id": 98,
                "report": {
                  "comment": "",
                  "created_at": "2017-11-22T13:42:11.309Z",
                  "delay_days": 210,
                  "disclaimer_md": "",
                  "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                  "id": 0,
                  "introduction_md": "",
                  "name": "Final Debriefing",
                  "slug": "final-debriefing",
                  "updated_at": "2017-11-22T13:42:11.416Z"
                },
                "report_id": 0,
                "updated_at": "2017-11-22T13:43:51.496Z",
                "user": {
                  "id": 27,
                  "login": "dcaedus",
                  "url": "https://api.intra.42.fr/v2/users/dcaedus"
                },
                "user_id": 27,
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "answers": {
                  "type": "array"
                },
                "begin_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "patronage": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "godfather_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "ongoing": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "user_id",
                    "godfather_id",
                    "ongoing",
                    "created_at",
                    "updated_at"
                  ],
                  "type": "object"
                },
                "patronage_id": {
                  "type": "number"
                },
                "report": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "delay_days": {
                      "type": "number"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "disclaimer_md",
                    "guidelines_md",
                    "updated_at",
                    "name",
                    "comment",
                    "created_at",
                    "slug",
                    "delay_days",
                    "id",
                    "introduction_md"
                  ],
                  "type": "object"
                },
                "report_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "patronage",
                "id",
                "begin_at",
                "report_id",
                "patronage_id",
                "validated_at",
                "report",
                "user",
                "answers",
                "user_id",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "PostPatronagesFromPatronageIdPatronagesReports",
        "summary": "create"
      }
    },
    "/patronages_reports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "GetPatronagesReports",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronages_report",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "answers": [],
                "begin_at": "2017-11-22T13:43:10.000Z",
                "created_at": "2017-11-22T13:43:51.496Z",
                "id": 127,
                "patronage": {
                  "created_at": "2017-11-22T13:42:12.541Z",
                  "godfather_id": 96,
                  "id": 98,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:43:51.499Z",
                  "user_id": 107
                },
                "patronage_id": 98,
                "report": {
                  "comment": "",
                  "created_at": "2017-11-22T13:42:11.309Z",
                  "delay_days": 210,
                  "disclaimer_md": "",
                  "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                  "id": 0,
                  "introduction_md": "",
                  "name": "Final Debriefing",
                  "slug": "final-debriefing",
                  "updated_at": "2017-11-22T13:42:11.416Z"
                },
                "report_id": 0,
                "updated_at": "2017-11-22T13:43:51.496Z",
                "user": {
                  "id": 27,
                  "login": "dcaedus",
                  "url": "https://api.intra.42.fr/v2/users/dcaedus"
                },
                "user_id": 27,
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "answers": {
                  "type": "array"
                },
                "begin_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "patronage": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "godfather_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "ongoing": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "godfather_id",
                    "ongoing",
                    "created_at",
                    "updated_at",
                    "id",
                    "user_id"
                  ],
                  "type": "object"
                },
                "patronage_id": {
                  "type": "number"
                },
                "report": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "delay_days": {
                      "type": "number"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "guidelines_md",
                    "updated_at",
                    "name",
                    "comment",
                    "disclaimer_md",
                    "slug",
                    "delay_days",
                    "id",
                    "introduction_md",
                    "created_at"
                  ],
                  "type": "object"
                },
                "report_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "answers",
                "user_id",
                "created_at",
                "updated_at",
                "patronage_id",
                "validated_at",
                "report",
                "user",
                "id",
                "begin_at",
                "report_id",
                "patronage"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "PostPatronagesReports",
        "summary": "create"
      }
    },
    "/patronages_reports/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "DeletePatronagesReportsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "answers": [],
                "begin_at": "2018-06-20T13:42:12.179Z",
                "created_at": "2017-11-22T13:42:12.179Z",
                "id": 67,
                "patronage": {
                  "created_at": "2017-11-22T13:42:12.177Z",
                  "godfather_id": 39,
                  "id": 67,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.181Z",
                  "user_id": 63
                },
                "patronage_id": 67,
                "report": {
                  "comment": "",
                  "created_at": "2017-11-22T13:42:11.309Z",
                  "delay_days": 210,
                  "disclaimer_md": "",
                  "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                  "id": 0,
                  "introduction_md": "",
                  "name": "Final Debriefing",
                  "slug": "final-debriefing",
                  "updated_at": "2017-11-22T13:42:11.416Z"
                },
                "report_id": 0,
                "updated_at": "2017-11-22T13:42:12.179Z",
                "user": {
                  "id": 39,
                  "login": "anskywal",
                  "url": "https://api.intra.42.fr/v2/users/anskywal"
                },
                "user_id": 39,
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "answers": {
                  "type": "array"
                },
                "begin_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "patronage": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "godfather_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "ongoing": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "id",
                    "user_id",
                    "godfather_id",
                    "ongoing",
                    "created_at",
                    "updated_at"
                  ],
                  "type": "object"
                },
                "patronage_id": {
                  "type": "number"
                },
                "report": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "delay_days": {
                      "type": "number"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "comment",
                    "updated_at",
                    "delay_days",
                    "id",
                    "introduction_md",
                    "disclaimer_md",
                    "guidelines_md",
                    "created_at",
                    "slug"
                  ],
                  "type": "object"
                },
                "report_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "patronage_id",
                "report_id",
                "patronage",
                "id",
                "begin_at",
                "updated_at",
                "validated_at",
                "report",
                "user",
                "answers",
                "user_id",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "GetPatronagesReportsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronages_report",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "PatchPatronagesReportsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronages_report",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "PutPatronagesReportsById",
        "summary": "update"
      }
    },
    "/patronages_reports/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 124
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetPatronagesReportsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/pools": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Pools"
        ],
        "description": "",
        "operationId": "GetPools",
        "summary": "index"
      }
    },
    "/pools/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "campus_id": 12,
                "current_points": 0,
                "cursus_id": 1,
                "id": 25,
                "max_points": 400
              }
            },
            "schema": {
              "properties": {
                "campus_id": {
                  "type": "number"
                },
                "current_points": {
                  "type": "number"
                },
                "cursus_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "max_points": {
                  "type": "number"
                }
              },
              "required": [
                "max_points",
                "cursus_id",
                "campus_id",
                "id",
                "current_points"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Pools"
        ],
        "description": "",
        "operationId": "GetPoolsById",
        "summary": "show"
      }
    },
    "/pools/:id/points/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "points",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Pools"
        ],
        "description": "Add points in specific pool. If number of points are bigger than max points, balance will be triggered. You are allowed to modify ONLY for your campus.",
        "operationId": "PostPoolsFromIdPointsAdd",
        "summary": "add_points"
      }
    },
    "/pools/:id/points/remove": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "points",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Pools"
        ],
        "description": "Remove points in specific pool. If number of points are lower than max points, balance will be disappeared. You are allowed to modify ONLY for your campus.",
        "operationId": "DeletePoolsFromIdPointsRemove",
        "summary": "remove_points"
      }
    },
    "/pools/:pool_id/balances": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "GetPoolsFromPoolIdBalances",
        "summary": "index"
      }
    },
    "/pools/:pool_id/balances/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2018-06-16 10:49:28",
                "end_at": "2018-06-16 14:03:41",
                "id": 191,
                "pool_id": 21
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "pool_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "begin_at",
                "end_at",
                "pool_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "GetPoolsFromPoolIdBalancesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "PatchPoolsFromPoolIdBalancesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "pool_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "balance",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Balances"
        ],
        "description": "",
        "operationId": "PutPoolsFromPoolIdBalancesById",
        "summary": "update"
      }
    },
    "/products": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.457Z",
                  "description": "Utapau",
                  "end_at": null,
                  "id": 1,
                  "image": {
                    "thumb": {
                      "url": "/uploads/product/image/1/thumb_logo.png"
                    },
                    "url": "/uploads/product/image/1/logo.png"
                  },
                  "is_uniq": true,
                  "kind": "auto",
                  "name": "Jakku",
                  "one_time_purchase": false,
                  "price": 100,
                  "quantity": 20,
                  "slug": "jakku",
                  "updated_at": "2017-11-22T13:41:20.498Z"
                },
                {
                  "begin_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.528Z",
                  "description": "Lothal",
                  "end_at": null,
                  "id": 2,
                  "image": {
                    "thumb": {
                      "url": "/uploads/product/image/2/thumb_logo.png"
                    },
                    "url": "/uploads/product/image/2/logo.png"
                  },
                  "is_uniq": true,
                  "kind": "auto",
                  "name": "Sullust",
                  "one_time_purchase": false,
                  "price": 100,
                  "quantity": 20,
                  "slug": "sullust",
                  "updated_at": "2017-11-22T13:41:20.561Z"
                },
                {
                  "begin_at": null,
                  "category_id": 1,
                  "created_at": "2017-11-22T13:41:20.590Z",
                  "description": "Naboo",
                  "end_at": null,
                  "id": 3,
                  "image": {
                    "thumb": {
                      "url": "/uploads/product/image/3/thumb_logo.png"
                    },
                    "url": "/uploads/product/image/3/logo.png"
                  },
                  "is_uniq": true,
                  "kind": "auto",
                  "name": "Geonosis",
                  "one_time_purchase": false,
                  "price": 100,
                  "quantity": 20,
                  "slug": "geonosis",
                  "updated_at": "2017-11-22T13:41:20.621Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "null"
                  },
                  "category_id": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "thumb": {
                        "properties": {
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "url"
                        ],
                        "type": "object"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "thumb"
                    ],
                    "type": "object"
                  },
                  "is_uniq": {
                    "type": "boolean"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "one_time_purchase": {
                    "type": "boolean"
                  },
                  "price": {
                    "type": "number"
                  },
                  "quantity": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "slug",
                  "image",
                  "is_uniq",
                  "begin_at",
                  "category_id",
                  "created_at",
                  "updated_at",
                  "id",
                  "description",
                  "quantity",
                  "one_time_purchase",
                  "price",
                  "end_at",
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "GetProducts",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-05-22T13:43:51.000Z",
                "category_id": 3,
                "created_at": "2017-11-22T13:43:52.063Z",
                "description": "Utapau",
                "end_at": "2023-11-22T13:43:51.000Z",
                "id": 6,
                "image": {
                  "thumb": {
                    "url": "/uploads/product/image/6/thumb_logo.png"
                  },
                  "url": "/uploads/product/image/6/logo.png"
                },
                "is_uniq": true,
                "kind": "auto",
                "name": "Chuck Norris's keyboard doesn't have a Ctrl key because nothing controls Chuck Norris.",
                "one_time_purchase": true,
                "price": 10,
                "quantity": 10,
                "slug": "chuck-norris-s-keyboard-doesn-t-have-a-ctrl-key-because-nothing-controls-chuck-norris",
                "updated_at": "2017-11-22T13:43:52.097Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "category_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "properties": {
                    "thumb": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "thumb",
                    "url"
                  ],
                  "type": "object"
                },
                "is_uniq": {
                  "type": "boolean"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "one_time_purchase": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "updated_at",
                "image",
                "description",
                "begin_at",
                "end_at",
                "slug",
                "is_uniq",
                "id",
                "price",
                "quantity",
                "kind",
                "category_id",
                "created_at",
                "one_time_purchase"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "PostProducts",
        "summary": "create"
      }
    },
    "/products/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "DeleteProductsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": null,
                "category_id": 1,
                "created_at": "2017-11-22T13:41:20.457Z",
                "description": "Utapau",
                "end_at": null,
                "id": 1,
                "image": {
                  "thumb": {
                    "url": "/uploads/product/image/1/thumb_logo.png"
                  },
                  "url": "/uploads/product/image/1/logo.png"
                },
                "is_uniq": true,
                "kind": "auto",
                "name": "Jakku",
                "one_time_purchase": false,
                "price": 100,
                "quantity": 20,
                "slug": "jakku",
                "updated_at": "2017-11-22T13:41:20.498Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "null"
                },
                "category_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "end_at": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "properties": {
                    "thumb": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "thumb"
                  ],
                  "type": "object"
                },
                "is_uniq": {
                  "type": "boolean"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "one_time_purchase": {
                  "type": "boolean"
                },
                "price": {
                  "type": "number"
                },
                "quantity": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "end_at",
                "updated_at",
                "name",
                "slug",
                "image",
                "is_uniq",
                "category_id",
                "created_at",
                "one_time_purchase",
                "id",
                "description",
                "price",
                "quantity",
                "begin_at",
                "kind"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "GetProductsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "PatchProductsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "product",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Products"
        ],
        "description": "",
        "operationId": "PutProductsById",
        "summary": "update"
      }
    },
    "/products/:product_id/commands": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "product_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Commands"
        ],
        "description": "",
        "operationId": "GetProductsFromProductIdCommands",
        "summary": "index"
      }
    },
    "/project_data": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "by": [],
                  "coordinates": [
                    73,
                    53
                  ],
                  "id": 6,
                  "kind": "project",
                  "project_session_id": 3
                },
                {
                  "by": [],
                  "coordinates": [
                    63,
                    81
                  ],
                  "id": 4,
                  "kind": "exam",
                  "project_session_id": 2
                },
                {
                  "by": [],
                  "coordinates": [
                    80,
                    76
                  ],
                  "id": 5,
                  "kind": "exam",
                  "project_session_id": 2
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "by": {
                    "type": "array"
                  },
                  "coordinates": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "project_session_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "by",
                  "kind",
                  "project_session_id",
                  "id",
                  "coordinates"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "GetProjectData",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "by": [
                  [
                    7,
                    3000,
                    1900,
                    3000,
                    1725
                  ],
                  [
                    36,
                    3000,
                    1725,
                    3100,
                    1725
                  ]
                ],
                "coordinates": [
                  2350,
                  3450
                ],
                "id": 8,
                "kind": "project",
                "project_session_id": 5
              }
            },
            "schema": {
              "properties": {
                "by": {
                  "items": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "type": "array"
                },
                "coordinates": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "project_session_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "coordinates",
                "by",
                "kind",
                "project_session_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "PostProjectData",
        "summary": "create"
      }
    },
    "/project_data/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "DeleteProjectDataById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "by": [],
                "coordinates": [
                  11,
                  14
                ],
                "id": 1,
                "kind": "rush",
                "project_session_id": 1
              }
            },
            "schema": {
              "properties": {
                "by": {
                  "type": "array"
                },
                "coordinates": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "project_session_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "coordinates",
                "by",
                "kind",
                "project_session_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "GetProjectDataById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_data",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "PatchProjectDataById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_data",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "PutProjectDataById",
        "summary": "update"
      }
    },
    "/project_sessions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": null,
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:41:26.911Z",
                  "cursus": null,
                  "cursus_id": null,
                  "duration_days": null,
                  "end_at": null,
                  "estimate_time": null,
                  "evaluations": [
                    {
                      "id": 5,
                      "kind": "scale"
                    }
                  ],
                  "id": 5,
                  "is_subscriptable": true,
                  "max_people": null,
                  "project": {
                    "attachments": [],
                    "children": [],
                    "created_at": "2017-11-22T13:41:26.895Z",
                    "description": null,
                    "exam": false,
                    "id": 5,
                    "name": "Quarter Finals",
                    "objectives": null,
                    "parent": {
                      "id": 4,
                      "name": "Hogwarts Quidditch Cup",
                      "slug": "hogwarts-quidditch-cup",
                      "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup/mine"
                    },
                    "slug": "hogwarts-quidditch-cup-quarter-finals",
                    "tier": null,
                    "updated_at": "2017-11-22T13:41:26.973Z"
                  },
                  "project_id": 5,
                  "scales": [],
                  "solo": false,
                  "team_behaviour": "user",
                  "terminating_after": null,
                  "updated_at": "2017-11-22T13:41:26.911Z",
                  "uploads": []
                },
                {
                  "begin_at": null,
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:41:26.786Z",
                  "cursus": null,
                  "cursus_id": null,
                  "duration_days": null,
                  "end_at": null,
                  "estimate_time": null,
                  "evaluations": [],
                  "id": 4,
                  "is_subscriptable": true,
                  "max_people": null,
                  "project": {
                    "attachments": [],
                    "children": [
                      {
                        "id": 5,
                        "name": "Quarter Finals",
                        "slug": "hogwarts-quidditch-cup-quarter-finals",
                        "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                      }
                    ],
                    "created_at": "2017-11-22T13:41:26.765Z",
                    "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                    "exam": false,
                    "id": 4,
                    "name": "Hogwarts Quidditch Cup",
                    "objectives": [
                      "Quidditch"
                    ],
                    "parent": null,
                    "slug": "hogwarts-quidditch-cup",
                    "tier": 1,
                    "updated_at": "2017-11-22T13:41:26.975Z"
                  },
                  "project_id": 4,
                  "scales": [],
                  "solo": false,
                  "team_behaviour": "user",
                  "terminating_after": null,
                  "updated_at": "2017-11-22T13:41:26.786Z",
                  "uploads": []
                },
                {
                  "begin_at": null,
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:41:26.545Z",
                  "cursus": null,
                  "cursus_id": null,
                  "duration_days": null,
                  "end_at": null,
                  "estimate_time": 2592000,
                  "evaluations": [
                    {
                      "id": 4,
                      "kind": "scale"
                    }
                  ],
                  "id": 3,
                  "is_subscriptable": true,
                  "max_people": null,
                  "project": {
                    "attachments": [],
                    "children": [],
                    "created_at": "2017-11-22T13:41:26.537Z",
                    "description": "Something you shouldn't see",
                    "exam": true,
                    "id": 3,
                    "name": "Metaprogramming in OCaml",
                    "objectives": [
                      "Run away"
                    ],
                    "parent": null,
                    "slug": "metaprogramming-in-ocaml",
                    "tier": 1,
                    "updated_at": "2017-11-22T13:41:26.616Z"
                  },
                  "project_id": 3,
                  "scales": [],
                  "solo": true,
                  "team_behaviour": "user",
                  "terminating_after": null,
                  "updated_at": "2017-11-22T13:41:26.545Z",
                  "uploads": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "null"
                  },
                  "campus": {
                    "type": "null"
                  },
                  "campus_id": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "type": "null"
                  },
                  "cursus_id": {
                    "type": "null"
                  },
                  "duration_days": {
                    "type": "null"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "estimate_time": {
                    "type": "null"
                  },
                  "evaluations": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "is_subscriptable": {
                    "type": "boolean"
                  },
                  "max_people": {
                    "type": "null"
                  },
                  "project": {
                    "properties": {
                      "attachments": {
                        "type": "array"
                      },
                      "children": {
                        "type": "array"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "null"
                      },
                      "exam": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "objectives": {
                        "type": "null"
                      },
                      "parent": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "id",
                          "slug",
                          "url"
                        ],
                        "type": "object"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "tier": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "objectives",
                      "attachments",
                      "created_at",
                      "updated_at",
                      "id",
                      "name",
                      "parent",
                      "tier",
                      "exam",
                      "slug",
                      "description",
                      "children"
                    ],
                    "type": "object"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "scales": {
                    "type": "array"
                  },
                  "solo": {
                    "type": "boolean"
                  },
                  "team_behaviour": {
                    "type": "string"
                  },
                  "terminating_after": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "uploads": {
                    "type": "array"
                  }
                },
                "required": [
                  "project_id",
                  "is_subscriptable",
                  "team_behaviour",
                  "solo",
                  "created_at",
                  "updated_at",
                  "uploads",
                  "project",
                  "campus",
                  "campus_id",
                  "estimate_time",
                  "duration_days",
                  "terminating_after",
                  "cursus",
                  "end_at",
                  "begin_at",
                  "cursus_id",
                  "max_people",
                  "scales",
                  "evaluations",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project sessions"
        ],
        "description": "",
        "operationId": "GetProjectSessions",
        "summary": "index"
      }
    },
    "/project_sessions/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Project sessions"
        ],
        "description": "",
        "operationId": "DeleteProjectSessionsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": null,
                "campus": null,
                "campus_id": null,
                "created_at": "2017-11-22T13:41:26.375Z",
                "cursus": null,
                "cursus_id": null,
                "duration_days": null,
                "end_at": null,
                "estimate_time": 2592000,
                "evaluations": [
                  {
                    "id": 3,
                    "kind": "scale"
                  }
                ],
                "id": 2,
                "is_subscriptable": true,
                "max_people": null,
                "project": {
                  "attachments": [],
                  "children": [],
                  "created_at": "2017-11-22T13:41:26.356Z",
                  "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                  "exam": true,
                  "id": 2,
                  "name": "Ordinary Wizarding Levels",
                  "objectives": [
                    "Wizarding"
                  ],
                  "parent": null,
                  "slug": "ordinary-wizarding-levels",
                  "tier": 1,
                  "updated_at": "2017-11-22T13:41:26.441Z"
                },
                "project_id": 2,
                "scales": [
                  {
                    "correction_number": 3,
                    "id": 2,
                    "is_primary": true
                  }
                ],
                "solo": true,
                "team_behaviour": "user",
                "terminating_after": null,
                "updated_at": "2017-11-22T13:41:28.347Z",
                "uploads": []
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "null"
                },
                "campus": {
                  "type": "null"
                },
                "campus_id": {
                  "type": "null"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "type": "null"
                },
                "cursus_id": {
                  "type": "null"
                },
                "duration_days": {
                  "type": "null"
                },
                "end_at": {
                  "type": "null"
                },
                "estimate_time": {
                  "type": "number"
                },
                "evaluations": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "is_subscriptable": {
                  "type": "boolean"
                },
                "max_people": {
                  "type": "null"
                },
                "project": {
                  "properties": {
                    "attachments": {
                      "type": "array"
                    },
                    "children": {
                      "type": "array"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "exam": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "objectives": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "parent": {
                      "type": "null"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "tier": {
                      "type": "number"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "tier",
                    "attachments",
                    "updated_at",
                    "exam",
                    "name",
                    "slug",
                    "description",
                    "parent",
                    "children",
                    "objectives",
                    "created_at"
                  ],
                  "type": "object"
                },
                "project_id": {
                  "type": "number"
                },
                "scales": {
                  "items": {
                    "properties": {
                      "correction_number": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_primary": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "correction_number",
                      "is_primary"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "solo": {
                  "type": "boolean"
                },
                "team_behaviour": {
                  "type": "string"
                },
                "terminating_after": {
                  "type": "null"
                },
                "updated_at": {
                  "type": "string"
                },
                "uploads": {
                  "type": "array"
                }
              },
              "required": [
                "max_people",
                "is_subscriptable",
                "scales",
                "team_behaviour",
                "solo",
                "estimate_time",
                "terminating_after",
                "cursus_id",
                "evaluations",
                "duration_days",
                "updated_at",
                "uploads",
                "campus",
                "begin_at",
                "campus_id",
                "created_at",
                "cursus",
                "id",
                "end_at",
                "project_id",
                "project"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project sessions"
        ],
        "description": "",
        "operationId": "GetProjectSessionsById",
        "summary": "show"
      }
    },
    "/project_sessions/:project_session_id/attachments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdAttachments",
        "summary": "index"
      }
    },
    "/project_sessions/:project_session_id/attachments/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "base_id": 1,
                "created_at": "2017-11-22T13:41:25.981Z",
                "id": 1,
                "language": {
                  "id": 3,
                  "identifier": "ro",
                  "name": "Romanian"
                },
                "name": "New Jersey zombies",
                "page_count": 1,
                "pdf": {
                  "pdf": {
                    "thumb": {
                      "url": null
                    },
                    "url": null
                  }
                },
                "pdf_processing": true,
                "slug": "new-jersey-zombies",
                "thumb_url": null,
                "type": "Pdf",
                "url": null
              }
            },
            "schema": {
              "properties": {
                "base_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "identifier": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "identifier"
                  ],
                  "type": "object"
                },
                "name": {
                  "type": "string"
                },
                "page_count": {
                  "type": "number"
                },
                "pdf": {
                  "properties": {
                    "pdf": {
                      "properties": {
                        "thumb": {
                          "properties": {
                            "url": {
                              "type": "null"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "type": "object"
                        },
                        "url": {
                          "type": "null"
                        }
                      },
                      "required": [
                        "url",
                        "thumb"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "pdf"
                  ],
                  "type": "object"
                },
                "pdf_processing": {
                  "type": "boolean"
                },
                "slug": {
                  "type": "string"
                },
                "thumb_url": {
                  "type": "null"
                },
                "type": {
                  "type": "string"
                },
                "url": {
                  "type": "null"
                }
              },
              "required": [
                "pdf",
                "slug",
                "thumb_url",
                "language",
                "type",
                "id",
                "name",
                "pdf_processing",
                "url",
                "base_id",
                "page_count",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdAttachmentsById",
        "summary": "show"
      }
    },
    "/project_sessions/:project_session_id/project_data": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "by": [],
                  "coordinates": [
                    73,
                    53
                  ],
                  "id": 6,
                  "kind": "project",
                  "project_session_id": 3
                },
                {
                  "by": [],
                  "coordinates": [
                    63,
                    81
                  ],
                  "id": 4,
                  "kind": "exam",
                  "project_session_id": 2
                },
                {
                  "by": [],
                  "coordinates": [
                    80,
                    76
                  ],
                  "id": 5,
                  "kind": "exam",
                  "project_session_id": 2
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "by": {
                    "type": "array"
                  },
                  "coordinates": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "project_session_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "coordinates",
                  "by",
                  "kind",
                  "project_session_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project data"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdProjectData",
        "summary": "index"
      }
    },
    "/project_sessions/:project_session_id/project_sessions_rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdProjectSessionsRules",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "PostProjectSessionsFromProjectSessionIdProjectSessionsRules",
        "summary": "create"
      }
    },
    "/project_sessions/:project_session_id/project_sessions_skills": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2019-07-03T12:21:11.956Z",
                  "id": 1,
                  "project_session_id": 1979,
                  "skill_id": 2,
                  "updated_at": "2019-07-03T12:21:11.956Z",
                  "value": 15
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "skill_id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "project_session_id",
                  "skill_id",
                  "value",
                  "created_at",
                  "updated_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project sessions skills"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdProjectSessionsSkills",
        "summary": "index"
      }
    },
    "/project_sessions/:project_session_id/project_sessions_skills/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2019-07-03T12:21:11.956Z",
                "id": 1,
                "project_session_id": 1979,
                "skill_id": 2,
                "updated_at": "2019-07-03T12:21:11.956Z",
                "value": 15
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "project_session_id": {
                  "type": "number"
                },
                "skill_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "value",
                "created_at",
                "updated_at",
                "id",
                "project_session_id",
                "skill_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project sessions skills"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdProjectSessionsSkillsById",
        "summary": "show"
      }
    },
    "/project_sessions/:project_session_id/rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2016-05-31T15:00:49.898Z",
                  "description": "The user first name must start by the #{letter} letter",
                  "id": 34,
                  "internal_name": "FirstNameStartingBy",
                  "kind": "inscription",
                  "name": "First name starting by",
                  "params": [
                    {
                      "created_at": "2016-05-31T15:00:49.905Z",
                      "data_type": "string",
                      "default_value": "",
                      "id": 27,
                      "name": "letter",
                      "rule_id": 34,
                      "updated_at": "2016-05-31T15:00:49.905Z"
                    }
                  ],
                  "project_sessions_rules": [],
                  "slug": "inscription-first-name-starting-by",
                  "updated_at": "2016-05-31T15:00:49.898Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "params": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "default_value": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "rule_id": {
                          "type": "number"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "default_value",
                        "rule_id",
                        "created_at",
                        "updated_at",
                        "data_type"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "project_sessions_rules": {
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "updated_at",
                  "slug",
                  "internal_name",
                  "params",
                  "project_sessions_rules",
                  "id",
                  "kind",
                  "name",
                  "description",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdRules",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "rule",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:59.860Z",
                "description": "The user first name must start by the #{letter} letter",
                "id": 11,
                "internal_name": "FirstNameStartingBy",
                "kind": "inscription",
                "name": "First name starting by",
                "params": [
                  {
                    "created_at": "2017-11-22T13:43:59.863Z",
                    "data_type": "string",
                    "default_value": "",
                    "id": 1,
                    "name": "letter",
                    "rule_id": 11,
                    "updated_at": "2017-11-22T13:43:59.863Z"
                  }
                ],
                "slug": "inscription-first-name-starting-by",
                "updated_at": "2017-11-22T13:43:59.860Z"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "internal_name": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "params": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "data_type": {
                        "type": "string"
                      },
                      "default_value": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "rule_id": {
                        "type": "number"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "default_value",
                      "rule_id",
                      "created_at",
                      "updated_at",
                      "data_type"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "updated_at",
                "internal_name",
                "params",
                "kind",
                "description",
                "created_at",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "PostProjectSessionsFromProjectSessionIdRules",
        "summary": "create"
      }
    },
    "/project_sessions/:project_session_id/scale_teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdScaleTeams",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": null,
                "comment": null,
                "correcteds": [
                  {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  }
                ],
                "corrector": {},
                "created_at": "2017-11-22T13:44:01.281Z",
                "feedback": null,
                "feedback_rating": null,
                "feedbacks": [],
                "filled_at": null,
                "final_mark": null,
                "flag": {
                  "created_at": "2017-11-22T13:41:01.837Z",
                  "icon": "check-4",
                  "id": 1,
                  "name": "Ok",
                  "positive": true,
                  "updated_at": "2017-11-22T13:41:01.837Z"
                },
                "id": 2,
                "scale": {
                  "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                  "correction_number": 3,
                  "created_at": "2017-11-22T13:41:27.388Z",
                  "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                  "duration": 1800,
                  "evaluation_id": 1,
                  "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                  "id": 1,
                  "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Utah ducks"
                },
                "scale_id": 1,
                "team": {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:37.496Z",
                  "created_at": "2017-11-22T13:41:37.418Z",
                  "final_mark": null,
                  "id": 68,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:37.471Z",
                  "name": "sebulseb's group",
                  "project_id": 1,
                  "project_session_id": 1,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                  "status": "waiting_for_correction",
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:44:01.294Z",
                  "url": "https://api.intra.42.fr/v2/teams/68",
                  "users": [
                    {
                      "id": 125,
                      "leader": true,
                      "login": "sebulseb",
                      "occurrence": 0,
                      "projects_user_id": 68,
                      "url": "https://api.intra.42.fr/v2/users/sebulseb",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                "truant": {},
                "updated_at": "2017-11-22T13:44:01.281Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "null"
                },
                "comment": {
                  "type": "null"
                },
                "correcteds": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "corrector": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "created_at": {
                  "type": "string"
                },
                "feedback": {
                  "type": "null"
                },
                "feedback_rating": {
                  "type": "null"
                },
                "feedbacks": {
                  "type": "array"
                },
                "filled_at": {
                  "type": "null"
                },
                "final_mark": {
                  "type": "null"
                },
                "flag": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "positive": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "positive",
                    "icon",
                    "created_at",
                    "updated_at"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "scale": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "correction_number": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "is_primary": {
                      "type": "boolean"
                    },
                    "languages": {
                      "items": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "manual_subscription": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "correction_number",
                    "duration",
                    "id",
                    "evaluation_id",
                    "name",
                    "created_at",
                    "guidelines_md",
                    "manual_subscription",
                    "languages",
                    "is_primary",
                    "comment",
                    "introduction_md",
                    "disclaimer_md"
                  ],
                  "type": "object"
                },
                "scale_id": {
                  "type": "number"
                },
                "team": {
                  "properties": {
                    "closed?": {
                      "type": "boolean"
                    },
                    "closed_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "final_mark": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "locked?": {
                      "type": "boolean"
                    },
                    "locked_at": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "number"
                    },
                    "project_session_id": {
                      "type": "number"
                    },
                    "repo_url": {
                      "type": "null"
                    },
                    "repo_uuid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "terminating_at": {
                      "type": "null"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "users": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "leader": {
                            "type": "boolean"
                          },
                          "login": {
                            "type": "string"
                          },
                          "occurrence": {
                            "type": "number"
                          },
                          "projects_user_id": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "validated": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "id",
                          "login",
                          "url",
                          "leader",
                          "occurrence",
                          "validated",
                          "projects_user_id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "validated?": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "project_id",
                    "updated_at",
                    "locked?",
                    "repo_url",
                    "id",
                    "status",
                    "terminating_at",
                    "users",
                    "validated?",
                    "url",
                    "created_at",
                    "closed?",
                    "repo_uuid",
                    "locked_at",
                    "name",
                    "closed_at",
                    "project_session_id",
                    "final_mark"
                  ],
                  "type": "object"
                },
                "truant": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "flag",
                "begin_at",
                "correcteds",
                "corrector",
                "feedback",
                "final_mark",
                "filled_at",
                "feedbacks",
                "scale_id",
                "feedback_rating",
                "truant",
                "scale",
                "team",
                "comment",
                "created_at",
                "id",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "With this call, the evaluator is set as the token’s user_id. If you want to set an evaluation for a particular user, use the <a href=\"/apidoc/2.0/scale_teams/multiple_create.html\">multiple_create</a> call",
        "operationId": "PostProjectSessionsFromProjectSessionIdScaleTeams",
        "summary": "create"
      }
    },
    "/project_sessions/:project_session_id/scale_teams/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "DeleteProjectSessionsFromProjectSessionIdScaleTeamsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-11-24T18:00:00.000Z",
                "comment": null,
                "correcteds": "invisible",
                "corrector": "invisible",
                "created_at": "2017-11-22T13:42:09.187Z",
                "feedback": null,
                "feedback_rating": null,
                "feedbacks": [],
                "filled_at": null,
                "final_mark": null,
                "flag": {
                  "created_at": "2017-11-22T13:41:01.837Z",
                  "icon": "check-4",
                  "id": 1,
                  "name": "Ok",
                  "positive": true,
                  "updated_at": "2017-11-22T13:41:01.837Z"
                },
                "id": 1,
                "scale": {
                  "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                  "correction_number": 3,
                  "created_at": "2017-11-22T13:41:27.388Z",
                  "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                  "duration": 1800,
                  "evaluation_id": 1,
                  "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                  "id": 1,
                  "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Utah ducks"
                },
                "scale_id": 1,
                "truant": {},
                "updated_at": "2017-11-22T13:42:09.187Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "comment": {
                  "type": "null"
                },
                "correcteds": {
                  "type": "string"
                },
                "corrector": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "feedback": {
                  "type": "null"
                },
                "feedback_rating": {
                  "type": "null"
                },
                "feedbacks": {
                  "type": "array"
                },
                "filled_at": {
                  "type": "null"
                },
                "final_mark": {
                  "type": "null"
                },
                "flag": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "positive": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "positive",
                    "icon",
                    "created_at",
                    "updated_at",
                    "id",
                    "name"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "scale": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "correction_number": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "is_primary": {
                      "type": "boolean"
                    },
                    "languages": {
                      "items": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "manual_subscription": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "is_primary",
                    "manual_subscription",
                    "evaluation_id",
                    "name",
                    "comment",
                    "introduction_md",
                    "disclaimer_md",
                    "guidelines_md",
                    "created_at",
                    "correction_number",
                    "id",
                    "languages",
                    "duration"
                  ],
                  "type": "object"
                },
                "scale_id": {
                  "type": "number"
                },
                "truant": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "final_mark",
                "scale",
                "feedbacks",
                "id",
                "updated_at",
                "flag",
                "created_at",
                "feedback_rating",
                "corrector",
                "truant",
                "correcteds",
                "filled_at",
                "scale_id",
                "comment",
                "feedback",
                "begin_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdScaleTeamsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "The final_mark of the scale_team is calculated automatically from the answers values. If you want to patch the mark of a project for a student, patching the <code>team.final_mark</code> is the right way to do. It will recompile the <code>project_user.final_mark</code>. If you really want to update the final_mark of the scale_team, you need to patch the <code>answers_attributes</code>.",
        "operationId": "PatchProjectSessionsFromProjectSessionIdScaleTeamsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "The final_mark of the scale_team is calculated automatically from the answers values. If you want to patch the mark of a project for a student, patching the <code>team.final_mark</code> is the right way to do. It will recompile the <code>project_user.final_mark</code>. If you really want to update the final_mark of the scale_team, you need to patch the <code>answers_attributes</code>.",
        "operationId": "PutProjectSessionsFromProjectSessionIdScaleTeamsById",
        "summary": "update"
      }
    },
    "/project_sessions/:project_session_id/scales": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "comment": "Banh mi dreamcatcher ad natus. Aut blog sunt nostrum est repellendus. Fingerstache hammock echo sed.",
                  "correction_number": 3,
                  "created_at": "2016-05-04T10:45:05.519Z",
                  "disclaimer_md": "Adipisci iusto qui laborum tote bag letterpress brooklyn. Voluptatibus fanny pack ea wayfarers.",
                  "duration": 1800,
                  "evaluation": {
                    "id": 168,
                    "kind": "scale"
                  },
                  "evaluation_id": 168,
                  "guidelines_md": "Chartreuse sequi repellendus squid franzen qui. Voluptatum sint cornhole mustache single-origin coffee typewriter. Qui omnis ramps vitae gluten-free corrupti 8-bit nam.",
                  "id": 531,
                  "introduction_md": "Chambray mumblecore non harum mustache wayfarers eius. Sartorial lumbersexual street tenetur keffiyeh. Dolorum pbr&b eveniet nihil neque dolores non. Banh mi atque officia eaque cumque.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2015-04-14T16:07:38.122Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2015-04-14T16:07:38.122Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Unicooooorn !",
                  "sections": [
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1975,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:05.785Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5854,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1976,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.131Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5855,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1977,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.457Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5856,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1978,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:07.035Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5857,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "correction_number": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "disclaimer_md": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "evaluation": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "evaluation_id": {
                    "type": "number"
                  },
                  "guidelines_md": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "introduction_md": {
                    "type": "string"
                  },
                  "is_primary": {
                    "type": "boolean"
                  },
                  "languages": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "identifier",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "manual_subscription": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sections": {
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "questions": {
                          "items": {
                            "properties": {
                              "created_at": {
                                "type": "string"
                              },
                              "guidelines": {
                                "type": "string"
                              },
                              "id": {
                                "type": "number"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "rating": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "guidelines",
                              "rating",
                              "kind",
                              "created_at"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "questions",
                        "id",
                        "name",
                        "description"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "evaluation_id",
                  "guidelines_md",
                  "manual_subscription",
                  "id",
                  "correction_number",
                  "duration",
                  "sections",
                  "evaluation",
                  "is_primary",
                  "disclaimer_md",
                  "languages",
                  "introduction_md",
                  "comment",
                  "created_at",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdScales",
        "summary": "index"
      }
    },
    "/project_sessions/:project_session_id/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "validated",
                        "projects_user_id",
                        "id",
                        "login",
                        "url",
                        "leader",
                        "occurrence"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "created_at",
                  "locked?",
                  "repo_url",
                  "scale_teams",
                  "name",
                  "final_mark",
                  "project_id",
                  "validated?",
                  "closed?",
                  "project_session_id",
                  "teams_uploads",
                  "status",
                  "users",
                  "repo_uuid",
                  "closed_at",
                  "id",
                  "url",
                  "updated_at",
                  "terminating_at",
                  "locked_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetProjectSessionsFromProjectSessionIdTeams",
        "summary": "index"
      }
    },
    "/project_sessions/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 5
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project sessions"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectSessionsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/project_sessions_rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "GetProjectSessionsRules",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "PostProjectSessionsRules",
        "summary": "create"
      }
    },
    "/project_sessions_rules/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "DeleteProjectSessionsRulesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "GetProjectSessionsRulesById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "PatchProjectSessionsRulesById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Project sessions rules"
        ],
        "description": "",
        "operationId": "PutProjectSessionsRulesById",
        "summary": "update"
      }
    },
    "/project_sessions_rules/:project_sessions_rule_id/params_project_sessions_rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_sessions_rule_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "GetProjectSessionsRulesFromProjectSessionsRuleIdParamsProjectSessionsRules",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_sessions_rule_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "params_project_sessions_rule",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Params project sessions rules"
        ],
        "description": "",
        "operationId": "PostProjectSessionsRulesFromProjectSessionsRuleIdParamsProjectSessionsRules",
        "summary": "create"
      }
    },
    "/project_sessions_skills": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2019-07-03T12:21:11.956Z",
                  "id": 1,
                  "project_session_id": 1979,
                  "skill_id": 2,
                  "updated_at": "2019-07-03T12:21:11.956Z",
                  "value": 15
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "skill_id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "project_session_id",
                  "skill_id",
                  "value",
                  "created_at",
                  "updated_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project sessions skills"
        ],
        "description": "",
        "operationId": "GetProjectSessionsSkills",
        "summary": "index"
      }
    },
    "/project_sessions_skills/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2019-07-03T12:21:11.956Z",
                "id": 1,
                "project_session_id": 1979,
                "skill_id": 2,
                "updated_at": "2019-07-03T12:21:11.956Z",
                "value": 15
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "project_session_id": {
                  "type": "number"
                },
                "skill_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "project_session_id",
                "skill_id",
                "value",
                "created_at",
                "updated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project sessions skills"
        ],
        "description": "",
        "operationId": "GetProjectSessionsSkillsById",
        "summary": "show"
      }
    },
    "/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 12,
                      "kind": "general",
                      "name": "Libft"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:25.963Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The first project of 42 !",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 1,
                  "name": "Libft",
                  "objectives": [
                    "initiation"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.149Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 1,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 1,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 1,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:42:09.376Z",
                      "uploads": [
                        {
                          "id": 1,
                          "name": "Idaho kangaroos"
                        }
                      ]
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.305Z",
                      "id": 2,
                      "name": "Company experience"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "libft",
                  "updated_at": "2017-11-22T13:41:26.243Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 13,
                      "kind": "general",
                      "name": "Ordinary Wizarding Levels"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:26.356Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                  "difficulty": 5000,
                  "exam": true,
                  "id": 2,
                  "name": "Ordinary Wizarding Levels",
                  "objectives": [
                    "Wizarding"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.375Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 2,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 2,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 2,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:28.347Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    }
                  ],
                  "slug": "ordinary-wizarding-levels",
                  "updated_at": "2017-11-22T13:41:26.441Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 15,
                      "kind": "general",
                      "name": "Hogwarts Quidditch Cup"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [
                    {
                      "id": 5,
                      "name": "Quarter Finals",
                      "slug": "hogwarts-quidditch-cup-quarter-finals",
                      "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:26.765Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 4,
                  "name": "Hogwarts Quidditch Cup",
                  "objectives": [
                    "Quidditch"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.786Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": null,
                      "id": 4,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 4,
                      "scales": [],
                      "solo": false,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:26.786Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "hogwarts-quidditch-cup",
                  "updated_at": "2017-11-22T13:41:26.975Z",
                  "videos": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "attachments": {
                    "type": "array"
                  },
                  "campus": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "language": {
                          "properties": {
                            "created_at": {
                              "type": "string"
                            },
                            "id": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "identifier",
                            "created_at",
                            "updated_at",
                            "id",
                            "name"
                          ],
                          "type": "object"
                        },
                        "name": {
                          "type": "string"
                        },
                        "time_zone": {
                          "type": "string"
                        },
                        "users_count": {
                          "type": "number"
                        },
                        "vogsphere_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "users_count",
                        "vogsphere_id",
                        "id",
                        "name",
                        "time_zone",
                        "language"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "children": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "difficulty": {
                    "type": "number"
                  },
                  "exam": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "objectives": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "project_sessions": {
                    "items": {
                      "properties": {
                        "begin_at": {
                          "type": "null"
                        },
                        "campus_id": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "cursus_id": {
                          "type": "null"
                        },
                        "difficulty": {
                          "type": "number"
                        },
                        "duration_days": {
                          "type": "null"
                        },
                        "end_at": {
                          "type": "null"
                        },
                        "estimate_time": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "is_subscriptable": {
                          "type": "boolean"
                        },
                        "max_people": {
                          "type": "null"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "scales": {
                          "items": {
                            "properties": {
                              "correction_number": {
                                "type": "number"
                              },
                              "id": {
                                "type": "number"
                              },
                              "is_primary": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "correction_number",
                              "is_primary"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "solo": {
                          "type": "boolean"
                        },
                        "team_behaviour": {
                          "type": "string"
                        },
                        "terminating_after": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "uploads": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "difficulty",
                        "terminating_after",
                        "project_id",
                        "solo",
                        "duration_days",
                        "is_subscriptable",
                        "uploads",
                        "id",
                        "begin_at",
                        "estimate_time",
                        "campus_id",
                        "cursus_id",
                        "updated_at",
                        "scales",
                        "team_behaviour",
                        "end_at",
                        "created_at",
                        "max_people"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "skills": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "created_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "videos": {
                    "type": "array"
                  }
                },
                "required": [
                  "skills",
                  "videos",
                  "description",
                  "exam",
                  "cursus",
                  "campus",
                  "name",
                  "tags",
                  "project_sessions",
                  "parent",
                  "children",
                  "attachments",
                  "updated_at",
                  "created_at",
                  "id",
                  "slug",
                  "difficulty",
                  "objectives"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "GetProjects",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "tags": [],
                "attachments": [],
                "campus": [
                  {
                    "id": 6,
                    "language": {
                      "created_at": "2017-11-22T13:40:59.462Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2017-11-22T13:40:59.462Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "users_count": 19,
                    "vogsphere_id": 1
                  },
                  {
                    "id": 4,
                    "language": {
                      "created_at": "2017-11-22T13:40:59.465Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2017-11-22T13:40:59.465Z"
                    },
                    "name": "Kiev",
                    "time_zone": "Europe/Kiev",
                    "users_count": 22,
                    "vogsphere_id": null
                  },
                  {
                    "id": 2,
                    "language": {
                      "created_at": "2017-11-22T13:40:59.465Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2017-11-22T13:40:59.465Z"
                    },
                    "name": "Johannesburg",
                    "time_zone": "Africa/Johannesburg",
                    "users_count": 26,
                    "vogsphere_id": 1
                  }
                ],
                "children": [],
                "created_at": "2017-11-22T13:43:54.544Z",
                "cursus": [
                  {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  }
                ],
                "description": "Cleanse williamsburg brooklyn shabby chic pinterest kickstarter diy.",
                "difficulty": 5000,
                "exam": false,
                "id": 6,
                "name": "Butter In a Lordly Dish",
                "objectives": null,
                "parent": null,
                "project_sessions": [
                  {
                    "begin_at": null,
                    "campus_id": null,
                    "created_at": "2017-11-22T13:43:54.566Z",
                    "cursus_id": null,
                    "difficulty": 5000,
                    "duration_days": null,
                    "end_at": null,
                    "estimate_time": 2592000,
                    "id": 7,
                    "is_subscriptable": true,
                    "max_people": null,
                    "minimum_mark": 77,
                    "project_id": 6,
                    "scales": [],
                    "solo": true,
                    "team_behaviour": "user",
                    "terminating_after": null,
                    "updated_at": "2017-11-22T13:43:54.566Z",
                    "uploads": []
                  },
                  {
                    "begin_at": null,
                    "campus_id": null,
                    "created_at": "2017-11-22T13:43:54.574Z",
                    "cursus_id": 2,
                    "difficulty": 5000,
                    "duration_days": null,
                    "end_at": null,
                    "estimate_time": 2592000,
                    "id": 8,
                    "is_subscriptable": true,
                    "max_people": null,
                    "minimum_mark": 77,
                    "project_id": 6,
                    "scales": [],
                    "solo": true,
                    "team_behaviour": "user",
                    "terminating_after": null,
                    "updated_at": "2017-11-22T13:43:54.574Z",
                    "uploads": []
                  }
                ],
                "skills": [],
                "slug": "butter-in-a-lordly-dish",
                "updated_at": "2017-11-22T13:43:54.647Z",
                "videos": []
              }
            },
            "schema": {
              "properties": {
                "tags": {
                  "type": "array"
                },
                "attachments": {
                  "type": "array"
                },
                "campus": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "vogsphere_id",
                      "id",
                      "name",
                      "time_zone",
                      "language",
                      "users_count"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "children": {
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "difficulty": {
                  "type": "number"
                },
                "exam": {
                  "type": "boolean"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "objectives": {
                  "type": "null"
                },
                "parent": {
                  "type": "null"
                },
                "project_sessions": {
                  "items": {
                    "properties": {
                      "begin_at": {
                        "type": "null"
                      },
                      "campus_id": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "cursus_id": {
                        "type": "null"
                      },
                      "difficulty": {
                        "type": "number"
                      },
                      "duration_days": {
                        "type": "null"
                      },
                      "end_at": {
                        "type": "null"
                      },
                      "estimate_time": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_subscriptable": {
                        "type": "boolean"
                      },
                      "max_people": {
                        "type": "null"
                      },
                      "minimum_mark": {
                        "type": "number"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "scales": {
                        "type": "array"
                      },
                      "solo": {
                        "type": "boolean"
                      },
                      "team_behaviour": {
                        "type": "string"
                      },
                      "terminating_after": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "uploads": {
                        "type": "array"
                      }
                    },
                    "required": [
                      "team_behaviour",
                      "minimum_mark",
                      "end_at",
                      "estimate_time",
                      "cursus_id",
                      "updated_at",
                      "is_subscriptable",
                      "uploads",
                      "solo",
                      "project_id",
                      "created_at",
                      "difficulty",
                      "scales",
                      "id",
                      "begin_at",
                      "duration_days",
                      "terminating_after",
                      "campus_id",
                      "max_people"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "skills": {
                  "type": "array"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "videos": {
                  "type": "array"
                }
              },
              "required": [
                "slug",
                "children",
                "videos",
                "name",
                "updated_at",
                "cursus",
                "tags",
                "created_at",
                "difficulty",
                "objectives",
                "campus",
                "skills",
                "id",
                "parent",
                "attachments",
                "exam",
                "project_sessions",
                "description"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "PostProjects",
        "summary": "create"
      }
    },
    "/projects/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "DeleteProjectsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "tags": [
                  {
                    "id": 13,
                    "kind": "general",
                    "name": "Ordinary Wizarding Levels"
                  }
                ],
                "attachments": [],
                "campus": [
                  {
                    "id": 1,
                    "language": {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    },
                    "name": "Cluj",
                    "time_zone": "Europe/Bucharest",
                    "users_count": 28,
                    "vogsphere_id": 1
                  }
                ],
                "children": [],
                "created_at": "2017-11-22T13:41:26.356Z",
                "cursus": [
                  {
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "id": 1,
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  }
                ],
                "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                "difficulty": 5000,
                "exam": true,
                "id": 2,
                "name": "Ordinary Wizarding Levels",
                "objectives": [
                  "Wizarding"
                ],
                "parent": null,
                "project_sessions": [
                  {
                    "begin_at": null,
                    "campus_id": null,
                    "created_at": "2017-11-22T13:41:26.375Z",
                    "cursus_id": null,
                    "difficulty": 5000,
                    "duration_days": null,
                    "end_at": null,
                    "estimate_time": 2592000,
                    "id": 2,
                    "is_subscriptable": true,
                    "max_people": null,
                    "project_id": 2,
                    "scales": [
                      {
                        "correction_number": 3,
                        "id": 2,
                        "is_primary": true
                      }
                    ],
                    "solo": true,
                    "team_behaviour": "user",
                    "terminating_after": null,
                    "updated_at": "2017-11-22T13:41:28.347Z",
                    "uploads": []
                  }
                ],
                "skills": [
                  {
                    "created_at": "2017-11-22T13:41:00.448Z",
                    "id": 6,
                    "name": "Basics"
                  },
                  {
                    "created_at": "2017-11-22T13:41:00.257Z",
                    "id": 1,
                    "name": "Parallel computing"
                  }
                ],
                "slug": "ordinary-wizarding-levels",
                "updated_at": "2017-11-22T13:41:26.441Z",
                "videos": []
              }
            },
            "schema": {
              "properties": {
                "tags": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "id",
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "attachments": {
                  "type": "array"
                },
                "campus": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "updated_at",
                          "id",
                          "name",
                          "identifier",
                          "created_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "name",
                      "time_zone",
                      "language",
                      "users_count",
                      "vogsphere_id",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "children": {
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "description": {
                  "type": "string"
                },
                "difficulty": {
                  "type": "number"
                },
                "exam": {
                  "type": "boolean"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "objectives": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "parent": {
                  "type": "null"
                },
                "project_sessions": {
                  "items": {
                    "properties": {
                      "begin_at": {
                        "type": "null"
                      },
                      "campus_id": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "cursus_id": {
                        "type": "null"
                      },
                      "difficulty": {
                        "type": "number"
                      },
                      "duration_days": {
                        "type": "null"
                      },
                      "end_at": {
                        "type": "null"
                      },
                      "estimate_time": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_subscriptable": {
                        "type": "boolean"
                      },
                      "max_people": {
                        "type": "null"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "scales": {
                        "items": {
                          "properties": {
                            "correction_number": {
                              "type": "number"
                            },
                            "id": {
                              "type": "number"
                            },
                            "is_primary": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "correction_number",
                            "is_primary"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "solo": {
                        "type": "boolean"
                      },
                      "team_behaviour": {
                        "type": "string"
                      },
                      "terminating_after": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "uploads": {
                        "type": "array"
                      }
                    },
                    "required": [
                      "estimate_time",
                      "duration_days",
                      "project_id",
                      "updated_at",
                      "scales",
                      "id",
                      "difficulty",
                      "campus_id",
                      "created_at",
                      "uploads",
                      "end_at",
                      "cursus_id",
                      "terminating_after",
                      "begin_at",
                      "max_people",
                      "is_subscriptable",
                      "team_behaviour",
                      "solo"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "skills": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "id",
                      "name"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "videos": {
                  "type": "array"
                }
              },
              "required": [
                "created_at",
                "updated_at",
                "tags",
                "project_sessions",
                "name",
                "parent",
                "children",
                "attachments",
                "exam",
                "skills",
                "slug",
                "difficulty",
                "objectives",
                "cursus",
                "campus",
                "id",
                "description",
                "videos"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "GetProjectsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "PatchProjectsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "PutProjectsById",
        "summary": "update"
      }
    },
    "/projects/:id/retry": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "PatchProjectsFromIdRetry",
        "summary": "retry"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "PutProjectsFromIdRetry",
        "summary": "retry"
      }
    },
    "/projects/:project_id/attachments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdAttachments",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "attachment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Attachments"
        ],
        "description": "",
        "operationId": "PostProjectsFromProjectIdAttachments",
        "summary": "create"
      }
    },
    "/projects/:project_id/exams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "campus": {
                    "active": true,
                    "address": "96, boulevard Bessières",
                    "city": "Paris",
                    "country": "France",
                    "default_hidden_phone": false,
                    "email_extension": "42.fr",
                    "facebook": "https://facebook.com/42born2code",
                    "id": 1,
                    "language": {
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "twitter": "https://twitter.com/42born2code",
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "website": "http://www.42.fr/",
                    "zip": "75017"
                  },
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "cursus": [
                    {
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "id": 4,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "id": 6,
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "id": 13,
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "location": "e1, e2, e3",
                  "max_people": 780,
                  "name": "Piscine C - Exam 01",
                  "nbr_subscribers": 594,
                  "projects": [
                    {
                      "attachments": [],
                      "children": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "exam": true,
                      "git_id": null,
                      "id": 405,
                      "name": "Exam01",
                      "parent": null,
                      "repository": null,
                      "slug": "piscine-c-exam01",
                      "updated_at": "2021-09-01T08:35:01.074Z"
                    }
                  ],
                  "updated_at": "2018-08-27T16:56:15.032Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "default_hidden_phone": {
                        "type": "boolean"
                      },
                      "email_extension": {
                        "type": "string"
                      },
                      "facebook": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at",
                          "id"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      },
                      "website": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "time_zone",
                      "users_count",
                      "active",
                      "email_extension",
                      "default_hidden_phone",
                      "id",
                      "vogsphere_id",
                      "website",
                      "facebook",
                      "language",
                      "country",
                      "city",
                      "twitter",
                      "name",
                      "address",
                      "zip"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ip_range": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "projects": {
                    "items": {
                      "properties": {
                        "attachments": {
                          "type": "array"
                        },
                        "children": {
                          "type": "array"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "exam": {
                          "type": "boolean"
                        },
                        "git_id": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "null"
                        },
                        "repository": {
                          "type": "null"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "slug",
                        "parent",
                        "created_at",
                        "updated_at",
                        "exam",
                        "git_id",
                        "id",
                        "name",
                        "repository",
                        "children",
                        "attachments"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "begin_at",
                  "location",
                  "nbr_subscribers",
                  "campus",
                  "ip_range",
                  "end_at",
                  "max_people",
                  "name",
                  "created_at",
                  "updated_at",
                  "cursus",
                  "projects"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "List all visibles exams. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetProjectsFromProjectIdExams",
        "summary": "index"
      }
    },
    "/projects/:project_id/project_sessions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": null,
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:41:26.911Z",
                  "cursus": null,
                  "cursus_id": null,
                  "duration_days": null,
                  "end_at": null,
                  "estimate_time": null,
                  "evaluations": [
                    {
                      "id": 5,
                      "kind": "scale"
                    }
                  ],
                  "id": 5,
                  "is_subscriptable": true,
                  "max_people": null,
                  "project": {
                    "attachments": [],
                    "children": [],
                    "created_at": "2017-11-22T13:41:26.895Z",
                    "description": null,
                    "exam": false,
                    "id": 5,
                    "name": "Quarter Finals",
                    "objectives": null,
                    "parent": {
                      "id": 4,
                      "name": "Hogwarts Quidditch Cup",
                      "slug": "hogwarts-quidditch-cup",
                      "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup/mine"
                    },
                    "slug": "hogwarts-quidditch-cup-quarter-finals",
                    "tier": null,
                    "updated_at": "2017-11-22T13:41:26.973Z"
                  },
                  "project_id": 5,
                  "scales": [],
                  "solo": false,
                  "team_behaviour": "user",
                  "terminating_after": null,
                  "updated_at": "2017-11-22T13:41:26.911Z",
                  "uploads": []
                },
                {
                  "begin_at": null,
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:41:26.786Z",
                  "cursus": null,
                  "cursus_id": null,
                  "duration_days": null,
                  "end_at": null,
                  "estimate_time": null,
                  "evaluations": [],
                  "id": 4,
                  "is_subscriptable": true,
                  "max_people": null,
                  "project": {
                    "attachments": [],
                    "children": [
                      {
                        "id": 5,
                        "name": "Quarter Finals",
                        "slug": "hogwarts-quidditch-cup-quarter-finals",
                        "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                      }
                    ],
                    "created_at": "2017-11-22T13:41:26.765Z",
                    "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                    "exam": false,
                    "id": 4,
                    "name": "Hogwarts Quidditch Cup",
                    "objectives": [
                      "Quidditch"
                    ],
                    "parent": null,
                    "slug": "hogwarts-quidditch-cup",
                    "tier": 1,
                    "updated_at": "2017-11-22T13:41:26.975Z"
                  },
                  "project_id": 4,
                  "scales": [],
                  "solo": false,
                  "team_behaviour": "user",
                  "terminating_after": null,
                  "updated_at": "2017-11-22T13:41:26.786Z",
                  "uploads": []
                },
                {
                  "begin_at": null,
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:41:26.545Z",
                  "cursus": null,
                  "cursus_id": null,
                  "duration_days": null,
                  "end_at": null,
                  "estimate_time": 2592000,
                  "evaluations": [
                    {
                      "id": 4,
                      "kind": "scale"
                    }
                  ],
                  "id": 3,
                  "is_subscriptable": true,
                  "max_people": null,
                  "project": {
                    "attachments": [],
                    "children": [],
                    "created_at": "2017-11-22T13:41:26.537Z",
                    "description": "Something you shouldn't see",
                    "exam": true,
                    "id": 3,
                    "name": "Metaprogramming in OCaml",
                    "objectives": [
                      "Run away"
                    ],
                    "parent": null,
                    "slug": "metaprogramming-in-ocaml",
                    "tier": 1,
                    "updated_at": "2017-11-22T13:41:26.616Z"
                  },
                  "project_id": 3,
                  "scales": [],
                  "solo": true,
                  "team_behaviour": "user",
                  "terminating_after": null,
                  "updated_at": "2017-11-22T13:41:26.545Z",
                  "uploads": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "null"
                  },
                  "campus": {
                    "type": "null"
                  },
                  "campus_id": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "type": "null"
                  },
                  "cursus_id": {
                    "type": "null"
                  },
                  "duration_days": {
                    "type": "null"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "estimate_time": {
                    "type": "null"
                  },
                  "evaluations": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "kind",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "is_subscriptable": {
                    "type": "boolean"
                  },
                  "max_people": {
                    "type": "null"
                  },
                  "project": {
                    "properties": {
                      "attachments": {
                        "type": "array"
                      },
                      "children": {
                        "type": "array"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "null"
                      },
                      "exam": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "objectives": {
                        "type": "null"
                      },
                      "parent": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "id",
                          "slug",
                          "url"
                        ],
                        "type": "object"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "tier": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "tier",
                      "exam",
                      "slug",
                      "description",
                      "children",
                      "objectives",
                      "attachments",
                      "created_at",
                      "updated_at",
                      "id",
                      "name",
                      "parent"
                    ],
                    "type": "object"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "scales": {
                    "type": "array"
                  },
                  "solo": {
                    "type": "boolean"
                  },
                  "team_behaviour": {
                    "type": "string"
                  },
                  "terminating_after": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "uploads": {
                    "type": "array"
                  }
                },
                "required": [
                  "evaluations",
                  "id",
                  "begin_at",
                  "cursus_id",
                  "max_people",
                  "scales",
                  "solo",
                  "project_id",
                  "is_subscriptable",
                  "team_behaviour",
                  "campus",
                  "campus_id",
                  "created_at",
                  "updated_at",
                  "uploads",
                  "project",
                  "end_at",
                  "estimate_time",
                  "duration_days",
                  "terminating_after",
                  "cursus"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project sessions"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdProjectSessions",
        "summary": "index"
      }
    },
    "/projects/:project_id/project_sessions/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 5
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Project sessions"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectsFromProjectIdProjectSessionsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/projects/:project_id/projects": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 12,
                      "kind": "general",
                      "name": "Libft"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:25.963Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The first project of 42 !",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 1,
                  "name": "Libft",
                  "objectives": [
                    "initiation"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.149Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 1,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 1,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 1,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:42:09.376Z",
                      "uploads": [
                        {
                          "id": 1,
                          "name": "Idaho kangaroos"
                        }
                      ]
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.305Z",
                      "id": 2,
                      "name": "Company experience"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "libft",
                  "updated_at": "2017-11-22T13:41:26.243Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 13,
                      "kind": "general",
                      "name": "Ordinary Wizarding Levels"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [],
                  "created_at": "2017-11-22T13:41:26.356Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "Ordinary Wizarding Level (often abbreviated O.W.L.) is a subject-specific test taken during Hogwarts School of Witchcraft and Wizardry students' fifth year, administrated by the Wizarding Examinations Authority. The score made by a student on a particular O.W.L. determines whether or not he or she will be allowed to continue taking that subject in subsequent school years.",
                  "difficulty": 5000,
                  "exam": true,
                  "id": 2,
                  "name": "Ordinary Wizarding Levels",
                  "objectives": [
                    "Wizarding"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.375Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": 2592000,
                      "id": 2,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 2,
                      "scales": [
                        {
                          "correction_number": 3,
                          "id": 2,
                          "is_primary": true
                        }
                      ],
                      "solo": true,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:28.347Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    }
                  ],
                  "slug": "ordinary-wizarding-levels",
                  "updated_at": "2017-11-22T13:41:26.441Z",
                  "videos": []
                },
                {
                  "tags": [
                    {
                      "id": 15,
                      "kind": "general",
                      "name": "Hogwarts Quidditch Cup"
                    }
                  ],
                  "attachments": [],
                  "campus": [
                    {
                      "id": 1,
                      "language": {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      },
                      "name": "Cluj",
                      "time_zone": "Europe/Bucharest",
                      "users_count": 28,
                      "vogsphere_id": 1
                    }
                  ],
                  "children": [
                    {
                      "id": 5,
                      "name": "Quarter Finals",
                      "slug": "hogwarts-quidditch-cup-quarter-finals",
                      "url": "https://projects.intra.42.fr/hogwarts-quidditch-cup-quarter-finals/mine"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:26.765Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "description": "The game starts with the referee releasing all four balls from the central circle. The Bludgers and the Snitch, having been bewitched, fly off of their own accord, the Snitch to hide itself quickly and the Bludgers to attack the nearest players. The Quaffle is thrown into the air by the referee to signal the start of play.",
                  "difficulty": 5000,
                  "exam": false,
                  "id": 4,
                  "name": "Hogwarts Quidditch Cup",
                  "objectives": [
                    "Quidditch"
                  ],
                  "parent": null,
                  "project_sessions": [
                    {
                      "begin_at": null,
                      "campus_id": null,
                      "created_at": "2017-11-22T13:41:26.786Z",
                      "cursus_id": null,
                      "difficulty": 5000,
                      "duration_days": null,
                      "end_at": null,
                      "estimate_time": null,
                      "id": 4,
                      "is_subscriptable": true,
                      "max_people": null,
                      "project_id": 4,
                      "scales": [],
                      "solo": false,
                      "team_behaviour": "user",
                      "terminating_after": null,
                      "updated_at": "2017-11-22T13:41:26.786Z",
                      "uploads": []
                    }
                  ],
                  "skills": [
                    {
                      "created_at": "2017-11-22T13:41:00.448Z",
                      "id": 6,
                      "name": "Basics"
                    },
                    {
                      "created_at": "2017-11-22T13:41:00.257Z",
                      "id": 1,
                      "name": "Parallel computing"
                    }
                  ],
                  "slug": "hogwarts-quidditch-cup",
                  "updated_at": "2017-11-22T13:41:26.975Z",
                  "videos": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "kind"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "attachments": {
                    "type": "array"
                  },
                  "campus": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "language": {
                          "properties": {
                            "created_at": {
                              "type": "string"
                            },
                            "id": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "updated_at",
                            "id",
                            "name",
                            "identifier",
                            "created_at"
                          ],
                          "type": "object"
                        },
                        "name": {
                          "type": "string"
                        },
                        "time_zone": {
                          "type": "string"
                        },
                        "users_count": {
                          "type": "number"
                        },
                        "vogsphere_id": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "time_zone",
                        "language",
                        "users_count",
                        "vogsphere_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "children": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "difficulty": {
                    "type": "number"
                  },
                  "exam": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "objectives": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "project_sessions": {
                    "items": {
                      "properties": {
                        "begin_at": {
                          "type": "null"
                        },
                        "campus_id": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "cursus_id": {
                          "type": "null"
                        },
                        "difficulty": {
                          "type": "number"
                        },
                        "duration_days": {
                          "type": "null"
                        },
                        "end_at": {
                          "type": "null"
                        },
                        "estimate_time": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "is_subscriptable": {
                          "type": "boolean"
                        },
                        "max_people": {
                          "type": "null"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "scales": {
                          "items": {
                            "properties": {
                              "correction_number": {
                                "type": "number"
                              },
                              "id": {
                                "type": "number"
                              },
                              "is_primary": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "correction_number",
                              "is_primary"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "solo": {
                          "type": "boolean"
                        },
                        "team_behaviour": {
                          "type": "string"
                        },
                        "terminating_after": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "uploads": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "end_at",
                        "created_at",
                        "max_people",
                        "difficulty",
                        "terminating_after",
                        "project_id",
                        "solo",
                        "duration_days",
                        "is_subscriptable",
                        "uploads",
                        "updated_at",
                        "scales",
                        "team_behaviour",
                        "id",
                        "begin_at",
                        "estimate_time",
                        "campus_id",
                        "cursus_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "skills": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created_at",
                        "id",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "videos": {
                    "type": "array"
                  }
                },
                "required": [
                  "name",
                  "attachments",
                  "updated_at",
                  "tags",
                  "project_sessions",
                  "parent",
                  "children",
                  "difficulty",
                  "objectives",
                  "created_at",
                  "id",
                  "slug",
                  "cursus",
                  "campus",
                  "skills",
                  "videos",
                  "description",
                  "exam"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdProjects",
        "summary": "index"
      }
    },
    "/projects/:project_id/projects_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "current_team_id": 1,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 1,
                  "occurrence": 0,
                  "project": {
                    "id": 2,
                    "name": "Ordinary Wizarding Levels",
                    "parent_id": null,
                    "slug": "ordinary-wizarding-levels"
                  },
                  "status": "in_progress",
                  "teams": [
                    {
                      "closed?": false,
                      "closed_at": null,
                      "created_at": "2017-11-22T13:41:28.447Z",
                      "final_mark": null,
                      "id": 1,
                      "locked?": true,
                      "locked_at": "2017-11-22T13:41:28.487Z",
                      "name": "jabinks2's group",
                      "project_id": 2,
                      "project_session_id": 2,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                      "status": "in_progress",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.519Z",
                      "url": "https://api.intra.42.fr/v2/teams/1",
                      "users": [
                        {
                          "id": 111,
                          "leader": true,
                          "login": "coundook",
                          "occurrence": 0,
                          "projects_user_id": 1,
                          "url": "https://api.intra.42.fr/v2/users/coundook",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 111,
                    "login": "jabinks2",
                    "url": "https://api.intra.42.fr/v2/users/jabinks2"
                  },
                  "validated?": null
                },
                {
                  "current_team_id": 2,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 2,
                  "occurrence": 0,
                  "project": {
                    "id": 4,
                    "name": "Hogwarts Quidditch Cup",
                    "parent_id": null,
                    "slug": "hogwarts-quidditch-cup"
                  },
                  "status": "in_progress",
                  "teams": [
                    {
                      "closed?": true,
                      "closed_at": "2017-11-22T13:41:28.578Z",
                      "created_at": "2017-11-22T13:41:28.554Z",
                      "final_mark": null,
                      "id": 2,
                      "locked?": false,
                      "locked_at": null,
                      "name": "podamer2's group",
                      "project_id": 4,
                      "project_session_id": 4,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                      "status": "in_progress",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.608Z",
                      "url": "https://api.intra.42.fr/v2/teams/2",
                      "users": [
                        {
                          "id": 108,
                          "leader": true,
                          "login": "podamer2",
                          "occurrence": 0,
                          "projects_user_id": 2,
                          "url": "https://api.intra.42.fr/v2/users/podamer2",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  },
                  "validated?": null
                },
                {
                  "current_team_id": 3,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 3,
                  "occurrence": 0,
                  "project": {
                    "id": 5,
                    "name": "Quarter Finals",
                    "parent_id": 4,
                    "slug": "hogwarts-quidditch-cup-quarter-finals"
                  },
                  "status": "creating_group",
                  "teams": [
                    {
                      "closed?": false,
                      "closed_at": null,
                      "created_at": "2017-11-22T13:41:28.661Z",
                      "final_mark": null,
                      "id": 3,
                      "locked?": false,
                      "locked_at": null,
                      "name": "podamer2's group",
                      "project_id": 5,
                      "project_session_id": 5,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                      "status": "creating_group",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.704Z",
                      "url": "https://api.intra.42.fr/v2/teams/3",
                      "users": [
                        {
                          "id": 108,
                          "leader": true,
                          "login": "podamer2",
                          "occurrence": 0,
                          "projects_user_id": 3,
                          "url": "https://api.intra.42.fr/v2/users/podamer2",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  },
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "current_team_id": {
                    "type": "number"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "occurrence": {
                    "type": "number"
                  },
                  "project": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "null"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "slug",
                      "parent_id"
                    ],
                    "type": "object"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams": {
                    "items": {
                      "properties": {
                        "closed?": {
                          "type": "boolean"
                        },
                        "closed_at": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "final_mark": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "locked?": {
                          "type": "boolean"
                        },
                        "locked_at": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "project_session_id": {
                          "type": "number"
                        },
                        "repo_url": {
                          "type": "null"
                        },
                        "repo_uuid": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "terminating_at": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "users": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "leader": {
                                "type": "boolean"
                              },
                              "login": {
                                "type": "string"
                              },
                              "occurrence": {
                                "type": "number"
                              },
                              "projects_user_id": {
                                "type": "number"
                              },
                              "url": {
                                "type": "string"
                              },
                              "validated": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "id",
                              "login",
                              "url",
                              "leader",
                              "occurrence",
                              "validated",
                              "projects_user_id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "validated?": {
                          "type": "null"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "updated_at",
                        "repo_url",
                        "project_session_id",
                        "status",
                        "closed?",
                        "repo_uuid",
                        "final_mark",
                        "project_id",
                        "created_at",
                        "locked?",
                        "validated?",
                        "locked_at",
                        "closed_at",
                        "url",
                        "terminating_at",
                        "users"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "final_mark",
                  "validated?",
                  "project",
                  "current_team_id",
                  "cursus_ids",
                  "user",
                  "teams",
                  "id",
                  "occurrence",
                  "status"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdProjectsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "current_team_id": 69,
                "cursus_ids": [
                  1
                ],
                "final_mark": null,
                "id": 69,
                "occurrence": 0,
                "project": {
                  "id": 1,
                  "name": "Libft",
                  "parent_id": null,
                  "slug": "libft"
                },
                "status": "in_progress",
                "teams": [
                  {
                    "closed?": false,
                    "closed_at": null,
                    "created_at": "2017-11-22T13:43:56.555Z",
                    "final_mark": null,
                    "id": 69,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:43:56.581Z",
                    "name": "jeanne's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-d9a02ebd-ecdb-46fd-8ce8-ecdc4ef9352c-69",
                    "status": "in_progress",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:43:56.625Z",
                    "url": "https://api.intra.42.fr/v2/teams/69",
                    "users": [
                      {
                        "id": 1,
                        "leader": true,
                        "login": "jeanne",
                        "occurrence": 0,
                        "projects_user_id": 69,
                        "url": "https://api.intra.42.fr/v2/users/jeanne",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  }
                ],
                "user": {
                  "id": 1,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                },
                "validated?": null
              }
            },
            "schema": {
              "properties": {
                "current_team_id": {
                  "type": "number"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "occurrence": {
                  "type": "number"
                },
                "project": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "null"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "slug",
                    "parent_id"
                  ],
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "teams": {
                  "items": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "login",
                            "url",
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "name",
                      "users",
                      "locked?",
                      "repo_url",
                      "project_session_id",
                      "project_id",
                      "validated?",
                      "closed_at",
                      "final_mark",
                      "created_at",
                      "status",
                      "id",
                      "url",
                      "updated_at",
                      "terminating_at",
                      "closed?",
                      "repo_uuid",
                      "locked_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "validated?": {
                  "type": "null"
                }
              },
              "required": [
                "cursus_ids",
                "user",
                "teams",
                "final_mark",
                "status",
                "validated?",
                "current_team_id",
                "project",
                "id",
                "occurrence"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PostProjectsFromProjectIdProjectsUsers",
        "summary": "create"
      }
    },
    "/projects/:project_id/projects_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectsFromProjectIdProjectsUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/projects/:project_id/register": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "current_team_id": 69,
                "cursus_ids": [
                  1
                ],
                "final_mark": null,
                "id": 69,
                "occurrence": 0,
                "project": {
                  "id": 1,
                  "name": "Libft",
                  "parent_id": null,
                  "slug": "libft"
                },
                "status": "in_progress",
                "teams": [
                  {
                    "closed?": false,
                    "closed_at": null,
                    "created_at": "2017-11-22T13:43:56.555Z",
                    "final_mark": null,
                    "id": 69,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:43:56.581Z",
                    "name": "jeanne's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-d9a02ebd-ecdb-46fd-8ce8-ecdc4ef9352c-69",
                    "status": "in_progress",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:43:56.625Z",
                    "url": "https://api.intra.42.fr/v2/teams/69",
                    "users": [
                      {
                        "id": 1,
                        "leader": true,
                        "login": "jeanne",
                        "occurrence": 0,
                        "projects_user_id": 69,
                        "url": "https://api.intra.42.fr/v2/users/jeanne",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  }
                ],
                "user": {
                  "id": 1,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                },
                "validated?": null
              }
            },
            "schema": {
              "properties": {
                "current_team_id": {
                  "type": "number"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "occurrence": {
                  "type": "number"
                },
                "project": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "null"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "slug",
                    "parent_id"
                  ],
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "teams": {
                  "items": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id",
                            "id",
                            "login",
                            "url"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "terminating_at",
                      "closed?",
                      "repo_uuid",
                      "locked_at",
                      "id",
                      "url",
                      "updated_at",
                      "repo_url",
                      "project_session_id",
                      "name",
                      "users",
                      "locked?",
                      "project_id",
                      "validated?",
                      "closed_at",
                      "final_mark",
                      "created_at",
                      "status"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "validated?": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "occurrence",
                "validated?",
                "current_team_id",
                "project",
                "final_mark",
                "status",
                "cursus_ids",
                "user",
                "teams"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PostProjectsFromProjectIdRegister",
        "summary": "create"
      }
    },
    "/projects/:project_id/scale_teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdScaleTeams",
        "summary": "index"
      }
    },
    "/projects/:project_id/scale_teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 1
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectsFromProjectIdScaleTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/projects/:project_id/scales": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "comment": "Banh mi dreamcatcher ad natus. Aut blog sunt nostrum est repellendus. Fingerstache hammock echo sed.",
                  "correction_number": 3,
                  "created_at": "2016-05-04T10:45:05.519Z",
                  "disclaimer_md": "Adipisci iusto qui laborum tote bag letterpress brooklyn. Voluptatibus fanny pack ea wayfarers.",
                  "duration": 1800,
                  "evaluation": {
                    "id": 168,
                    "kind": "scale"
                  },
                  "evaluation_id": 168,
                  "guidelines_md": "Chartreuse sequi repellendus squid franzen qui. Voluptatum sint cornhole mustache single-origin coffee typewriter. Qui omnis ramps vitae gluten-free corrupti 8-bit nam.",
                  "id": 531,
                  "introduction_md": "Chambray mumblecore non harum mustache wayfarers eius. Sartorial lumbersexual street tenetur keffiyeh. Dolorum pbr&b eveniet nihil neque dolores non. Banh mi atque officia eaque cumque.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2015-04-14T16:07:38.122Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2015-04-14T16:07:38.122Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Unicooooorn !",
                  "sections": [
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1975,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:05.785Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5854,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1976,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.131Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5855,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1977,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.457Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5856,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1978,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:07.035Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5857,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "correction_number": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "disclaimer_md": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "evaluation": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "evaluation_id": {
                    "type": "number"
                  },
                  "guidelines_md": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "introduction_md": {
                    "type": "string"
                  },
                  "is_primary": {
                    "type": "boolean"
                  },
                  "languages": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "identifier",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "manual_subscription": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sections": {
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "questions": {
                          "items": {
                            "properties": {
                              "created_at": {
                                "type": "string"
                              },
                              "guidelines": {
                                "type": "string"
                              },
                              "id": {
                                "type": "number"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "rating": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "guidelines",
                              "rating",
                              "kind",
                              "created_at"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "questions"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "introduction_md",
                  "disclaimer_md",
                  "languages",
                  "name",
                  "comment",
                  "created_at",
                  "id",
                  "evaluation_id",
                  "guidelines_md",
                  "manual_subscription",
                  "is_primary",
                  "correction_number",
                  "duration",
                  "sections",
                  "evaluation"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdScales",
        "summary": "index"
      }
    },
    "/projects/:project_id/slots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 27,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 76,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 110,
                  "scale_team": null,
                  "user": "invisible"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "scale_team": {
                    "type": "null"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "scale_team",
                  "user",
                  "id",
                  "begin_at",
                  "end_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nThis call obviously lists all slots.An user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.\n<ul>\n<li><strong>if there is a resource owner</strong> (an user uses this api trough your app, with the <a href=\"http://api.intra.42.fr/apidoc/guides/web_application_flow\">web application flow</a>):\n<ul>\n<li>The <code>/me/slots</code> endpoint will list all the slots set by the current user.</li>\n\n<li>The <code>/projects/:project_id/slots</code> endpoint will list all the available slots for the given project. Theses slots can be booked by the current user in order to make a defense.</li>\n</ul>\n</li>\n\n<li><strong>if there isn’t a resource owner</strong>\n<ul>\n<li>The <code>/projects/:project_id/slots</code> endpoint lists all the slots scheduled (with a <code>scale_team</code>) on this project, including all the past ones.</li>\n\n<li>The <code>/users/:user_id/slots</code> endpoint lists all the slots for the requested user, as evaluator and as evaluated. This call is restricted.</li>\n</ul>\n</li>\n</ul>\nIn all the cases, the <code>/slots</code> endpoint lists all the slots, booked or not, including all the past ones.",
        "operationId": "GetProjectsFromProjectIdSlots",
        "summary": "index"
      }
    },
    "/projects/:project_id/slots/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-20": 123,
                "2017-11-21": 0,
                "2017-11-22": 0,
                "2017-11-23": 0,
                "2017-11-24": 1266
              }
            },
            "schema": {
              "properties": {
                "2017-11-20": {
                  "type": "number"
                },
                "2017-11-21": {
                  "type": "number"
                },
                "2017-11-22": {
                  "type": "number"
                },
                "2017-11-23": {
                  "type": "number"
                },
                "2017-11-24": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-20",
                "2017-11-21",
                "2017-11-22",
                "2017-11-23",
                "2017-11-24"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectsFromProjectIdSlotsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/projects/:project_id/tags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issue_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 11,
                  "kind": "archived",
                  "name": "Archived",
                  "subnotions": [],
                  "users": []
                },
                {
                  "id": 7,
                  "kind": "general",
                  "name": "Bocal",
                  "subnotions": [
                    {
                      "created_at": "2017-11-22T13:41:24.154Z",
                      "id": 1,
                      "name": "Emacs",
                      "notepad": null,
                      "slug": "piscine-c-text-editors-emacs"
                    }
                  ],
                  "users": []
                },
                {
                  "id": 4,
                  "kind": "project",
                  "name": "Colle 08",
                  "subnotions": [],
                  "users": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  },
                  "users": {
                    "type": "array"
                  }
                },
                "required": [
                  "subnotions",
                  "id",
                  "name",
                  "kind",
                  "users"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdTags",
        "summary": "index"
      }
    },
    "/projects/:project_id/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "projects_user_id",
                        "id",
                        "login",
                        "url",
                        "leader",
                        "occurrence",
                        "validated"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "created_at",
                  "locked?",
                  "repo_url",
                  "scale_teams",
                  "name",
                  "final_mark",
                  "project_id",
                  "validated?",
                  "closed?",
                  "project_session_id",
                  "teams_uploads",
                  "status",
                  "users",
                  "repo_uuid",
                  "closed_at",
                  "id",
                  "url",
                  "updated_at",
                  "terminating_at",
                  "locked_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdTeams",
        "summary": "index"
      }
    },
    "/projects/:project_id/teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectsFromProjectIdTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/projects/:project_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "updated_at",
                  "alumni?",
                  "first_name",
                  "location"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetProjectsFromProjectIdUsers",
        "summary": "index"
      }
    },
    "/projects_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "current_team_id": 1,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 1,
                  "occurrence": 0,
                  "project": {
                    "id": 2,
                    "name": "Ordinary Wizarding Levels",
                    "parent_id": null,
                    "slug": "ordinary-wizarding-levels"
                  },
                  "status": "in_progress",
                  "teams": [
                    {
                      "closed?": false,
                      "closed_at": null,
                      "created_at": "2017-11-22T13:41:28.447Z",
                      "final_mark": null,
                      "id": 1,
                      "locked?": true,
                      "locked_at": "2017-11-22T13:41:28.487Z",
                      "name": "jabinks2's group",
                      "project_id": 2,
                      "project_session_id": 2,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                      "status": "in_progress",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.519Z",
                      "url": "https://api.intra.42.fr/v2/teams/1",
                      "users": [
                        {
                          "id": 111,
                          "leader": true,
                          "login": "coundook",
                          "occurrence": 0,
                          "projects_user_id": 1,
                          "url": "https://api.intra.42.fr/v2/users/coundook",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 111,
                    "login": "jabinks2",
                    "url": "https://api.intra.42.fr/v2/users/jabinks2"
                  },
                  "validated?": null
                },
                {
                  "current_team_id": 2,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 2,
                  "occurrence": 0,
                  "project": {
                    "id": 4,
                    "name": "Hogwarts Quidditch Cup",
                    "parent_id": null,
                    "slug": "hogwarts-quidditch-cup"
                  },
                  "status": "in_progress",
                  "teams": [
                    {
                      "closed?": true,
                      "closed_at": "2017-11-22T13:41:28.578Z",
                      "created_at": "2017-11-22T13:41:28.554Z",
                      "final_mark": null,
                      "id": 2,
                      "locked?": false,
                      "locked_at": null,
                      "name": "podamer2's group",
                      "project_id": 4,
                      "project_session_id": 4,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                      "status": "in_progress",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.608Z",
                      "url": "https://api.intra.42.fr/v2/teams/2",
                      "users": [
                        {
                          "id": 108,
                          "leader": true,
                          "login": "podamer2",
                          "occurrence": 0,
                          "projects_user_id": 2,
                          "url": "https://api.intra.42.fr/v2/users/podamer2",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  },
                  "validated?": null
                },
                {
                  "current_team_id": 3,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 3,
                  "occurrence": 0,
                  "project": {
                    "id": 5,
                    "name": "Quarter Finals",
                    "parent_id": 4,
                    "slug": "hogwarts-quidditch-cup-quarter-finals"
                  },
                  "status": "creating_group",
                  "teams": [
                    {
                      "closed?": false,
                      "closed_at": null,
                      "created_at": "2017-11-22T13:41:28.661Z",
                      "final_mark": null,
                      "id": 3,
                      "locked?": false,
                      "locked_at": null,
                      "name": "podamer2's group",
                      "project_id": 5,
                      "project_session_id": 5,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                      "status": "creating_group",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.704Z",
                      "url": "https://api.intra.42.fr/v2/teams/3",
                      "users": [
                        {
                          "id": 108,
                          "leader": true,
                          "login": "podamer2",
                          "occurrence": 0,
                          "projects_user_id": 3,
                          "url": "https://api.intra.42.fr/v2/users/podamer2",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  },
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "current_team_id": {
                    "type": "number"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "occurrence": {
                    "type": "number"
                  },
                  "project": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "null"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "slug",
                      "parent_id"
                    ],
                    "type": "object"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams": {
                    "items": {
                      "properties": {
                        "closed?": {
                          "type": "boolean"
                        },
                        "closed_at": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "final_mark": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "locked?": {
                          "type": "boolean"
                        },
                        "locked_at": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "project_session_id": {
                          "type": "number"
                        },
                        "repo_url": {
                          "type": "null"
                        },
                        "repo_uuid": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "terminating_at": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "users": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "leader": {
                                "type": "boolean"
                              },
                              "login": {
                                "type": "string"
                              },
                              "occurrence": {
                                "type": "number"
                              },
                              "projects_user_id": {
                                "type": "number"
                              },
                              "url": {
                                "type": "string"
                              },
                              "validated": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "login",
                              "url",
                              "leader",
                              "occurrence",
                              "validated",
                              "projects_user_id",
                              "id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "validated?": {
                          "type": "null"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "updated_at",
                        "repo_url",
                        "project_session_id",
                        "status",
                        "closed?",
                        "repo_uuid",
                        "final_mark",
                        "project_id",
                        "created_at",
                        "locked?",
                        "validated?",
                        "locked_at",
                        "closed_at",
                        "url",
                        "terminating_at",
                        "users"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "occurrence",
                  "status",
                  "current_team_id",
                  "cursus_ids",
                  "user",
                  "teams",
                  "id",
                  "validated?",
                  "project",
                  "final_mark"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "GetProjectsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "current_team_id": 69,
                "cursus_ids": [
                  1
                ],
                "final_mark": null,
                "id": 69,
                "occurrence": 0,
                "project": {
                  "id": 1,
                  "name": "Libft",
                  "parent_id": null,
                  "slug": "libft"
                },
                "status": "in_progress",
                "teams": [
                  {
                    "closed?": false,
                    "closed_at": null,
                    "created_at": "2017-11-22T13:43:56.555Z",
                    "final_mark": null,
                    "id": 69,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:43:56.581Z",
                    "name": "jeanne's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-d9a02ebd-ecdb-46fd-8ce8-ecdc4ef9352c-69",
                    "status": "in_progress",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:43:56.625Z",
                    "url": "https://api.intra.42.fr/v2/teams/69",
                    "users": [
                      {
                        "id": 1,
                        "leader": true,
                        "login": "jeanne",
                        "occurrence": 0,
                        "projects_user_id": 69,
                        "url": "https://api.intra.42.fr/v2/users/jeanne",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  }
                ],
                "user": {
                  "id": 1,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                },
                "validated?": null
              }
            },
            "schema": {
              "properties": {
                "current_team_id": {
                  "type": "number"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "occurrence": {
                  "type": "number"
                },
                "project": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "null"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "slug",
                    "parent_id",
                    "id",
                    "name"
                  ],
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "teams": {
                  "items": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "login",
                            "url",
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "project_id",
                      "validated?",
                      "closed_at",
                      "final_mark",
                      "created_at",
                      "status",
                      "terminating_at",
                      "closed?",
                      "repo_uuid",
                      "locked_at",
                      "id",
                      "url",
                      "updated_at",
                      "repo_url",
                      "project_session_id",
                      "name",
                      "users",
                      "locked?"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                },
                "validated?": {
                  "type": "null"
                }
              },
              "required": [
                "cursus_ids",
                "user",
                "teams",
                "final_mark",
                "status",
                "validated?",
                "current_team_id",
                "project",
                "id",
                "occurrence"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PostProjectsUsers",
        "summary": "create"
      }
    },
    "/projects_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "DeleteProjectsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "current_team_id": 18,
                "cursus_ids": [
                  1
                ],
                "final_mark": null,
                "id": 18,
                "occurrence": 0,
                "project": {
                  "id": 1,
                  "name": "Libft",
                  "parent_id": null,
                  "slug": "libft"
                },
                "status": "waiting_for_correction",
                "teams": [
                  {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:30.919Z",
                    "created_at": "2017-11-22T13:41:30.835Z",
                    "final_mark": null,
                    "id": 18,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:30.895Z",
                    "name": "bhutt's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-0d4153cd-21b7-4f1a-a526-297314ddc61d-18",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:30.920Z",
                    "url": "https://api.intra.42.fr/v2/teams/18",
                    "users": [
                      {
                        "id": 25,
                        "leader": true,
                        "login": "bhutt",
                        "occurrence": 0,
                        "projects_user_id": 18,
                        "url": "https://api.intra.42.fr/v2/users/bhutt",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  }
                ],
                "user": {
                  "id": 25,
                  "login": "bhutt",
                  "url": "https://api.intra.42.fr/v2/users/bhutt"
                },
                "validated?": null
              }
            },
            "schema": {
              "properties": {
                "current_team_id": {
                  "type": "number"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "occurrence": {
                  "type": "number"
                },
                "project": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "null"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "slug",
                    "parent_id"
                  ],
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "teams": {
                  "items": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "url",
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id",
                            "id",
                            "login"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "created_at",
                      "updated_at",
                      "validated?",
                      "closed_at",
                      "name",
                      "project_id",
                      "repo_uuid",
                      "status",
                      "closed?",
                      "users",
                      "locked?",
                      "final_mark",
                      "terminating_at",
                      "repo_url",
                      "locked_at",
                      "project_session_id",
                      "id",
                      "url"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "validated?": {
                  "type": "null"
                }
              },
              "required": [
                "final_mark",
                "current_team_id",
                "user",
                "teams",
                "project",
                "cursus_ids",
                "id",
                "occurrence",
                "status",
                "validated?"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "GetProjectsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PatchProjectsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PutProjectsUsersById",
        "summary": "update"
      }
    },
    "/projects_users/:id/compile": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_users_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PatchProjectsUsersFromIdCompile",
        "summary": "compile"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_users_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PutProjectsUsersFromIdCompile",
        "summary": "compile"
      }
    },
    "/projects_users/:id/retry": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PatchProjectsUsersFromIdRetry",
        "summary": "retry"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "force",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PutProjectsUsersFromIdRetry",
        "summary": "retry"
      }
    },
    "/projects_users/:projects_user_id/experiences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetProjectsUsersFromProjectsUserIdExperiences",
        "summary": "index"
      }
    },
    "/projects_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetProjectsUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/quests": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:42:11.464Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "description": "Reach the level 14.",
                  "grade": null,
                  "grade_id": null,
                  "id": 1,
                  "internal_name": null,
                  "kind": "main",
                  "name": "Level 14",
                  "position": 1,
                  "slug": "level-14",
                  "updated_at": "2017-11-22T13:42:11.464Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus": {
                    "type": "null"
                  },
                  "campus_id": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "grade": {
                    "type": "null"
                  },
                  "grade_id": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "internal_name": {
                    "type": "null"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "internal_name",
                  "description",
                  "id",
                  "created_at",
                  "name",
                  "updated_at",
                  "campus",
                  "grade_id",
                  "position",
                  "grade",
                  "cursus",
                  "slug",
                  "cursus_id",
                  "campus_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "GetQuests",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "quest",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "ancestry": null,
                "campus": null,
                "campus_id": null,
                "created_at": "2017-11-22T13:43:57.270Z",
                "cursus": {
                  "created_at": "2017-11-22T13:41:00.750Z",
                  "id": 1,
                  "name": "Piscine C",
                  "slug": "piscine-c"
                },
                "cursus_id": 1,
                "description": "You must take a coffee.",
                "duration": null,
                "grade": null,
                "grade_id": null,
                "guild_prct": null,
                "guild_size": null,
                "id": 2,
                "internal_name": null,
                "kind": "main",
                "mails": null,
                "name": "Take a coffee ☕️",
                "position": 2,
                "slug": "take-a-coffee",
                "updated_at": "2017-11-22T13:43:57.270Z"
              }
            },
            "schema": {
              "properties": {
                "ancestry": {
                  "type": "null"
                },
                "campus": {
                  "type": "null"
                },
                "campus_id": {
                  "type": "null"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "name",
                    "slug"
                  ],
                  "type": "object"
                },
                "cursus_id": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                },
                "duration": {
                  "type": "null"
                },
                "grade": {
                  "type": "null"
                },
                "grade_id": {
                  "type": "null"
                },
                "guild_prct": {
                  "type": "null"
                },
                "guild_size": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "internal_name": {
                  "type": "null"
                },
                "kind": {
                  "type": "string"
                },
                "mails": {
                  "type": "null"
                },
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "internal_name",
                "cursus_id",
                "grade_id",
                "guild_size",
                "duration",
                "id",
                "name",
                "grade",
                "slug",
                "created_at",
                "ancestry",
                "description",
                "updated_at",
                "position",
                "guild_prct",
                "mails",
                "cursus",
                "campus",
                "kind",
                "campus_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "PostQuests",
        "summary": "create"
      }
    },
    "/quests/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "DeleteQuestsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "campus": null,
                "campus_id": null,
                "created_at": "2017-11-22T13:42:11.464Z",
                "cursus": {
                  "created_at": "2017-11-22T13:41:00.825Z",
                  "id": 2,
                  "name": "42",
                  "slug": "42"
                },
                "cursus_id": 2,
                "description": "Reach the level 14.",
                "grade": null,
                "grade_id": null,
                "id": 1,
                "internal_name": null,
                "kind": "main",
                "name": "Level 14",
                "position": 1,
                "slug": "level-14",
                "updated_at": "2017-11-22T13:42:11.464Z"
              }
            },
            "schema": {
              "properties": {
                "campus": {
                  "type": "null"
                },
                "campus_id": {
                  "type": "null"
                },
                "created_at": {
                  "type": "string"
                },
                "cursus": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "slug",
                    "id",
                    "created_at"
                  ],
                  "type": "object"
                },
                "cursus_id": {
                  "type": "number"
                },
                "description": {
                  "type": "string"
                },
                "grade": {
                  "type": "null"
                },
                "grade_id": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "internal_name": {
                  "type": "null"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "position": {
                  "type": "number"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "description",
                "campus_id",
                "updated_at",
                "campus",
                "kind",
                "grade",
                "slug",
                "cursus_id",
                "created_at",
                "grade_id",
                "position",
                "id",
                "internal_name",
                "cursus",
                "name"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "GetQuestsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "PatchQuestsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "PutQuestsById",
        "summary": "update"
      }
    },
    "/quests/:quest_id/quests_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.488Z",
                  "end_at": null,
                  "id": 5,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.488Z",
                  "user": {
                    "id": 113,
                    "login": "bhutt3",
                    "url": "https://api.intra.42.fr/v2/users/bhutt3"
                  },
                  "validated_at": null
                },
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.484Z",
                  "end_at": null,
                  "id": 4,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.484Z",
                  "user": {
                    "id": 53,
                    "login": "dvader",
                    "url": "https://api.intra.42.fr/v2/users/dvader"
                  },
                  "validated_at": null
                },
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.480Z",
                  "end_at": null,
                  "id": 3,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.480Z",
                  "user": {
                    "id": 15,
                    "login": "mwindu",
                    "url": "https://api.intra.42.fr/v2/users/mwindu"
                  },
                  "validated_at": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "advancement": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "prct": {
                    "type": "null"
                  },
                  "quest": {
                    "properties": {
                      "campus_id": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "cursus_id": {
                        "type": "number"
                      },
                      "description": {
                        "type": "string"
                      },
                      "grade_id": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "internal_name": {
                        "type": "null"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "position": {
                        "type": "number"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "internal_name",
                      "description",
                      "cursus_id",
                      "campus_id",
                      "created_at",
                      "grade_id",
                      "position",
                      "slug",
                      "kind",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "quest_id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "validated_at": {
                    "type": "null"
                  }
                },
                "required": [
                  "prct",
                  "advancement",
                  "updated_at",
                  "user",
                  "quest",
                  "id",
                  "end_at",
                  "quest_id",
                  "validated_at",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "GetQuestsFromQuestIdQuestsUsers",
        "summary": "index"
      }
    },
    "/quests/:quest_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetQuestsFromQuestIdUsers",
        "summary": "index"
      }
    },
    "/quests_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.488Z",
                  "end_at": null,
                  "id": 5,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.488Z",
                  "user": {
                    "id": 113,
                    "login": "bhutt3",
                    "url": "https://api.intra.42.fr/v2/users/bhutt3"
                  },
                  "validated_at": null
                },
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.484Z",
                  "end_at": null,
                  "id": 4,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.484Z",
                  "user": {
                    "id": 53,
                    "login": "dvader",
                    "url": "https://api.intra.42.fr/v2/users/dvader"
                  },
                  "validated_at": null
                },
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.480Z",
                  "end_at": null,
                  "id": 3,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.480Z",
                  "user": {
                    "id": 15,
                    "login": "mwindu",
                    "url": "https://api.intra.42.fr/v2/users/mwindu"
                  },
                  "validated_at": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "advancement": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "prct": {
                    "type": "null"
                  },
                  "quest": {
                    "properties": {
                      "campus_id": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "cursus_id": {
                        "type": "number"
                      },
                      "description": {
                        "type": "string"
                      },
                      "grade_id": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "internal_name": {
                        "type": "null"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "position": {
                        "type": "number"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "grade_id",
                      "id",
                      "name",
                      "internal_name",
                      "description",
                      "cursus_id",
                      "campus_id",
                      "position",
                      "slug",
                      "kind",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "quest_id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "validated_at": {
                    "type": "null"
                  }
                },
                "required": [
                  "validated_at",
                  "created_at",
                  "id",
                  "end_at",
                  "quest_id",
                  "user",
                  "quest",
                  "prct",
                  "advancement",
                  "updated_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "GetQuestsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "quests_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "advancement": null,
                "created_at": "2017-11-22T13:43:58.265Z",
                "end_at": "2017-11-24T13:43:10.000Z",
                "id": 6,
                "prct": 42,
                "quest": {
                  "ancestry": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:43:58.221Z",
                  "cursus_id": 2,
                  "description": "You must take a coffee.",
                  "duration": null,
                  "grade_id": null,
                  "guild_prct": null,
                  "guild_size": null,
                  "id": 4,
                  "internal_name": null,
                  "kind": "main",
                  "mails": null,
                  "name": "Take a coffee ☕️",
                  "position": 2,
                  "slug": "take-a-coffee",
                  "updated_at": "2017-11-22T13:43:58.221Z"
                },
                "quest_id": 4,
                "updated_at": "2017-11-22T13:43:58.265Z",
                "user": {
                  "id": 117,
                  "login": "leiorgan",
                  "url": "https://api.intra.42.fr/v2/users/leiorgan"
                },
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "advancement": {
                  "type": "null"
                },
                "created_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "prct": {
                  "type": "number"
                },
                "quest": {
                  "properties": {
                    "ancestry": {
                      "type": "null"
                    },
                    "campus_id": {
                      "type": "null"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "cursus_id": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "null"
                    },
                    "grade_id": {
                      "type": "null"
                    },
                    "guild_prct": {
                      "type": "null"
                    },
                    "guild_size": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "internal_name": {
                      "type": "null"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "mails": {
                      "type": "null"
                    },
                    "name": {
                      "type": "string"
                    },
                    "position": {
                      "type": "number"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "kind",
                    "internal_name",
                    "campus_id",
                    "ancestry",
                    "name",
                    "cursus_id",
                    "guild_prct",
                    "description",
                    "created_at",
                    "updated_at",
                    "position",
                    "duration",
                    "slug",
                    "grade_id",
                    "guild_size",
                    "mails",
                    "id"
                  ],
                  "type": "object"
                },
                "quest_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "end_at",
                "prct",
                "created_at",
                "quest_id",
                "validated_at",
                "advancement",
                "updated_at",
                "user",
                "quest"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "PostQuestsUsers",
        "summary": "create"
      }
    },
    "/quests_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "DeleteQuestsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "advancement": null,
                "created_at": "2017-11-22T13:42:11.480Z",
                "end_at": null,
                "id": 3,
                "prct": null,
                "quest": {
                  "campus_id": null,
                  "created_at": "2017-11-22T13:42:11.464Z",
                  "cursus_id": 2,
                  "description": "Reach the level 14.",
                  "grade_id": null,
                  "id": 1,
                  "internal_name": null,
                  "kind": "main",
                  "name": "Level 14",
                  "position": 1,
                  "slug": "level-14",
                  "updated_at": "2017-11-22T13:42:11.464Z"
                },
                "quest_id": 1,
                "updated_at": "2017-11-22T13:42:11.480Z",
                "user": {
                  "id": 15,
                  "login": "mwindu",
                  "url": "https://api.intra.42.fr/v2/users/mwindu"
                },
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "advancement": {
                  "type": "null"
                },
                "created_at": {
                  "type": "string"
                },
                "end_at": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "prct": {
                  "type": "null"
                },
                "quest": {
                  "properties": {
                    "campus_id": {
                      "type": "null"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "cursus_id": {
                      "type": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "grade_id": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "internal_name": {
                      "type": "null"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "position": {
                      "type": "number"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "slug",
                    "campus_id",
                    "created_at",
                    "updated_at",
                    "position",
                    "cursus_id",
                    "grade_id",
                    "id",
                    "name",
                    "kind",
                    "internal_name",
                    "description"
                  ],
                  "type": "object"
                },
                "quest_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "end_at",
                "quest_id",
                "advancement",
                "updated_at",
                "user",
                "id",
                "prct",
                "created_at",
                "quest",
                "validated_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "GetQuestsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quests_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "PatchQuestsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quests_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "PutQuestsUsersById",
        "summary": "update"
      }
    },
    "/quests_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 5
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetQuestsUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/reports/:report_id/patronages_reports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "GetReportsFromReportIdPatronagesReports",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronages_report",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "answers": [],
                "begin_at": "2017-11-22T13:43:10.000Z",
                "created_at": "2017-11-22T13:43:51.496Z",
                "id": 127,
                "patronage": {
                  "created_at": "2017-11-22T13:42:12.541Z",
                  "godfather_id": 96,
                  "id": 98,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:43:51.499Z",
                  "user_id": 107
                },
                "patronage_id": 98,
                "report": {
                  "comment": "",
                  "created_at": "2017-11-22T13:42:11.309Z",
                  "delay_days": 210,
                  "disclaimer_md": "",
                  "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                  "id": 0,
                  "introduction_md": "",
                  "name": "Final Debriefing",
                  "slug": "final-debriefing",
                  "updated_at": "2017-11-22T13:42:11.416Z"
                },
                "report_id": 0,
                "updated_at": "2017-11-22T13:43:51.496Z",
                "user": {
                  "id": 27,
                  "login": "dcaedus",
                  "url": "https://api.intra.42.fr/v2/users/dcaedus"
                },
                "user_id": 27,
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "answers": {
                  "type": "array"
                },
                "begin_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "patronage": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "godfather_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "ongoing": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "updated_at",
                    "id",
                    "user_id",
                    "godfather_id",
                    "ongoing",
                    "created_at"
                  ],
                  "type": "object"
                },
                "patronage_id": {
                  "type": "number"
                },
                "report": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "delay_days": {
                      "type": "number"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "introduction_md",
                    "created_at",
                    "slug",
                    "delay_days",
                    "name",
                    "comment",
                    "disclaimer_md",
                    "guidelines_md",
                    "updated_at"
                  ],
                  "type": "object"
                },
                "report_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "answers",
                "user_id",
                "created_at",
                "updated_at",
                "patronage_id",
                "validated_at",
                "report",
                "user",
                "id",
                "begin_at",
                "report_id",
                "patronage"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "PostReportsFromReportIdPatronagesReports",
        "summary": "create"
      }
    },
    "/roles": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "description": "Manage companies",
                  "id": 17,
                  "name": "Companies Manager"
                },
                {
                  "description": "Approved application without rate limits",
                  "id": 16,
                  "name": "Official App"
                },
                {
                  "description": "Manage users achievements and titles",
                  "id": 15,
                  "name": "Achievements Manager"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "description"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "GetRoles",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "role",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "description": "Synchronised uniform parallelism",
                "id": 18,
                "name": "astronomer"
              }
            },
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "description"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "PostRoles",
        "summary": "create"
      }
    },
    "/roles/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "DeleteRolesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "description": "Manage projects, scales and all cursus related data",
                "id": 13,
                "name": "Basic Tutor"
              }
            },
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "description"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "GetRolesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "role",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "PatchRolesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "role",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "PutRolesById",
        "summary": "update"
      }
    },
    "/roles/:role_id/roles_entities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "role_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:43:11.431Z",
                  "entity": {
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "description": null,
                    "id": 7,
                    "image": null,
                    "name": "test intrateam staff oauth application",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "public": true,
                    "rate_limit": 1800,
                    "scopes": [],
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "website": null
                  },
                  "entity_id": 7,
                  "entity_type": "Doorkeeper::Application",
                  "expires_at": null,
                  "id": 20,
                  "role": {
                    "description": "manage all",
                    "id": 1,
                    "name": "Intrateam"
                  }
                },
                {
                  "created_at": "2017-11-22T13:43:11.413Z",
                  "entity": {
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "description": null,
                    "id": 7,
                    "image": null,
                    "name": "test intrateam staff oauth application",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "public": true,
                    "rate_limit": 1800,
                    "scopes": [],
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "website": null
                  },
                  "entity_id": 7,
                  "entity_type": "Doorkeeper::Application",
                  "expires_at": null,
                  "id": 19,
                  "role": {
                    "description": "Member of the staff, with higher privileges",
                    "id": 11,
                    "name": "Advanced Staff"
                  }
                },
                {
                  "created_at": "2017-11-22T13:43:11.399Z",
                  "entity": {
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "description": null,
                    "id": 7,
                    "image": null,
                    "name": "test intrateam staff oauth application",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "public": true,
                    "rate_limit": 1800,
                    "scopes": [],
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "website": null
                  },
                  "entity_id": 7,
                  "entity_type": "Doorkeeper::Application",
                  "expires_at": null,
                  "id": 18,
                  "role": {
                    "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                    "id": 7,
                    "name": "Basic Staff"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "entity": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "image": {
                        "type": "null"
                      },
                      "name": {
                        "type": "string"
                      },
                      "owner": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "login": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "login",
                          "url"
                        ],
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      },
                      "rate_limit": {
                        "type": "number"
                      },
                      "scopes": {
                        "type": "array"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "website": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "rate_limit",
                      "description",
                      "scopes",
                      "updated_at",
                      "website",
                      "public",
                      "created_at",
                      "owner",
                      "id",
                      "name",
                      "image"
                    ],
                    "type": "object"
                  },
                  "entity_id": {
                    "type": "number"
                  },
                  "entity_type": {
                    "type": "string"
                  },
                  "expires_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "role": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "description",
                      "id",
                      "name"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "created_at",
                  "expires_at",
                  "entity",
                  "role",
                  "id",
                  "entity_id",
                  "entity_type"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "GetRolesFromRoleIdRolesEntities",
        "summary": "index"
      }
    },
    "/roles_entities": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "role_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:43:11.431Z",
                  "entity": {
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "description": null,
                    "id": 7,
                    "image": null,
                    "name": "test intrateam staff oauth application",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "public": true,
                    "rate_limit": 1800,
                    "scopes": [],
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "website": null
                  },
                  "entity_id": 7,
                  "entity_type": "Doorkeeper::Application",
                  "expires_at": null,
                  "id": 20,
                  "role": {
                    "description": "manage all",
                    "id": 1,
                    "name": "Intrateam"
                  }
                },
                {
                  "created_at": "2017-11-22T13:43:11.413Z",
                  "entity": {
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "description": null,
                    "id": 7,
                    "image": null,
                    "name": "test intrateam staff oauth application",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "public": true,
                    "rate_limit": 1800,
                    "scopes": [],
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "website": null
                  },
                  "entity_id": 7,
                  "entity_type": "Doorkeeper::Application",
                  "expires_at": null,
                  "id": 19,
                  "role": {
                    "description": "Member of the staff, with higher privileges",
                    "id": 11,
                    "name": "Advanced Staff"
                  }
                },
                {
                  "created_at": "2017-11-22T13:43:11.399Z",
                  "entity": {
                    "created_at": "2017-11-22T13:43:11.377Z",
                    "description": null,
                    "id": 7,
                    "image": null,
                    "name": "test intrateam staff oauth application",
                    "owner": {
                      "id": 74,
                      "login": "pamidala",
                      "url": "https://api.intra.42.fr/v2/users/pamidala"
                    },
                    "public": true,
                    "rate_limit": 1800,
                    "scopes": [],
                    "updated_at": "2017-11-22T13:43:11.434Z",
                    "website": null
                  },
                  "entity_id": 7,
                  "entity_type": "Doorkeeper::Application",
                  "expires_at": null,
                  "id": 18,
                  "role": {
                    "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                    "id": 7,
                    "name": "Basic Staff"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "entity": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "image": {
                        "type": "null"
                      },
                      "name": {
                        "type": "string"
                      },
                      "owner": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "login": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "login",
                          "url"
                        ],
                        "type": "object"
                      },
                      "public": {
                        "type": "boolean"
                      },
                      "rate_limit": {
                        "type": "number"
                      },
                      "scopes": {
                        "type": "array"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "website": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "website",
                      "public",
                      "created_at",
                      "owner",
                      "id",
                      "name",
                      "image",
                      "rate_limit",
                      "description",
                      "scopes",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "entity_id": {
                    "type": "number"
                  },
                  "entity_type": {
                    "type": "string"
                  },
                  "expires_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "role": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "entity_id",
                  "entity_type",
                  "created_at",
                  "expires_at",
                  "entity",
                  "role"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "GetRolesEntities",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "roles_entity",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:59.468Z",
                "entity": {
                  "created_at": "2017-11-22T13:43:11.638Z",
                  "description": null,
                  "id": 8,
                  "image": null,
                  "name": "test forbidden application",
                  "owner": {
                    "id": 116,
                    "login": "mwindu2",
                    "url": "https://api.intra.42.fr/v2/users/mwindu2"
                  },
                  "public": false,
                  "rate_limit": 1800,
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:59.474Z",
                  "website": null
                },
                "entity_id": 8,
                "entity_type": "Doorkeeper::Application",
                "expires_at": null,
                "id": 21,
                "role": {
                  "description": "Ability to create and manage content translations",
                  "id": 8,
                  "name": "Translater"
                }
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "entity": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "description": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "image": {
                      "type": "null"
                    },
                    "name": {
                      "type": "string"
                    },
                    "owner": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "login": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "login",
                        "url"
                      ],
                      "type": "object"
                    },
                    "public": {
                      "type": "boolean"
                    },
                    "rate_limit": {
                      "type": "number"
                    },
                    "scopes": {
                      "type": "array"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "website": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "updated_at",
                    "owner",
                    "name",
                    "description",
                    "public",
                    "created_at",
                    "rate_limit",
                    "id",
                    "image",
                    "website",
                    "scopes"
                  ],
                  "type": "object"
                },
                "entity_id": {
                  "type": "number"
                },
                "entity_type": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "role": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "id",
                    "name"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "entity_id",
                "entity_type",
                "created_at",
                "expires_at",
                "entity",
                "role",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "PostRolesEntities",
        "summary": "create"
      }
    },
    "/roles_entities/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "DeleteRolesEntitiesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:11.249Z",
                "entity": {
                  "created_at": "2017-11-22T13:43:11.203Z",
                  "description": null,
                  "id": 4,
                  "image": null,
                  "name": "test shop staff oauth application",
                  "owner": {},
                  "public": true,
                  "rate_limit": 1800,
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.253Z",
                  "website": null
                },
                "entity_id": 4,
                "entity_type": "Doorkeeper::Application",
                "expires_at": null,
                "id": 9,
                "role": {
                  "description": "je suis un super manager",
                  "id": 10,
                  "name": "Shop Manager"
                }
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "entity": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "description": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "image": {
                      "type": "null"
                    },
                    "name": {
                      "type": "string"
                    },
                    "owner": {
                      "properties": {},
                      "required": [],
                      "type": "object"
                    },
                    "public": {
                      "type": "boolean"
                    },
                    "rate_limit": {
                      "type": "number"
                    },
                    "scopes": {
                      "type": "array"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "website": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "created_at",
                    "owner",
                    "rate_limit",
                    "image",
                    "website",
                    "scopes",
                    "public",
                    "updated_at",
                    "id",
                    "name",
                    "description"
                  ],
                  "type": "object"
                },
                "entity_id": {
                  "type": "number"
                },
                "entity_type": {
                  "type": "string"
                },
                "expires_at": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "role": {
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "description",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "id",
                "entity_id",
                "entity_type",
                "created_at",
                "expires_at",
                "entity",
                "role"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "GetRolesEntitiesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "roles_entity",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "PatchRolesEntitiesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "roles_entity",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "",
        "operationId": "PutRolesEntitiesById",
        "summary": "update"
      }
    },
    "/roles_entities/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 20
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Roles entities"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetRolesEntitiesGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/rules": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2016-05-31T15:00:49.898Z",
                  "description": "The user first name must start by the #{letter} letter",
                  "id": 34,
                  "internal_name": "FirstNameStartingBy",
                  "kind": "inscription",
                  "name": "First name starting by",
                  "params": [
                    {
                      "created_at": "2016-05-31T15:00:49.905Z",
                      "data_type": "string",
                      "default_value": "",
                      "id": 27,
                      "name": "letter",
                      "rule_id": 34,
                      "updated_at": "2016-05-31T15:00:49.905Z"
                    }
                  ],
                  "project_sessions_rules": [],
                  "slug": "inscription-first-name-starting-by",
                  "updated_at": "2016-05-31T15:00:49.898Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "internal_name": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "params": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "data_type": {
                          "type": "string"
                        },
                        "default_value": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "rule_id": {
                          "type": "number"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "default_value",
                        "rule_id",
                        "created_at",
                        "updated_at",
                        "data_type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "project_sessions_rules": {
                    "type": "array"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "updated_at",
                  "slug",
                  "internal_name",
                  "params",
                  "project_sessions_rules",
                  "id",
                  "kind",
                  "name",
                  "description",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "GetRules",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "rule",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:59.860Z",
                "description": "The user first name must start by the #{letter} letter",
                "id": 11,
                "internal_name": "FirstNameStartingBy",
                "kind": "inscription",
                "name": "First name starting by",
                "params": [
                  {
                    "created_at": "2017-11-22T13:43:59.863Z",
                    "data_type": "string",
                    "default_value": "",
                    "id": 1,
                    "name": "letter",
                    "rule_id": 11,
                    "updated_at": "2017-11-22T13:43:59.863Z"
                  }
                ],
                "slug": "inscription-first-name-starting-by",
                "updated_at": "2017-11-22T13:43:59.860Z"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "internal_name": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "params": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "data_type": {
                        "type": "string"
                      },
                      "default_value": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "rule_id": {
                        "type": "number"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "data_type",
                      "id",
                      "name",
                      "default_value",
                      "rule_id",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "updated_at",
                "internal_name",
                "params",
                "kind",
                "description",
                "created_at",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "PostRules",
        "summary": "create"
      }
    },
    "/rules/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "DeleteRulesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:01.907Z",
                "description": "be at least level %{level} at %{skill} in cursus %{cursus}",
                "id": 6,
                "internal_name": "SkillLevelMin",
                "kind": "inscription",
                "name": "Skill level min",
                "params": [],
                "slug": "inscription-skill-level-min",
                "updated_at": "2017-11-22T13:41:01.907Z"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "internal_name": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "params": {
                  "type": "array"
                },
                "slug": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "internal_name",
                "params",
                "id",
                "kind",
                "name",
                "created_at",
                "description",
                "updated_at",
                "slug"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "GetRulesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "rule",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "PatchRulesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "rule",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Rules"
        ],
        "description": "",
        "operationId": "PutRulesById",
        "summary": "update"
      }
    },
    "/scale_teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetScaleTeams",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": null,
                "comment": null,
                "correcteds": [
                  {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  }
                ],
                "corrector": {},
                "created_at": "2017-11-22T13:44:01.281Z",
                "feedback": null,
                "feedback_rating": null,
                "feedbacks": [],
                "filled_at": null,
                "final_mark": null,
                "flag": {
                  "created_at": "2017-11-22T13:41:01.837Z",
                  "icon": "check-4",
                  "id": 1,
                  "name": "Ok",
                  "positive": true,
                  "updated_at": "2017-11-22T13:41:01.837Z"
                },
                "id": 2,
                "scale": {
                  "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                  "correction_number": 3,
                  "created_at": "2017-11-22T13:41:27.388Z",
                  "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                  "duration": 1800,
                  "evaluation_id": 1,
                  "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                  "id": 1,
                  "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Utah ducks"
                },
                "scale_id": 1,
                "team": {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:37.496Z",
                  "created_at": "2017-11-22T13:41:37.418Z",
                  "final_mark": null,
                  "id": 68,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:37.471Z",
                  "name": "sebulseb's group",
                  "project_id": 1,
                  "project_session_id": 1,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                  "status": "waiting_for_correction",
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:44:01.294Z",
                  "url": "https://api.intra.42.fr/v2/teams/68",
                  "users": [
                    {
                      "id": 125,
                      "leader": true,
                      "login": "sebulseb",
                      "occurrence": 0,
                      "projects_user_id": 68,
                      "url": "https://api.intra.42.fr/v2/users/sebulseb",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                "truant": {},
                "updated_at": "2017-11-22T13:44:01.281Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "null"
                },
                "comment": {
                  "type": "null"
                },
                "correcteds": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "corrector": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "created_at": {
                  "type": "string"
                },
                "feedback": {
                  "type": "null"
                },
                "feedback_rating": {
                  "type": "null"
                },
                "feedbacks": {
                  "type": "array"
                },
                "filled_at": {
                  "type": "null"
                },
                "final_mark": {
                  "type": "null"
                },
                "flag": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "positive": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "icon",
                    "created_at",
                    "updated_at",
                    "id",
                    "name",
                    "positive"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "scale": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "correction_number": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "is_primary": {
                      "type": "boolean"
                    },
                    "languages": {
                      "items": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "updated_at",
                          "id",
                          "name",
                          "identifier",
                          "created_at"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "manual_subscription": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "comment",
                    "introduction_md",
                    "disclaimer_md",
                    "guidelines_md",
                    "manual_subscription",
                    "languages",
                    "is_primary",
                    "evaluation_id",
                    "name",
                    "created_at",
                    "correction_number",
                    "duration",
                    "id"
                  ],
                  "type": "object"
                },
                "scale_id": {
                  "type": "number"
                },
                "team": {
                  "properties": {
                    "closed?": {
                      "type": "boolean"
                    },
                    "closed_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "final_mark": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "locked?": {
                      "type": "boolean"
                    },
                    "locked_at": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "number"
                    },
                    "project_session_id": {
                      "type": "number"
                    },
                    "repo_url": {
                      "type": "null"
                    },
                    "repo_uuid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "terminating_at": {
                      "type": "null"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "users": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "leader": {
                            "type": "boolean"
                          },
                          "login": {
                            "type": "string"
                          },
                          "occurrence": {
                            "type": "number"
                          },
                          "projects_user_id": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "validated": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "url",
                          "leader",
                          "occurrence",
                          "validated",
                          "projects_user_id",
                          "id",
                          "login"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "validated?": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "url",
                    "status",
                    "terminating_at",
                    "users",
                    "validated?",
                    "name",
                    "created_at",
                    "closed?",
                    "repo_uuid",
                    "locked_at",
                    "final_mark",
                    "closed_at",
                    "project_session_id",
                    "id",
                    "project_id",
                    "updated_at",
                    "locked?",
                    "repo_url"
                  ],
                  "type": "object"
                },
                "truant": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "scale_id",
                "feedback_rating",
                "filled_at",
                "feedbacks",
                "comment",
                "created_at",
                "truant",
                "scale",
                "team",
                "id",
                "updated_at",
                "feedback",
                "final_mark",
                "flag",
                "begin_at",
                "correcteds",
                "corrector"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "With this call, the evaluator is set as the token’s user_id. If you want to set an evaluation for a particular user, use the <a href=\"/apidoc/2.0/scale_teams/multiple_create.html\">multiple_create</a> call",
        "operationId": "PostScaleTeams",
        "summary": "create"
      }
    },
    "/scale_teams/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "DeleteScaleTeamsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-11-24T18:00:00.000Z",
                "comment": null,
                "correcteds": "invisible",
                "corrector": "invisible",
                "created_at": "2017-11-22T13:42:09.187Z",
                "feedback": null,
                "feedback_rating": null,
                "feedbacks": [],
                "filled_at": null,
                "final_mark": null,
                "flag": {
                  "created_at": "2017-11-22T13:41:01.837Z",
                  "icon": "check-4",
                  "id": 1,
                  "name": "Ok",
                  "positive": true,
                  "updated_at": "2017-11-22T13:41:01.837Z"
                },
                "id": 1,
                "scale": {
                  "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                  "correction_number": 3,
                  "created_at": "2017-11-22T13:41:27.388Z",
                  "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                  "duration": 1800,
                  "evaluation_id": 1,
                  "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                  "id": 1,
                  "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Utah ducks"
                },
                "scale_id": 1,
                "truant": {},
                "updated_at": "2017-11-22T13:42:09.187Z"
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "comment": {
                  "type": "null"
                },
                "correcteds": {
                  "type": "string"
                },
                "corrector": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "feedback": {
                  "type": "null"
                },
                "feedback_rating": {
                  "type": "null"
                },
                "feedbacks": {
                  "type": "array"
                },
                "filled_at": {
                  "type": "null"
                },
                "final_mark": {
                  "type": "null"
                },
                "flag": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "positive": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "positive",
                    "icon",
                    "created_at",
                    "updated_at"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "scale": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "correction_number": {
                      "type": "number"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "duration": {
                      "type": "number"
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "is_primary": {
                      "type": "boolean"
                    },
                    "languages": {
                      "items": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "updated_at",
                          "id",
                          "name",
                          "identifier",
                          "created_at"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "manual_subscription": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "manual_subscription",
                    "evaluation_id",
                    "is_primary",
                    "comment",
                    "introduction_md",
                    "disclaimer_md",
                    "guidelines_md",
                    "created_at",
                    "correction_number",
                    "id",
                    "name",
                    "duration",
                    "languages"
                  ],
                  "type": "object"
                },
                "scale_id": {
                  "type": "number"
                },
                "truant": {
                  "properties": {},
                  "required": [],
                  "type": "object"
                },
                "updated_at": {
                  "type": "string"
                }
              },
              "required": [
                "scale_id",
                "comment",
                "feedback",
                "begin_at",
                "correcteds",
                "filled_at",
                "final_mark",
                "scale",
                "feedbacks",
                "id",
                "updated_at",
                "flag",
                "created_at",
                "feedback_rating",
                "corrector",
                "truant"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetScaleTeamsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "The final_mark of the scale_team is calculated automatically from the answers values. If you want to patch the mark of a project for a student, patching the <code>team.final_mark</code> is the right way to do. It will recompile the <code>project_user.final_mark</code>. If you really want to update the final_mark of the scale_team, you need to patch the <code>answers_attributes</code>.",
        "operationId": "PatchScaleTeamsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "The final_mark of the scale_team is calculated automatically from the answers values. If you want to patch the mark of a project for a student, patching the <code>team.final_mark</code> is the right way to do. It will recompile the <code>project_user.final_mark</code>. If you really want to update the final_mark of the scale_team, you need to patch the <code>answers_attributes</code>.",
        "operationId": "PutScaleTeamsById",
        "summary": "update"
      }
    },
    "/scale_teams/:scale_team_id/feedbacks": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "GetScaleTeamsFromScaleTeamIdFeedbacks",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PostScaleTeamsFromScaleTeamIdFeedbacks",
        "summary": "create"
      }
    },
    "/scale_teams/:scale_team_id/feedbacks/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "DeleteScaleTeamsFromScaleTeamIdFeedbacksById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "GetScaleTeamsFromScaleTeamIdFeedbacksById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PatchScaleTeamsFromScaleTeamIdFeedbacksById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale_team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "feedback",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Feedbacks"
        ],
        "description": "",
        "operationId": "PutScaleTeamsFromScaleTeamIdFeedbacksById",
        "summary": "update"
      }
    },
    "/scale_teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 1
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetScaleTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/scale_teams/multiple_create": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "scale_teams",
            "type": "array"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-27T09:00:00.000Z",
                  "comment": null,
                  "correcteds": [
                    {
                      "id": 125,
                      "login": "sebulseb",
                      "url": "https://api.intra.42.fr/v2/users/sebulseb"
                    }
                  ],
                  "corrector": {},
                  "created_at": "2017-11-22T13:44:01.678Z",
                  "feedback": null,
                  "feedback_rating": null,
                  "feedbacks": [],
                  "filled_at": null,
                  "final_mark": null,
                  "flag": {
                    "created_at": "2017-11-22T13:41:01.837Z",
                    "icon": "check-4",
                    "id": 1,
                    "name": "Ok",
                    "positive": true,
                    "updated_at": "2017-11-22T13:41:01.837Z"
                  },
                  "id": 4,
                  "scale": {
                    "comment": "Perferendis maiores dreamcatcher. Pickled five dollar toast truffaut quis fashion axe.",
                    "correction_number": 3,
                    "created_at": "2017-11-22T13:41:27.388Z",
                    "disclaimer_md": "Ipsa expedita gluten-free. Laboriosam ennui actually literally aut trust fund.",
                    "duration": 1800,
                    "evaluation_id": 1,
                    "guidelines_md": "Tumblr ethical eaque blanditiis eligendi. Dolores facere maiores hashtag pour-over architecto.",
                    "id": 1,
                    "introduction_md": "Direct trade asperiores aut odit. Eius meh qui nihil reprehenderit. Before they sold out vegan molestias. Brooklyn rerum non architecto mumblecore franzen post-ironic.",
                    "is_primary": true,
                    "languages": [
                      {
                        "created_at": "2017-11-22T13:40:59.468Z",
                        "id": 3,
                        "identifier": "ro",
                        "name": "Romanian",
                        "updated_at": "2017-11-22T13:41:26.139Z"
                      }
                    ],
                    "manual_subscription": true,
                    "name": "Utah ducks"
                  },
                  "scale_id": 1,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.496Z",
                    "created_at": "2017-11-22T13:41:37.418Z",
                    "final_mark": null,
                    "id": 68,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.471Z",
                    "name": "sebulseb's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:44:01.687Z",
                    "url": "https://api.intra.42.fr/v2/teams/68",
                    "users": [
                      {
                        "id": 125,
                        "leader": true,
                        "login": "sebulseb",
                        "occurrence": 0,
                        "projects_user_id": 68,
                        "url": "https://api.intra.42.fr/v2/users/sebulseb",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "truant": {},
                  "updated_at": "2017-11-22T13:44:01.678Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "comment": {
                    "type": "null"
                  },
                  "correcteds": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "login": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "login",
                        "url"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "corrector": {
                    "properties": {},
                    "required": [],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "feedback": {
                    "type": "null"
                  },
                  "feedback_rating": {
                    "type": "null"
                  },
                  "feedbacks": {
                    "type": "array"
                  },
                  "filled_at": {
                    "type": "null"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "flag": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "icon": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "positive": {
                        "type": "boolean"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "created_at",
                      "updated_at",
                      "id",
                      "name",
                      "positive",
                      "icon"
                    ],
                    "type": "object"
                  },
                  "id": {
                    "type": "number"
                  },
                  "scale": {
                    "properties": {
                      "comment": {
                        "type": "string"
                      },
                      "correction_number": {
                        "type": "number"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "disclaimer_md": {
                        "type": "string"
                      },
                      "duration": {
                        "type": "number"
                      },
                      "evaluation_id": {
                        "type": "number"
                      },
                      "guidelines_md": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "introduction_md": {
                        "type": "string"
                      },
                      "is_primary": {
                        "type": "boolean"
                      },
                      "languages": {
                        "items": {
                          "properties": {
                            "created_at": {
                              "type": "string"
                            },
                            "id": {
                              "type": "number"
                            },
                            "identifier": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "identifier",
                            "created_at",
                            "updated_at",
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "manual_subscription": {
                        "type": "boolean"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "guidelines_md",
                      "created_at",
                      "correction_number",
                      "duration",
                      "evaluation_id",
                      "is_primary",
                      "comment",
                      "introduction_md",
                      "disclaimer_md",
                      "manual_subscription",
                      "languages"
                    ],
                    "type": "object"
                  },
                  "scale_id": {
                    "type": "number"
                  },
                  "team": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "projects_user_id",
                            "id",
                            "login",
                            "url",
                            "leader",
                            "occurrence",
                            "validated"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "project_id",
                      "terminating_at",
                      "locked_at",
                      "created_at",
                      "locked?",
                      "validated?",
                      "project_session_id",
                      "name",
                      "url",
                      "status",
                      "repo_uuid",
                      "closed?",
                      "repo_url",
                      "closed_at",
                      "id",
                      "final_mark",
                      "updated_at",
                      "users"
                    ],
                    "type": "object"
                  },
                  "truant": {
                    "properties": {},
                    "required": [],
                    "type": "object"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "comment",
                  "flag",
                  "truant",
                  "id",
                  "scale_id",
                  "created_at",
                  "updated_at",
                  "feedbacks",
                  "final_mark",
                  "correcteds",
                  "scale",
                  "team",
                  "filled_at",
                  "feedback",
                  "feedback_rating",
                  "begin_at",
                  "corrector"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "This calls allow the creation of one or multiple <code>scale_teams</code> in a single call. Creating a new scale_team without an <code>user_id</code> and with a <code>final_mark</code> will act as a <em>moulinette</em> mark. To be more comfortable, and for readability, we recommend that you send the data as an array of JSON objects.",
        "operationId": "PostScaleTeamsMultipleCreate",
        "summary": "multiple_create"
      }
    },
    "/scales": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "comment": "Banh mi dreamcatcher ad natus. Aut blog sunt nostrum est repellendus. Fingerstache hammock echo sed.",
                  "correction_number": 3,
                  "created_at": "2016-05-04T10:45:05.519Z",
                  "disclaimer_md": "Adipisci iusto qui laborum tote bag letterpress brooklyn. Voluptatibus fanny pack ea wayfarers.",
                  "duration": 1800,
                  "evaluation": {
                    "id": 168,
                    "kind": "scale"
                  },
                  "evaluation_id": 168,
                  "guidelines_md": "Chartreuse sequi repellendus squid franzen qui. Voluptatum sint cornhole mustache single-origin coffee typewriter. Qui omnis ramps vitae gluten-free corrupti 8-bit nam.",
                  "id": 531,
                  "introduction_md": "Chambray mumblecore non harum mustache wayfarers eius. Sartorial lumbersexual street tenetur keffiyeh. Dolorum pbr&b eveniet nihil neque dolores non. Banh mi atque officia eaque cumque.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2015-04-14T16:07:38.122Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2015-04-14T16:07:38.122Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Unicooooorn !",
                  "sections": [
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1975,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:05.785Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5854,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1976,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.131Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5855,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1977,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.457Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5856,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1978,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:07.035Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5857,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "correction_number": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "disclaimer_md": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "evaluation": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "evaluation_id": {
                    "type": "number"
                  },
                  "guidelines_md": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "introduction_md": {
                    "type": "string"
                  },
                  "is_primary": {
                    "type": "boolean"
                  },
                  "languages": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "identifier",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "manual_subscription": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sections": {
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "questions": {
                          "items": {
                            "properties": {
                              "created_at": {
                                "type": "string"
                              },
                              "guidelines": {
                                "type": "string"
                              },
                              "id": {
                                "type": "number"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "rating": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "guidelines",
                              "rating",
                              "kind",
                              "created_at"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description",
                        "questions"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "is_primary",
                  "correction_number",
                  "duration",
                  "sections",
                  "evaluation",
                  "introduction_md",
                  "disclaimer_md",
                  "languages",
                  "name",
                  "comment",
                  "created_at",
                  "id",
                  "evaluation_id",
                  "guidelines_md",
                  "manual_subscription"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "GetScales",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "scale",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "comment": "Dolores facere letterpress. Facilis pork belly church-key rem enim ut twee.",
                "correction_number": 3,
                "created_at": "2017-11-22T13:44:02.886Z",
                "disclaimer_md": "Narwhal harum et voluptatum dolor similique minus biodiesel. Mlkshk architecto sapiente harum ipsum. Ut selvage paleo. Quia franzen listicle occupy.",
                "duration": 1800,
                "evaluation": {
                  "id": 4,
                  "kind": "scale"
                },
                "evaluation_id": 4,
                "guidelines_md": "Ut kickstarter aut wolf harum vel cornhole stumptown. Next level semiotics ab squid sit ethical lumbersexual. Venmo aspernatur retro letterpress quae ea pickled provident. Small batch ugh quia flexitarian.",
                "id": 3,
                "introduction_md": "Amet sed sint perferendis sriracha. Thundercats consequuntur salvia. Jean shorts church-key ut enim est selvage aut. Alias cray paleo quia ea nulla five dollar toast in. Vitae eos vegan aut inventore at dolorem quo.",
                "is_primary": true,
                "languages": [
                  {
                    "created_at": "2017-11-22T13:40:59.468Z",
                    "id": 3,
                    "identifier": "ro",
                    "name": "Romanian",
                    "updated_at": "2017-11-22T13:41:26.139Z"
                  }
                ],
                "manual_subscription": true,
                "name": "Tennessee ducks",
                "sections": [
                  {
                    "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                    "id": 6,
                    "name": "Maine sheep",
                    "questions": [
                      {
                        "id": 10,
                        "name": "South Dakota banshees",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:44:02.903Z",
                            "id": 17,
                            "percentage": 25,
                            "question_id": 10,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:44:02.903Z"
                          },
                          {
                            "created_at": "2017-11-22T13:44:02.917Z",
                            "id": 18,
                            "percentage": 25,
                            "question_id": 10,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:44:02.917Z"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                    "id": 7,
                    "name": "Maine sheep",
                    "questions": [
                      {
                        "id": 11,
                        "name": "South Dakota banshees",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:44:02.991Z",
                            "id": 19,
                            "percentage": 25,
                            "question_id": 11,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:44:02.991Z"
                          },
                          {
                            "created_at": "2017-11-22T13:44:03.002Z",
                            "id": 20,
                            "percentage": 25,
                            "question_id": 11,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:44:03.002Z"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                    "id": 8,
                    "name": "Maine sheep",
                    "questions": [
                      {
                        "id": 12,
                        "name": "South Dakota banshees",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:44:03.060Z",
                            "id": 21,
                            "percentage": 25,
                            "question_id": 12,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:44:03.060Z"
                          },
                          {
                            "created_at": "2017-11-22T13:44:03.070Z",
                            "id": 22,
                            "percentage": 25,
                            "question_id": 12,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:44:03.070Z"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "description": "Ab quidem shoreditch id fixie paleo raw denim celiac. Chartreuse vinyl pitchfork vero fixie ipsam. Dreamcatcher ut aut voluptatem mustache. Ea officia selvage qui carry. 8-bit expedita aesthetic leggings slow-carb you probably haven't heard of them xoxo.",
                    "id": 9,
                    "name": "Maine sheep",
                    "questions": [
                      {
                        "id": 13,
                        "name": "South Dakota banshees",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:44:03.128Z",
                            "id": 23,
                            "percentage": 25,
                            "question_id": 13,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:44:03.128Z"
                          },
                          {
                            "created_at": "2017-11-22T13:44:03.136Z",
                            "id": 24,
                            "percentage": 25,
                            "question_id": 13,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:44:03.136Z"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                },
                "correction_number": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "disclaimer_md": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "evaluation": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ],
                  "type": "object"
                },
                "evaluation_id": {
                  "type": "number"
                },
                "guidelines_md": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "introduction_md": {
                  "type": "string"
                },
                "is_primary": {
                  "type": "boolean"
                },
                "languages": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "manual_subscription": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "sections": {
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "questions": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "questions_skills": {
                              "items": {
                                "properties": {
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "number"
                                  },
                                  "percentage": {
                                    "type": "number"
                                  },
                                  "question_id": {
                                    "type": "number"
                                  },
                                  "skill_id": {
                                    "type": "number"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "question_id",
                                  "skill_id",
                                  "percentage",
                                  "created_at",
                                  "updated_at",
                                  "id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "questions_skills",
                            "name",
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "questions"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "evaluation",
                "duration",
                "sections",
                "created_at",
                "correction_number",
                "name",
                "is_primary",
                "manual_subscription",
                "languages",
                "disclaimer_md",
                "guidelines_md",
                "comment",
                "introduction_md",
                "id",
                "evaluation_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "PostScales",
        "summary": "create"
      }
    },
    "/scales/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "DeleteScalesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "comment": "Quidem pork belly before they sold out non vegan. Portland lo-fi sunt dolorum raw denim similique non. Accusantium consequatur quis retro. Maiores blanditiis fap chambray vice similique intelligentsia tattooed.",
                "correction_number": 3,
                "created_at": "2017-11-22T13:41:27.957Z",
                "disclaimer_md": "Ugh kitsch molestiae dicta keffiyeh eius tumblr gastropub. Earum repellendus sequi tilde velit error.",
                "duration": 1800,
                "evaluation": {
                  "id": 3,
                  "kind": "scale"
                },
                "evaluation_id": 3,
                "guidelines_md": "Wolf voluptas itaque. Sunt art party farm-to-table sapiente. Ea voluptatum voluptas culpa listicle facilis.",
                "id": 2,
                "introduction_md": "Sapiente plaid +1 ea wes anderson mlkshk mumblecore. Eaque repellendus eveniet slow-carb.",
                "is_primary": true,
                "languages": [
                  {
                    "created_at": "2017-11-22T13:40:59.468Z",
                    "id": 3,
                    "identifier": "ro",
                    "name": "Romanian",
                    "updated_at": "2017-11-22T13:41:26.139Z"
                  }
                ],
                "manual_subscription": true,
                "name": "Tennessee prophets",
                "sections": [
                  {
                    "description": "Cum messenger bag praesentium hella wes anderson tofu butcher. Xoxo pabst ut quod. Tattooed adipisci bushwick. Hammock aut accusamus salvia schlitz corporis kitsch tote bag.",
                    "id": 3,
                    "name": "Wyoming ants",
                    "questions": [
                      {
                        "id": 5,
                        "name": "Idaho rabbits",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:41:28.006Z",
                            "id": 9,
                            "percentage": 25,
                            "question_id": 5,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:41:28.006Z"
                          },
                          {
                            "created_at": "2017-11-22T13:41:28.020Z",
                            "id": 10,
                            "percentage": 25,
                            "question_id": 5,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:41:28.020Z"
                          }
                        ]
                      },
                      {
                        "id": 6,
                        "name": "Oklahoma elves",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:41:28.064Z",
                            "id": 11,
                            "percentage": 25,
                            "question_id": 6,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:41:28.064Z"
                          },
                          {
                            "created_at": "2017-11-22T13:41:28.068Z",
                            "id": 12,
                            "percentage": 25,
                            "question_id": 6,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:41:28.068Z"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "description": "Modi polaroid odio lomo chillwave. Cold-pressed everyday quasi possimus 90's flexitarian. Fingerstache ullam quia et distillery cupiditate shoreditch tousled. Quis tousled keffiyeh debitis. Earum sunt quis repellat quasi green juice knausgaard.",
                    "id": 4,
                    "name": "New York gooses",
                    "questions": [
                      {
                        "id": 7,
                        "name": "Virginia ghosts",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:41:28.144Z",
                            "id": 13,
                            "percentage": 25,
                            "question_id": 7,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:41:28.144Z"
                          },
                          {
                            "created_at": "2017-11-22T13:41:28.158Z",
                            "id": 14,
                            "percentage": 25,
                            "question_id": 7,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:41:28.158Z"
                          }
                        ]
                      },
                      {
                        "id": 8,
                        "name": "Idaho witches",
                        "questions_skills": [
                          {
                            "created_at": "2017-11-22T13:41:28.210Z",
                            "id": 15,
                            "percentage": 25,
                            "question_id": 8,
                            "skill_id": 6,
                            "updated_at": "2017-11-22T13:41:28.210Z"
                          },
                          {
                            "created_at": "2017-11-22T13:41:28.215Z",
                            "id": 16,
                            "percentage": 25,
                            "question_id": 8,
                            "skill_id": 1,
                            "updated_at": "2017-11-22T13:41:28.215Z"
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            },
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                },
                "correction_number": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "disclaimer_md": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "evaluation": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "kind": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "kind"
                  ],
                  "type": "object"
                },
                "evaluation_id": {
                  "type": "number"
                },
                "guidelines_md": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "introduction_md": {
                  "type": "string"
                },
                "is_primary": {
                  "type": "boolean"
                },
                "languages": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "identifier": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "identifier",
                      "created_at",
                      "updated_at",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "manual_subscription": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                },
                "sections": {
                  "items": {
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "questions": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "questions_skills": {
                              "items": {
                                "properties": {
                                  "created_at": {
                                    "type": "string"
                                  },
                                  "id": {
                                    "type": "number"
                                  },
                                  "percentage": {
                                    "type": "number"
                                  },
                                  "question_id": {
                                    "type": "number"
                                  },
                                  "skill_id": {
                                    "type": "number"
                                  },
                                  "updated_at": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "percentage",
                                  "created_at",
                                  "updated_at",
                                  "id",
                                  "question_id",
                                  "skill_id"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          },
                          "required": [
                            "questions_skills",
                            "name",
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "description",
                      "questions"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "required": [
                "manual_subscription",
                "evaluation",
                "introduction_md",
                "duration",
                "comment",
                "disclaimer_md",
                "correction_number",
                "languages",
                "id",
                "evaluation_id",
                "sections",
                "name",
                "is_primary",
                "guidelines_md",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "GetScalesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "PatchScalesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "scale",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "PutScalesById",
        "summary": "update"
      }
    },
    "/scores": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetScores",
        "summary": "index"
      }
    },
    "/scores/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "calculation_id": 3,
                "coalition_id": 1,
                "coalitions_user_id": 3,
                "created_at": "2017-11-22T13:42:09.850Z",
                "id": 2,
                "reason": "Who's the more foolish; the fool, or the fool who follows him?",
                "scoreable_id": 5,
                "scoreable_type": "Location",
                "updated_at": "2017-11-22T13:42:09.850Z",
                "value": 54
              }
            },
            "schema": {
              "properties": {
                "calculation_id": {
                  "type": "number"
                },
                "coalition_id": {
                  "type": "number"
                },
                "coalitions_user_id": {
                  "type": "number"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "scoreable_id": {
                  "type": "number"
                },
                "scoreable_type": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "scoreable_type",
                "calculation_id",
                "value",
                "reason",
                "created_at",
                "scoreable_id",
                "coalition_id",
                "coalitions_user_id",
                "updated_at",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scores"
        ],
        "description": "",
        "operationId": "GetScoresById",
        "summary": "show"
      }
    },
    "/skills": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "GetSkills",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "skill",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "PostSkills",
        "summary": "create"
      }
    },
    "/skills/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "DeleteSkillsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "GetSkillsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "PatchSkillsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Skills"
        ],
        "description": "",
        "operationId": "PutSkillsById",
        "summary": "update"
      }
    },
    "/skills/:skill_id/experiences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetSkillsFromSkillIdExperiences",
        "summary": "index"
      }
    },
    "/skills/:skill_id/project_sessions_skills": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2019-07-03T12:21:11.956Z",
                  "id": 1,
                  "project_session_id": 1979,
                  "skill_id": 2,
                  "updated_at": "2019-07-03T12:21:11.956Z",
                  "value": 15
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "skill_id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "updated_at",
                  "id",
                  "project_session_id",
                  "skill_id",
                  "value",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Project sessions skills"
        ],
        "description": "",
        "operationId": "GetSkillsFromSkillIdProjectSessionsSkills",
        "summary": "index"
      }
    },
    "/slots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 27,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 76,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 110,
                  "scale_team": null,
                  "user": "invisible"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "scale_team": {
                    "type": "null"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "begin_at",
                  "end_at",
                  "scale_team",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nThis call obviously lists all slots.An user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.\n<ul>\n<li><strong>if there is a resource owner</strong> (an user uses this api trough your app, with the <a href=\"http://api.intra.42.fr/apidoc/guides/web_application_flow\">web application flow</a>):\n<ul>\n<li>The <code>/me/slots</code> endpoint will list all the slots set by the current user.</li>\n\n<li>The <code>/projects/:project_id/slots</code> endpoint will list all the available slots for the given project. Theses slots can be booked by the current user in order to make a defense.</li>\n</ul>\n</li>\n\n<li><strong>if there isn’t a resource owner</strong>\n<ul>\n<li>The <code>/projects/:project_id/slots</code> endpoint lists all the slots scheduled (with a <code>scale_team</code>) on this project, including all the past ones.</li>\n\n<li>The <code>/users/:user_id/slots</code> endpoint lists all the slots for the requested user, as evaluator and as evaluated. This call is restricted.</li>\n</ul>\n</li>\n</ul>\nIn all the cases, the <code>/slots</code> endpoint lists all the slots, booked or not, including all the past ones.",
        "operationId": "GetSlots",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "slot",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nAn user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.<strong>An app without resource owner cannot make this call</strong>.If there is a resource owner, the <code>user_id</code> parameter must be set to his id. The date intervals are automaticaly scaled to a 15 minutes granularity. If the duration exceeds 15 minutes, multiple slots will be created.",
        "operationId": "PostSlots",
        "summary": "create"
      }
    },
    "/slots/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "",
        "operationId": "DeleteSlotsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "",
        "operationId": "GetSlotsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "slot",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nAn user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.<strong>An app without resource owner cannot make this call</strong>.If there is a resource owner, the <code>user_id</code> parameter must be set to his id. The date intervals are automaticaly scaled to a 15 minutes granularity. If the duration exceeds 15 minutes, multiple slots will be created.",
        "operationId": "PatchSlotsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "slot",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nAn user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.<strong>An app without resource owner cannot make this call</strong>.If there is a resource owner, the <code>user_id</code> parameter must be set to his id. The date intervals are automaticaly scaled to a 15 minutes granularity. If the duration exceeds 15 minutes, multiple slots will be created.",
        "operationId": "PutSlotsById",
        "summary": "update"
      }
    },
    "/slots/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-20": 123,
                "2017-11-21": 0,
                "2017-11-22": 0,
                "2017-11-23": 0,
                "2017-11-24": 1266
              }
            },
            "schema": {
              "properties": {
                "2017-11-20": {
                  "type": "number"
                },
                "2017-11-21": {
                  "type": "number"
                },
                "2017-11-22": {
                  "type": "number"
                },
                "2017-11-23": {
                  "type": "number"
                },
                "2017-11-24": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-20",
                "2017-11-21",
                "2017-11-22",
                "2017-11-23",
                "2017-11-24"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetSlotsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/squads/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "DeleteSquadsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "GetSquadsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "PatchSquadsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads"
        ],
        "description": "",
        "operationId": "PutSquadsById",
        "summary": "update"
      }
    },
    "/squads_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads users"
        ],
        "description": "",
        "operationId": "DeleteSquadsUsersById",
        "summary": "destroy"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads users"
        ],
        "description": "",
        "operationId": "PatchSquadsUsersById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Squads users"
        ],
        "description": "",
        "operationId": "PutSquadsUsersById",
        "summary": "update"
      }
    },
    "/staff": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Get all staff",
        "operationId": "GetStaff",
        "summary": "staff"
      }
    },
    "/subnotions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:24.254Z",
                  "id": 10,
                  "name": "Conclusion",
                  "notepad": null,
                  "notion": null,
                  "slug": "piscine-php-d08-even-moar-object-oriented-programming-conclusion"
                },
                {
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:24.204Z",
                  "id": 5,
                  "name": "Cosinus",
                  "notepad": null,
                  "notion": null,
                  "slug": "fract-ol-cosinus"
                },
                {
                  "attachments": [],
                  "created_at": "2017-11-22T13:41:24.195Z",
                  "id": 4,
                  "name": "Démonstration",
                  "notepad": null,
                  "notion": null,
                  "slug": "wolf3d-demonstration"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "attachments": {
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "notepad": {
                    "type": "null"
                  },
                  "notion": {
                    "type": "null"
                  },
                  "slug": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "slug",
                  "created_at",
                  "notepad",
                  "attachments",
                  "notion"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "GetSubnotions",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "subnotion",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "attachments": [],
                "created_at": "2017-11-22T13:44:04.723Z",
                "id": 15,
                "name": "By Grand Central Station I Sat Down and Wept",
                "notepad": null,
                "notion": {
                  "created_at": "2017-11-22T13:41:23.730Z",
                  "id": 1,
                  "name": "42run Demo",
                  "slug": "42run-demo"
                },
                "slug": "by-grand-central-station-i-sat-down-and-wept"
              }
            },
            "schema": {
              "properties": {
                "attachments": {
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "notepad": {
                  "type": "null"
                },
                "notion": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "slug",
                    "created_at",
                    "id",
                    "name"
                  ],
                  "type": "object"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "slug",
                "created_at",
                "notepad",
                "attachments",
                "notion",
                "id",
                "name"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "PostSubnotions",
        "summary": "create"
      }
    },
    "/subnotions/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "DeleteSubnotionsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "attachments": [],
                "created_at": "2017-11-22T13:41:24.215Z",
                "id": 6,
                "name": "Julia",
                "notepad": null,
                "notion": null,
                "slug": "fract-ol-julia"
              }
            },
            "schema": {
              "properties": {
                "attachments": {
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "notepad": {
                  "type": "null"
                },
                "notion": {
                  "type": "null"
                },
                "slug": {
                  "type": "string"
                }
              },
              "required": [
                "attachments",
                "notion",
                "id",
                "name",
                "slug",
                "created_at",
                "notepad"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "GetSubnotionsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "subnotion",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "PatchSubnotionsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "subnotion",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Subnotions"
        ],
        "description": "",
        "operationId": "PutSubnotionsById",
        "summary": "update"
      }
    },
    "/tags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issue_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 11,
                  "kind": "archived",
                  "name": "Archived",
                  "subnotions": [],
                  "users": []
                },
                {
                  "id": 7,
                  "kind": "general",
                  "name": "Bocal",
                  "subnotions": [
                    {
                      "created_at": "2017-11-22T13:41:24.154Z",
                      "id": 1,
                      "name": "Emacs",
                      "notepad": null,
                      "slug": "piscine-c-text-editors-emacs"
                    }
                  ],
                  "users": []
                },
                {
                  "id": 4,
                  "kind": "project",
                  "name": "Colle 08",
                  "subnotions": [],
                  "users": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  },
                  "users": {
                    "type": "array"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "kind",
                  "users",
                  "subnotions"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetTags",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tag",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 18,
                "kind": "general",
                "name": "Legend",
                "subnotions": [],
                "users": []
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "subnotions": {
                  "type": "array"
                },
                "users": {
                  "type": "array"
                }
              },
              "required": [
                "id",
                "name",
                "kind",
                "users",
                "subnotions"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "PostTags",
        "summary": "create"
      }
    },
    "/tags/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "DeleteTagsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 6,
                "kind": "project",
                "name": "Jour 13",
                "subnotions": [],
                "users": []
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "subnotions": {
                  "type": "array"
                },
                "users": {
                  "type": "array"
                }
              },
              "required": [
                "name",
                "kind",
                "users",
                "subnotions",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetTagsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "PatchTagsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "PutTagsById",
        "summary": "update"
      }
    },
    "/tags/:tag_id/notions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "tags": [
                    {
                      "id": 6,
                      "kind": "project",
                      "name": "Jour 13"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.091Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "id": 2,
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "id": 10,
                  "name": "Piscine OCaml - D08 - Object oriented programming 2/2",
                  "slug": "piscine-ocaml-d08-object-oriented-programming-2-2",
                  "subnotions": []
                },
                {
                  "tags": [
                    {
                      "id": 7,
                      "kind": "general",
                      "name": "Bocal"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.053Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.825Z",
                      "id": 2,
                      "name": "42",
                      "slug": "42"
                    }
                  ],
                  "id": 9,
                  "name": "Piscine Unity - D07 - GUI 3D, navmesh and raycasting",
                  "slug": "piscine-unity-d07-gui-3d-navmesh-and-raycasting",
                  "subnotions": []
                },
                {
                  "tags": [
                    {
                      "id": 7,
                      "kind": "general",
                      "name": "Bocal"
                    }
                  ],
                  "created_at": "2017-11-22T13:41:24.021Z",
                  "cursus": [
                    {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    }
                  ],
                  "id": 8,
                  "name": "Piscine OCaml - D05 - Imperative traits",
                  "slug": "piscine-ocaml-d05-imperative-traits",
                  "subnotions": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "tags": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "kind": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "kind",
                        "id",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "created_at",
                        "name",
                        "slug"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  }
                },
                "required": [
                  "slug",
                  "created_at",
                  "subnotions",
                  "tags",
                  "cursus",
                  "id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notions"
        ],
        "description": "",
        "operationId": "GetTagsFromTagIdNotions",
        "summary": "index"
      }
    },
    "/tags/:tag_id/tags_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "GetTagsFromTagIdTagsUsers",
        "summary": "index"
      }
    },
    "/tags_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "GetTagsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "PostTagsUsers",
        "summary": "create"
      }
    },
    "/tags_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "DeleteTagsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "GetTagsUsersById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "PatchTagsUsersById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "PutTagsUsersById",
        "summary": "update"
      }
    },
    "/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "id",
                        "login",
                        "url",
                        "leader",
                        "occurrence",
                        "validated",
                        "projects_user_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "id",
                  "url",
                  "updated_at",
                  "terminating_at",
                  "locked_at",
                  "created_at",
                  "locked?",
                  "repo_url",
                  "scale_teams",
                  "project_session_id",
                  "teams_uploads",
                  "name",
                  "final_mark",
                  "project_id",
                  "validated?",
                  "closed?",
                  "status",
                  "users",
                  "repo_uuid",
                  "closed_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetTeams",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "team",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "closed?": false,
                "closed_at": null,
                "created_at": "2019-01-29T13:46:58.977Z",
                "final_mark": null,
                "id": 2368475,
                "locked?": false,
                "locked_at": null,
                "name": "soin",
                "project_id": 688,
                "project_session_id": 431,
                "repo_url": null,
                "repo_uuid": "intra-uuid-ed68a876-be55-42ff-af85-43826f014fb5-2368475",
                "scale_teams": [],
                "status": "creating_group",
                "teams_uploads": [],
                "terminating_at": null,
                "updated_at": "2019-01-29T13:46:59.104Z",
                "url": "http://localhost:13000/v2/teams/2368475",
                "users": [
                  {
                    "id": 12293,
                    "leader": false,
                    "login": "mcanal",
                    "occurrence": 0,
                    "projects_user_id": 824439,
                    "url": "http://localhost:13000/v2/users/mcanal",
                    "validated": false
                  },
                  {
                    "id": 15646,
                    "leader": false,
                    "login": "qduperon",
                    "occurrence": 0,
                    "projects_user_id": 802915,
                    "url": "http://localhost:13000/v2/users/qduperon",
                    "validated": false
                  },
                  {
                    "id": 17241,
                    "leader": false,
                    "login": "mmoullec",
                    "occurrence": 0,
                    "projects_user_id": 1149166,
                    "url": "http://localhost:13000/v2/users/mmoullec",
                    "validated": false
                  },
                  {
                    "id": 17282,
                    "leader": true,
                    "login": "thifranc",
                    "occurrence": 0,
                    "projects_user_id": 1149194,
                    "url": "http://localhost:13000/v2/users/thifranc",
                    "validated": false
                  },
                  {
                    "id": 18668,
                    "leader": false,
                    "login": "jlasne",
                    "occurrence": 0,
                    "projects_user_id": 1097141,
                    "url": "http://localhost:13000/v2/users/jlasne",
                    "validated": false
                  }
                ],
                "validated?": null
              }
            },
            "schema": {
              "properties": {
                "closed?": {
                  "type": "boolean"
                },
                "closed_at": {
                  "type": "null"
                },
                "created_at": {
                  "type": "string"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "locked?": {
                  "type": "boolean"
                },
                "locked_at": {
                  "type": "null"
                },
                "name": {
                  "type": "string"
                },
                "project_id": {
                  "type": "number"
                },
                "project_session_id": {
                  "type": "number"
                },
                "repo_url": {
                  "type": "null"
                },
                "repo_uuid": {
                  "type": "string"
                },
                "scale_teams": {
                  "type": "array"
                },
                "status": {
                  "type": "string"
                },
                "teams_uploads": {
                  "type": "array"
                },
                "terminating_at": {
                  "type": "null"
                },
                "updated_at": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                },
                "users": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "leader": {
                        "type": "boolean"
                      },
                      "login": {
                        "type": "string"
                      },
                      "occurrence": {
                        "type": "number"
                      },
                      "projects_user_id": {
                        "type": "number"
                      },
                      "url": {
                        "type": "string"
                      },
                      "validated": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "projects_user_id",
                      "url",
                      "validated",
                      "id",
                      "leader",
                      "login",
                      "occurrence"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "validated?": {
                  "type": "null"
                }
              },
              "required": [
                "closed?",
                "created_at",
                "terminating_at",
                "url",
                "name",
                "project_session_id",
                "scale_teams",
                "updated_at",
                "closed_at",
                "repo_url",
                "users",
                "project_id",
                "repo_uuid",
                "status",
                "teams_uploads",
                "final_mark",
                "id",
                "locked?",
                "locked_at",
                "validated?"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "PostTeams",
        "summary": "create"
      }
    },
    "/teams/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "DeleteTeamsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetTeamsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "PatchTeamsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "PutTeamsById",
        "summary": "update"
      }
    },
    "/teams/:id/reset_team_uploads": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "PostTeamsFromIdResetTeamUploads",
        "summary": "reset_team_uploads"
      }
    },
    "/teams/:team_id/teams_uploads": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "comment": "Fingerstache street 8-bit viral meditation banh mi xoxo keytar. Quinoa retro ugh organic kickstarter vegan loko disrupt. Cold-pressed keffiyeh retro.",
                  "created_at": "2017-11-22T13:42:09.325Z",
                  "final_mark": 55,
                  "id": 1,
                  "upload": {
                    "created_at": "2017-11-22T13:41:26.168Z",
                    "description": "",
                    "evaluation_id": 2,
                    "id": 1,
                    "name": "Idaho kangaroos",
                    "updated_at": "2017-11-22T13:42:09.328Z"
                  },
                  "upload_id": 1
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "upload": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "evaluation_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "description",
                      "created_at",
                      "updated_at",
                      "id",
                      "evaluation_id"
                    ],
                    "type": "object"
                  },
                  "upload_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "upload",
                  "id",
                  "final_mark",
                  "comment",
                  "created_at",
                  "upload_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "GetTeamsFromTeamIdTeamsUploads",
        "summary": "index"
      }
    },
    "/teams/:team_id/teams_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:37.430Z",
                  "id": 68,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.496Z",
                    "created_at": "2017-11-22T13:41:37.418Z",
                    "final_mark": null,
                    "id": 68,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.471Z",
                    "name": "sebulseb's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:42:09.246Z",
                    "url": "https://api.intra.42.fr/v2/teams/68",
                    "users": [
                      {
                        "id": 125,
                        "leader": true,
                        "login": "sebulseb",
                        "occurrence": 0,
                        "projects_user_id": 68,
                        "url": "https://api.intra.42.fr/v2/users/sebulseb",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 68,
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  },
                  "user_id": 125,
                  "validated": true
                },
                {
                  "created_at": "2017-11-22T13:41:37.310Z",
                  "id": 67,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.385Z",
                    "created_at": "2017-11-22T13:41:37.298Z",
                    "final_mark": null,
                    "id": 67,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.358Z",
                    "name": "hasolo's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-4c9b8f90-9b63-4b8a-b919-4e0d664544c2-67",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:37.386Z",
                    "url": "https://api.intra.42.fr/v2/teams/67",
                    "users": [
                      {
                        "id": 119,
                        "leader": true,
                        "login": "hasolo",
                        "occurrence": 0,
                        "projects_user_id": 67,
                        "url": "https://api.intra.42.fr/v2/users/hasolo",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 67,
                  "user": {
                    "id": 119,
                    "login": "hasolo",
                    "url": "https://api.intra.42.fr/v2/users/hasolo"
                  },
                  "user_id": 119,
                  "validated": true
                },
                {
                  "created_at": "2017-11-22T13:41:37.187Z",
                  "id": 66,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.262Z",
                    "created_at": "2017-11-22T13:41:37.174Z",
                    "final_mark": null,
                    "id": 66,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.238Z",
                    "name": "jarbink2's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5f077c0e-351b-4d77-8334-dac656e42798-66",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:37.263Z",
                    "url": "https://api.intra.42.fr/v2/teams/66",
                    "users": [
                      {
                        "id": 118,
                        "leader": true,
                        "login": "padamida",
                        "occurrence": 0,
                        "projects_user_id": 66,
                        "url": "https://api.intra.42.fr/v2/users/padamida",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 66,
                  "user": {
                    "id": 118,
                    "login": "jarbink2",
                    "url": "https://api.intra.42.fr/v2/users/jarbink2"
                  },
                  "user_id": 118,
                  "validated": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "leader": {
                    "type": "boolean"
                  },
                  "occurrence": {
                    "type": "number"
                  },
                  "team": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "login",
                            "url",
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id",
                            "id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "url",
                      "updated_at",
                      "validated?",
                      "locked_at",
                      "name",
                      "project_id",
                      "created_at",
                      "status",
                      "terminating_at",
                      "locked?",
                      "closed?",
                      "repo_uuid",
                      "project_session_id",
                      "id",
                      "final_mark",
                      "users",
                      "closed_at",
                      "repo_url"
                    ],
                    "type": "object"
                  },
                  "team_id": {
                    "type": "number"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "validated": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "team_id",
                  "occurrence",
                  "user",
                  "validated",
                  "leader",
                  "team",
                  "id",
                  "user_id",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "GetTeamsFromTeamIdTeamsUsers",
        "summary": "index"
      }
    },
    "/teams/:team_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "kind",
                  "data_erasure_date",
                  "email",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "url",
                  "displayname",
                  "staff?",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "updated_at",
                  "location",
                  "alumni?",
                  "first_name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetTeamsFromTeamIdUsers",
        "summary": "index"
      }
    },
    "/teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/teams_uploads": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "comment": "Fingerstache street 8-bit viral meditation banh mi xoxo keytar. Quinoa retro ugh organic kickstarter vegan loko disrupt. Cold-pressed keffiyeh retro.",
                  "created_at": "2017-11-22T13:42:09.325Z",
                  "final_mark": 55,
                  "id": 1,
                  "upload": {
                    "created_at": "2017-11-22T13:41:26.168Z",
                    "description": "",
                    "evaluation_id": 2,
                    "id": 1,
                    "name": "Idaho kangaroos",
                    "updated_at": "2017-11-22T13:42:09.328Z"
                  },
                  "upload_id": 1
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "upload": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "evaluation_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "description",
                      "created_at",
                      "updated_at",
                      "id",
                      "evaluation_id",
                      "name"
                    ],
                    "type": "object"
                  },
                  "upload_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "final_mark",
                  "comment",
                  "created_at",
                  "upload_id",
                  "upload"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "GetTeamsUploads",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "teams_upload",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "comment": "The Other Side of Silence",
                "created_at": "2017-11-22T13:44:07.389Z",
                "final_mark": 42,
                "id": 2,
                "upload": {
                  "created_at": "2017-11-22T13:41:26.168Z",
                  "description": "",
                  "evaluation_id": 2,
                  "id": 1,
                  "name": "Idaho kangaroos",
                  "updated_at": "2017-11-22T13:44:07.391Z"
                },
                "upload_id": 1
              }
            },
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "final_mark": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "upload": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "description",
                    "created_at",
                    "updated_at",
                    "id",
                    "evaluation_id",
                    "name"
                  ],
                  "type": "object"
                },
                "upload_id": {
                  "type": "number"
                }
              },
              "required": [
                "created_at",
                "upload_id",
                "upload",
                "id",
                "final_mark",
                "comment"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "PostTeamsUploads",
        "summary": "create"
      }
    },
    "/teams_uploads/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "DeleteTeamsUploadsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "comment": "Fingerstache street 8-bit viral meditation banh mi xoxo keytar. Quinoa retro ugh organic kickstarter vegan loko disrupt. Cold-pressed keffiyeh retro.",
                "created_at": "2017-11-22T13:42:09.325Z",
                "final_mark": 55,
                "id": 1,
                "upload": {
                  "created_at": "2017-11-22T13:41:26.168Z",
                  "description": "",
                  "evaluation_id": 2,
                  "id": 1,
                  "name": "Idaho kangaroos",
                  "updated_at": "2017-11-22T13:42:09.328Z"
                },
                "upload_id": 1
              }
            },
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "final_mark": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "upload": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "evaluation_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "description",
                    "created_at",
                    "updated_at",
                    "id",
                    "evaluation_id"
                  ],
                  "type": "object"
                },
                "upload_id": {
                  "type": "number"
                }
              },
              "required": [
                "created_at",
                "upload_id",
                "upload",
                "id",
                "final_mark",
                "comment"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "GetTeamsUploadsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "teams_upload",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "PatchTeamsUploadsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "teams_upload",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "PutTeamsUploadsById",
        "summary": "update"
      }
    },
    "/teams_uploads/multiple_create": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "collectionFormat": "multi",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "teams_uploads",
            "type": "array"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Teams uploads"
        ],
        "description": "",
        "operationId": "PostTeamsUploadsMultipleCreate",
        "summary": "multiple_create"
      }
    },
    "/teams_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:37.430Z",
                  "id": 68,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.496Z",
                    "created_at": "2017-11-22T13:41:37.418Z",
                    "final_mark": null,
                    "id": 68,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.471Z",
                    "name": "sebulseb's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:42:09.246Z",
                    "url": "https://api.intra.42.fr/v2/teams/68",
                    "users": [
                      {
                        "id": 125,
                        "leader": true,
                        "login": "sebulseb",
                        "occurrence": 0,
                        "projects_user_id": 68,
                        "url": "https://api.intra.42.fr/v2/users/sebulseb",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 68,
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  },
                  "user_id": 125,
                  "validated": true
                },
                {
                  "created_at": "2017-11-22T13:41:37.310Z",
                  "id": 67,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.385Z",
                    "created_at": "2017-11-22T13:41:37.298Z",
                    "final_mark": null,
                    "id": 67,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.358Z",
                    "name": "hasolo's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-4c9b8f90-9b63-4b8a-b919-4e0d664544c2-67",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:37.386Z",
                    "url": "https://api.intra.42.fr/v2/teams/67",
                    "users": [
                      {
                        "id": 119,
                        "leader": true,
                        "login": "hasolo",
                        "occurrence": 0,
                        "projects_user_id": 67,
                        "url": "https://api.intra.42.fr/v2/users/hasolo",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 67,
                  "user": {
                    "id": 119,
                    "login": "hasolo",
                    "url": "https://api.intra.42.fr/v2/users/hasolo"
                  },
                  "user_id": 119,
                  "validated": true
                },
                {
                  "created_at": "2017-11-22T13:41:37.187Z",
                  "id": 66,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.262Z",
                    "created_at": "2017-11-22T13:41:37.174Z",
                    "final_mark": null,
                    "id": 66,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.238Z",
                    "name": "jarbink2's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5f077c0e-351b-4d77-8334-dac656e42798-66",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:37.263Z",
                    "url": "https://api.intra.42.fr/v2/teams/66",
                    "users": [
                      {
                        "id": 118,
                        "leader": true,
                        "login": "padamida",
                        "occurrence": 0,
                        "projects_user_id": 66,
                        "url": "https://api.intra.42.fr/v2/users/padamida",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 66,
                  "user": {
                    "id": 118,
                    "login": "jarbink2",
                    "url": "https://api.intra.42.fr/v2/users/jarbink2"
                  },
                  "user_id": 118,
                  "validated": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "leader": {
                    "type": "boolean"
                  },
                  "occurrence": {
                    "type": "number"
                  },
                  "team": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "url",
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id",
                            "id",
                            "login"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "repo_url",
                      "url",
                      "updated_at",
                      "validated?",
                      "locked_at",
                      "repo_uuid",
                      "name",
                      "project_id",
                      "created_at",
                      "status",
                      "terminating_at",
                      "locked?",
                      "closed?",
                      "project_session_id",
                      "id",
                      "final_mark",
                      "users",
                      "closed_at"
                    ],
                    "type": "object"
                  },
                  "team_id": {
                    "type": "number"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "validated": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "occurrence",
                  "user",
                  "team_id",
                  "user_id",
                  "created_at",
                  "validated",
                  "leader",
                  "team",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "GetTeamsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "teams_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:44:08.492Z",
                "id": 71,
                "leader": false,
                "occurrence": 0,
                "team": {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:37.496Z",
                  "created_at": "2017-11-22T13:41:37.418Z",
                  "final_mark": null,
                  "id": 68,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:37.471Z",
                  "name": "sebulseb's group",
                  "project_id": 1,
                  "project_session_id": 1,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                  "status": "waiting_for_correction",
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:44:08.496Z",
                  "url": "https://api.intra.42.fr/v2/teams/68",
                  "users": [
                    {
                      "id": 125,
                      "leader": true,
                      "login": "sebulseb",
                      "occurrence": 0,
                      "projects_user_id": 68,
                      "url": "https://api.intra.42.fr/v2/users/sebulseb",
                      "validated": true
                    },
                    {
                      "id": 126,
                      "leader": false,
                      "login": "anakskyw",
                      "occurrence": 0,
                      "projects_user_id": 70,
                      "url": "https://api.intra.42.fr/v2/users/anakskyw",
                      "validated": false
                    }
                  ],
                  "validated?": null
                },
                "team_id": 68,
                "user": {
                  "id": 126,
                  "login": "darthcae",
                  "url": "https://api.intra.42.fr/v2/users/darthcae"
                },
                "user_id": 126,
                "validated": false
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "leader": {
                  "type": "boolean"
                },
                "occurrence": {
                  "type": "number"
                },
                "team": {
                  "properties": {
                    "closed?": {
                      "type": "boolean"
                    },
                    "closed_at": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "final_mark": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "locked?": {
                      "type": "boolean"
                    },
                    "locked_at": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "number"
                    },
                    "project_session_id": {
                      "type": "number"
                    },
                    "repo_url": {
                      "type": "null"
                    },
                    "repo_uuid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "terminating_at": {
                      "type": "null"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "users": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "leader": {
                            "type": "boolean"
                          },
                          "login": {
                            "type": "string"
                          },
                          "occurrence": {
                            "type": "number"
                          },
                          "projects_user_id": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "validated": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "occurrence",
                          "validated",
                          "projects_user_id",
                          "id",
                          "login",
                          "url",
                          "leader"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "validated?": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "users",
                    "validated?",
                    "repo_url",
                    "updated_at",
                    "repo_uuid",
                    "closed_at",
                    "project_session_id",
                    "name",
                    "url",
                    "final_mark",
                    "created_at",
                    "locked?",
                    "locked_at",
                    "id",
                    "project_id",
                    "status",
                    "terminating_at",
                    "closed?"
                  ],
                  "type": "object"
                },
                "team_id": {
                  "type": "number"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated": {
                  "type": "boolean"
                }
              },
              "required": [
                "validated",
                "occurrence",
                "id",
                "team_id",
                "created_at",
                "user",
                "user_id",
                "leader",
                "team"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "PostTeamsUsers",
        "summary": "create"
      }
    },
    "/teams_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "DeleteTeamsUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:28.680Z",
                "id": 3,
                "leader": true,
                "occurrence": 0,
                "team": {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "status": "creating_group",
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                "team_id": 3,
                "user": {
                  "id": 108,
                  "login": "podamer2",
                  "url": "https://api.intra.42.fr/v2/users/podamer2"
                },
                "user_id": 108,
                "validated": true
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "leader": {
                  "type": "boolean"
                },
                "occurrence": {
                  "type": "number"
                },
                "team": {
                  "properties": {
                    "closed?": {
                      "type": "boolean"
                    },
                    "closed_at": {
                      "type": "null"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "final_mark": {
                      "type": "null"
                    },
                    "id": {
                      "type": "number"
                    },
                    "locked?": {
                      "type": "boolean"
                    },
                    "locked_at": {
                      "type": "null"
                    },
                    "name": {
                      "type": "string"
                    },
                    "project_id": {
                      "type": "number"
                    },
                    "project_session_id": {
                      "type": "number"
                    },
                    "repo_url": {
                      "type": "null"
                    },
                    "repo_uuid": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "terminating_at": {
                      "type": "null"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "users": {
                      "items": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "leader": {
                            "type": "boolean"
                          },
                          "login": {
                            "type": "string"
                          },
                          "occurrence": {
                            "type": "number"
                          },
                          "projects_user_id": {
                            "type": "number"
                          },
                          "url": {
                            "type": "string"
                          },
                          "validated": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "occurrence",
                          "validated",
                          "projects_user_id",
                          "id",
                          "login",
                          "url",
                          "leader"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "validated?": {
                      "type": "null"
                    }
                  },
                  "required": [
                    "url",
                    "created_at",
                    "updated_at",
                    "locked?",
                    "closed?",
                    "final_mark",
                    "terminating_at",
                    "validated?",
                    "repo_url",
                    "status",
                    "repo_uuid",
                    "locked_at",
                    "project_session_id",
                    "id",
                    "name",
                    "project_id",
                    "users",
                    "closed_at"
                  ],
                  "type": "object"
                },
                "team_id": {
                  "type": "number"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated": {
                  "type": "boolean"
                }
              },
              "required": [
                "team_id",
                "user_id",
                "created_at",
                "validated",
                "user",
                "id",
                "leader",
                "occurrence",
                "team"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "Return the team_user specified by the <code>:id</code> parameter",
        "operationId": "GetTeamsUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "teams_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "PatchTeamsUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "teams_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "PutTeamsUsersById",
        "summary": "update"
      }
    },
    "/titles": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "GetTitles",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "PostTitles",
        "summary": "create"
      }
    },
    "/titles/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "DeleteTitlesById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "GetTitlesById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "PatchTitlesById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "PutTitlesById",
        "summary": "update"
      }
    },
    "/titles/:title_id/achievements": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "achievements": [],
                  "description": "Regarder 1 video sur l'e-learning.",
                  "id": 1,
                  "image": "/uploads/achievement/image/1/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 1,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/1/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 21 videos sur l'e-learning.",
                  "id": 3,
                  "image": "/uploads/achievement/image/3/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 21,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/3/users",
                  "visible": true
                },
                {
                  "achievements": [],
                  "description": "Regarder 42 videos sur l'e-learning.",
                  "id": 4,
                  "image": "/uploads/achievement/image/4/logo.svg",
                  "kind": "pedagogy",
                  "name": "Film buff",
                  "nbr_of_success": 42,
                  "parent": null,
                  "tier": "none",
                  "title": null,
                  "users_url": "https://api.intra.42.fr/v2/achievements/4/users",
                  "visible": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "achievements": {
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_of_success": {
                    "type": "number"
                  },
                  "parent": {
                    "type": "null"
                  },
                  "tier": {
                    "type": "string"
                  },
                  "title": {
                    "type": "null"
                  },
                  "users_url": {
                    "type": "string"
                  },
                  "visible": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "users_url",
                  "achievements",
                  "id",
                  "name",
                  "kind",
                  "visible",
                  "image",
                  "description",
                  "tier",
                  "nbr_of_success",
                  "parent",
                  "title"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Achievements"
        ],
        "description": "List all visibles achievements. Invisibles achievements need at least the <code>basic_staff</code> role.",
        "operationId": "GetTitlesFromTitleIdAchievements",
        "summary": "index"
      }
    },
    "/titles/:title_id/titles_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "GetTitlesFromTitleIdTitlesUsers",
        "summary": "index"
      }
    },
    "/titles/:title_id/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "large",
                          "medium",
                          "small",
                          "micro"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month",
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?",
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetTitlesFromTitleIdUsers",
        "summary": "index"
      }
    },
    "/titles_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "GetTitlesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "titles_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "PostTitlesUsers",
        "summary": "create"
      }
    },
    "/titles_users/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "DeleteTitlesUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "GetTitlesUsersById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "titles_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "PatchTitlesUsersById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "titles_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "PutTitlesUsersById",
        "summary": "update"
      }
    },
    "/transactions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "reason": "Mathieu c'est le plus fort ♥️",
                  "transactable_id": 81,
                  "transactable_type": "Achievement",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "user_id": 22,
                  "value": 150
                },
                {
                  "id": 2,
                  "reason": "Réunion entre démons.",
                  "transactable_id": 186,
                  "transactable_type": "Event",
                  "user": {
                    "id": 123,
                    "login": "jeanne",
                    "url": "https://api.intra.42.fr/v2/users/jeanne"
                  },
                  "user_id": 123,
                  "value": 666
                },
                {
                  "id": 2,
                  "reason": "Exam C 24 janvier",
                  "transactable_id": null,
                  "transactable_type": "Tuteur api",
                  "user": {
                    "id": 12837,
                    "login": "jbailhac",
                    "url": "https://api.intra.42.fr/v2/users/jbailhac"
                  },
                  "user_id": 12837,
                  "value": 1
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "transactable_id": {
                    "type": "number"
                  },
                  "transactable_type": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "value",
                  "user_id",
                  "transactable_id",
                  "transactable_type",
                  "reason",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "description": "",
        "operationId": "GetTransactions",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "transaction",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 6,
                "reason": "cadeau",
                "transactable_id": null,
                "transactable_type": "Tuteur api",
                "user": {
                  "id": 123,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                },
                "user_id": 123,
                "value": 5
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "transactable_id": {
                  "type": "null"
                },
                "transactable_type": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "transactable_id",
                "transactable_type",
                "reason",
                "user",
                "id",
                "value"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "description": "",
        "operationId": "PostTransactions",
        "summary": "create"
      }
    },
    "/transactions/:id": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "description": "",
        "operationId": "DeleteTransactionsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 1,
                "reason": "Mathieu c'est le plus fort ♥️",
                "transactable_id": 81,
                "transactable_type": "Achievement",
                "user": {
                  "id": 22,
                  "login": "mathieu",
                  "url": "https://api.intra.42.fr/v2/users/mathieu"
                },
                "user_id": 22,
                "value": 150
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "transactable_id": {
                  "type": "number"
                },
                "transactable_type": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "transactable_id",
                "transactable_type",
                "reason",
                "user",
                "id",
                "value",
                "user_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "description": "",
        "operationId": "GetTransactionsById",
        "summary": "show"
      }
    },
    "/translations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:40:59.699Z",
                  "default": true,
                  "fields": {
                    "description": null,
                    "name": "Joburg-Final-Exam"
                  },
                  "id": 1,
                  "language_id": 2,
                  "translatable_id": 1,
                  "translatable_type": "Tag",
                  "translations_structure": {
                    "created_at": "2017-11-22T13:40:59.444Z",
                    "fields_organisation": {
                      "description": "text",
                      "name": "string"
                    },
                    "id": 11,
                    "identified_by": [
                      "name"
                    ],
                    "searchable_by": [
                      "name"
                    ],
                    "structures_kind": "simple",
                    "type_name": "Tag",
                    "up_to_date": true,
                    "updated_at": "2017-11-22T13:40:59.444Z"
                  },
                  "translations_structure_id": 11,
                  "up_to_date": true,
                  "updated_at": "2017-11-22T13:40:59.716Z",
                  "user_id": null
                },
                {
                  "created_at": "2017-11-22T13:40:59.747Z",
                  "default": true,
                  "fields": {
                    "description": null,
                    "name": "Friends with Benefits"
                  },
                  "id": 2,
                  "language_id": 2,
                  "translatable_id": 2,
                  "translatable_type": "Tag",
                  "translations_structure": {
                    "created_at": "2017-11-22T13:40:59.444Z",
                    "fields_organisation": {
                      "description": "text",
                      "name": "string"
                    },
                    "id": 11,
                    "identified_by": [
                      "name"
                    ],
                    "searchable_by": [
                      "name"
                    ],
                    "structures_kind": "simple",
                    "type_name": "Tag",
                    "up_to_date": true,
                    "updated_at": "2017-11-22T13:40:59.444Z"
                  },
                  "translations_structure_id": 11,
                  "up_to_date": true,
                  "updated_at": "2017-11-22T13:40:59.759Z",
                  "user_id": null
                },
                {
                  "created_at": "2017-11-22T13:40:59.783Z",
                  "default": true,
                  "fields": {
                    "description": null,
                    "name": "GBmu"
                  },
                  "id": 3,
                  "language_id": 2,
                  "translatable_id": 3,
                  "translatable_type": "Tag",
                  "translations_structure": {
                    "created_at": "2017-11-22T13:40:59.444Z",
                    "fields_organisation": {
                      "description": "text",
                      "name": "string"
                    },
                    "id": 11,
                    "identified_by": [
                      "name"
                    ],
                    "searchable_by": [
                      "name"
                    ],
                    "structures_kind": "simple",
                    "type_name": "Tag",
                    "up_to_date": true,
                    "updated_at": "2017-11-22T13:40:59.444Z"
                  },
                  "translations_structure_id": 11,
                  "up_to_date": true,
                  "updated_at": "2017-11-22T13:40:59.795Z",
                  "user_id": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "default": {
                    "type": "boolean"
                  },
                  "fields": {
                    "properties": {
                      "description": {
                        "type": "null"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "description"
                    ],
                    "type": "object"
                  },
                  "id": {
                    "type": "number"
                  },
                  "language_id": {
                    "type": "number"
                  },
                  "translatable_id": {
                    "type": "number"
                  },
                  "translatable_type": {
                    "type": "string"
                  },
                  "translations_structure": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "fields_organisation": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "description"
                        ],
                        "type": "object"
                      },
                      "id": {
                        "type": "number"
                      },
                      "identified_by": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "searchable_by": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "structures_kind": {
                        "type": "string"
                      },
                      "type_name": {
                        "type": "string"
                      },
                      "up_to_date": {
                        "type": "boolean"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "type_name",
                      "id",
                      "searchable_by",
                      "structures_kind",
                      "up_to_date",
                      "fields_organisation",
                      "identified_by",
                      "created_at",
                      "updated_at"
                    ],
                    "type": "object"
                  },
                  "translations_structure_id": {
                    "type": "number"
                  },
                  "up_to_date": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "null"
                  }
                },
                "required": [
                  "default",
                  "up_to_date",
                  "translations_structure_id",
                  "id",
                  "translatable_id",
                  "translatable_type",
                  "created_at",
                  "user_id",
                  "translations_structure",
                  "language_id",
                  "fields",
                  "updated_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "GetTranslations",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "translation",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:44:17.382Z",
                "default": false,
                "fields": "{\"description\":\"You passed the Piscine test. Welcome to 42!\"}",
                "id": 99,
                "language_id": 3,
                "translatable_id": 1,
                "translatable_type": "Achievement",
                "translations_structure": {
                  "created_at": "2017-11-22T13:40:59.398Z",
                  "fields_organisation": {
                    "description": "string",
                    "name": "string"
                  },
                  "id": 6,
                  "identified_by": [
                    "name"
                  ],
                  "searchable_by": [
                    "name"
                  ],
                  "structures_kind": "simple",
                  "type_name": "Achievement",
                  "up_to_date": true,
                  "updated_at": "2017-11-22T13:40:59.398Z"
                },
                "translations_structure_id": 6,
                "up_to_date": true,
                "updated_at": "2017-11-22T13:44:17.382Z",
                "user_id": null
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "fields": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language_id": {
                  "type": "number"
                },
                "translatable_id": {
                  "type": "number"
                },
                "translatable_type": {
                  "type": "string"
                },
                "translations_structure": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "fields_organisation": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "description"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "type": "number"
                    },
                    "identified_by": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "searchable_by": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "structures_kind": {
                      "type": "string"
                    },
                    "type_name": {
                      "type": "string"
                    },
                    "up_to_date": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "searchable_by",
                    "identified_by",
                    "updated_at",
                    "structures_kind",
                    "up_to_date",
                    "fields_organisation",
                    "type_name",
                    "created_at"
                  ],
                  "type": "object"
                },
                "translations_structure_id": {
                  "type": "number"
                },
                "up_to_date": {
                  "type": "boolean"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "null"
                }
              },
              "required": [
                "created_at",
                "user_id",
                "id",
                "translatable_type",
                "fields",
                "updated_at",
                "default",
                "up_to_date",
                "translations_structure_id",
                "translations_structure",
                "translatable_id",
                "language_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "PostTranslations",
        "summary": "create"
      }
    },
    "/translations/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "DeleteTranslationsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:40:59.783Z",
                "default": true,
                "fields": {
                  "description": null,
                  "name": "GBmu"
                },
                "id": 3,
                "language_id": 2,
                "translatable_id": 3,
                "translatable_type": "Tag",
                "translations_structure": {
                  "created_at": "2017-11-22T13:40:59.444Z",
                  "fields_organisation": {
                    "description": "text",
                    "name": "string"
                  },
                  "id": 11,
                  "identified_by": [
                    "name"
                  ],
                  "searchable_by": [
                    "name"
                  ],
                  "structures_kind": "simple",
                  "type_name": "Tag",
                  "up_to_date": true,
                  "updated_at": "2017-11-22T13:40:59.444Z"
                },
                "translations_structure_id": 11,
                "up_to_date": true,
                "updated_at": "2017-11-22T13:40:59.795Z",
                "user_id": null
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "default": {
                  "type": "boolean"
                },
                "fields": {
                  "properties": {
                    "description": {
                      "type": "null"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "description"
                  ],
                  "type": "object"
                },
                "id": {
                  "type": "number"
                },
                "language_id": {
                  "type": "number"
                },
                "translatable_id": {
                  "type": "number"
                },
                "translatable_type": {
                  "type": "string"
                },
                "translations_structure": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "fields_organisation": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "description"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "type": "number"
                    },
                    "identified_by": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "searchable_by": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "structures_kind": {
                      "type": "string"
                    },
                    "type_name": {
                      "type": "string"
                    },
                    "up_to_date": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "structures_kind",
                    "type_name",
                    "id",
                    "identified_by",
                    "up_to_date",
                    "fields_organisation",
                    "created_at",
                    "updated_at",
                    "searchable_by"
                  ],
                  "type": "object"
                },
                "translations_structure_id": {
                  "type": "number"
                },
                "up_to_date": {
                  "type": "boolean"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "translatable_id",
                "translatable_type",
                "fields",
                "created_at",
                "updated_at",
                "translations_structure_id",
                "language_id",
                "user_id",
                "default",
                "up_to_date",
                "translations_structure"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "GetTranslationsById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "translation",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "PatchTranslationsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "translation",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "PutTranslationsById",
        "summary": "update"
      }
    },
    "/translations/upload": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "file",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Translations"
        ],
        "description": "",
        "operationId": "PostTranslationsUpload",
        "summary": "upload"
      }
    },
    "/user_candidatures": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "GetUserCandidatures",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_candidature",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "birth_city": "West Stefanieburgh",
                "birth_country": "Burkina Faso",
                "birth_date": "1989-01-30",
                "contact_affiliation": "other",
                "contact_first_name": "Barton",
                "contact_last_name": "Mertz",
                "contact_phone1": "0695847362",
                "contact_phone2": "0491314200",
                "country": "Honduras",
                "created_at": "2017-11-22T13:44:17.725Z",
                "email": null,
                "gender": "female",
                "hidden_phone": null,
                "id": 127,
                "language": "",
                "max_level_logic": 2,
                "max_level_memory": 1,
                "meeting_date": "2017-07-11T00:00:00.000Z",
                "other_information": "3",
                "phone": null,
                "phone_country_code": null,
                "pin": "4242",
                "piscine_date": "2017-11-15",
                "postal_city": "Tillmanton",
                "postal_complement": "",
                "postal_country": "Georgia",
                "postal_street": "5030 Serenity Plaza",
                "postal_zip_code": "65440",
                "updated_at": "2017-11-22T13:44:17.725Z",
                "user_id": 9,
                "zip_code": "37528-3874"
              }
            },
            "schema": {
              "properties": {
                "birth_city": {
                  "type": "string"
                },
                "birth_country": {
                  "type": "string"
                },
                "birth_date": {
                  "type": "string"
                },
                "contact_affiliation": {
                  "type": "string"
                },
                "contact_first_name": {
                  "type": "string"
                },
                "contact_last_name": {
                  "type": "string"
                },
                "contact_phone1": {
                  "type": "string"
                },
                "contact_phone2": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "email": {
                  "type": "null"
                },
                "gender": {
                  "type": "string"
                },
                "hidden_phone": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "type": "string"
                },
                "max_level_logic": {
                  "type": "number"
                },
                "max_level_memory": {
                  "type": "number"
                },
                "meeting_date": {
                  "type": "string"
                },
                "other_information": {
                  "type": "string"
                },
                "phone": {
                  "type": "null"
                },
                "phone_country_code": {
                  "type": "null"
                },
                "pin": {
                  "type": "string"
                },
                "piscine_date": {
                  "type": "string"
                },
                "postal_city": {
                  "type": "string"
                },
                "postal_complement": {
                  "type": "string"
                },
                "postal_country": {
                  "type": "string"
                },
                "postal_street": {
                  "type": "string"
                },
                "postal_zip_code": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "postal_street",
                "user_id",
                "country",
                "zip_code",
                "postal_complement",
                "postal_country",
                "contact_last_name",
                "phone",
                "birth_city",
                "max_level_logic",
                "pin",
                "birth_date",
                "birth_country",
                "language",
                "piscine_date",
                "id",
                "gender",
                "contact_first_name",
                "contact_phone1",
                "max_level_memory",
                "meeting_date",
                "created_at",
                "email",
                "postal_zip_code",
                "other_information",
                "postal_city",
                "contact_affiliation",
                "contact_phone2",
                "updated_at",
                "phone_country_code",
                "hidden_phone"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "PostUserCandidatures",
        "summary": "create"
      }
    },
    "/user_candidatures/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "birth_city": "East Rosieland",
                "birth_country": "Kamino",
                "birth_date": "1993-05-04",
                "contact_affiliation": null,
                "contact_first_name": null,
                "contact_last_name": null,
                "contact_phone1": null,
                "contact_phone2": null,
                "country": "Kashyyyk",
                "created_at": "2017-11-22T13:41:06.408Z",
                "email": "chewbacca@braunleuschke.biz",
                "gender": "male",
                "hidden_phone": null,
                "id": 23,
                "language": null,
                "max_level_logic": null,
                "max_level_memory": null,
                "meeting_date": null,
                "other_information": null,
                "phone": null,
                "phone_country_code": null,
                "pin": null,
                "piscine_date": null,
                "postal_city": "Keagantown",
                "postal_complement": null,
                "postal_country": null,
                "postal_street": "11747 Jerod Drives",
                "postal_zip_code": null,
                "updated_at": "2017-11-22T13:41:06.408Z",
                "user_id": 23,
                "zip_code": "71800-2563"
              }
            },
            "schema": {
              "properties": {
                "birth_city": {
                  "type": "string"
                },
                "birth_country": {
                  "type": "string"
                },
                "birth_date": {
                  "type": "string"
                },
                "contact_affiliation": {
                  "type": "null"
                },
                "contact_first_name": {
                  "type": "null"
                },
                "contact_last_name": {
                  "type": "null"
                },
                "contact_phone1": {
                  "type": "null"
                },
                "contact_phone2": {
                  "type": "null"
                },
                "country": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "hidden_phone": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "type": "null"
                },
                "max_level_logic": {
                  "type": "null"
                },
                "max_level_memory": {
                  "type": "null"
                },
                "meeting_date": {
                  "type": "null"
                },
                "other_information": {
                  "type": "null"
                },
                "phone": {
                  "type": "null"
                },
                "phone_country_code": {
                  "type": "null"
                },
                "pin": {
                  "type": "null"
                },
                "piscine_date": {
                  "type": "null"
                },
                "postal_city": {
                  "type": "string"
                },
                "postal_complement": {
                  "type": "null"
                },
                "postal_country": {
                  "type": "null"
                },
                "postal_street": {
                  "type": "string"
                },
                "postal_zip_code": {
                  "type": "null"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "postal_complement",
                "contact_phone1",
                "max_level_memory",
                "language",
                "phone_country_code",
                "birth_date",
                "postal_zip_code",
                "max_level_logic",
                "meeting_date",
                "email",
                "hidden_phone",
                "user_id",
                "zip_code",
                "country",
                "gender",
                "postal_street",
                "contact_first_name",
                "id",
                "birth_city",
                "birth_country",
                "piscine_date",
                "updated_at",
                "contact_last_name",
                "other_information",
                "created_at",
                "postal_country",
                "contact_affiliation",
                "phone",
                "postal_city",
                "contact_phone2",
                "pin"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "GetUserCandidaturesById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_candidature",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "PatchUserCandidaturesById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_candidature",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "PutUserCandidaturesById",
        "summary": "update"
      }
    },
    "/users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "dash_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "accreditation_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnership_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "achievement_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-24T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2018-07-17T08:57:33.128Z",
                  "data_erasure_date": "2025-10-24T00:00:00.000+02:00",
                  "displayname": "Malo Allain",
                  "email": "malallai@student.42.fr",
                  "first_name": "Malo",
                  "id": 39962,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/39a641ed152b654cfbff5c5864eb05c1/malallai.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/a818d7a54298d333411557d0b55b61b3/large_malallai.jpg",
                      "medium": "https://cdn.intra.42.fr/users/53691acd1e0ea75b782ddbe121c17423/medium_malallai.jpg",
                      "micro": "https://cdn.intra.42.fr/users/6f74b46e2016b0e6c41fa05b5952e17c/micro_malallai.jpg",
                      "small": "https://cdn.intra.42.fr/users/617de91b59fd7e59ecaf6470a4b37645/small_malallai.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Allain",
                  "location": null,
                  "login": "malallai",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2018",
                  "staff?": false,
                  "updated_at": "2022-09-27T18:48:28.207Z",
                  "url": "https://api.intra.42.fr/v2/users/malallai",
                  "usual_first_name": null,
                  "usual_full_name": "Malo Allain",
                  "wallet": 290
                },
                {
                  "active?": true,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2025-10-11T00:00:00.000+02:00",
                  "correction_point": 4,
                  "created_at": "2017-06-22T11:42:39.426Z",
                  "data_erasure_date": "2025-10-11T00:00:00.000+02:00",
                  "displayname": "Alexandre Sandolo",
                  "email": "asandolo@student.42.fr",
                  "first_name": "Alexandre",
                  "id": 26134,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/e6ad4cc0cd6b69c9f18cf7fb8fefda22/asandolo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/5100f27887ee3dc6c864b618ddb44b1f/large_asandolo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/df044745577b908566f1cdca3e927c23/medium_asandolo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/ff75319aa7fa4332336edf9216c51e0d/micro_asandolo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2946d4da689a314b6ef6f090ce724a1b/small_asandolo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Sandolo",
                  "location": null,
                  "login": "asandolo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2017",
                  "staff?": false,
                  "updated_at": "2022-09-27T19:20:19.605Z",
                  "url": "https://api.intra.42.fr/v2/users/asandolo",
                  "usual_first_name": null,
                  "usual_full_name": "Alexandre Sandolo",
                  "wallet": 1776
                },
                {
                  "active?": true,
                  "alumni?": true,
                  "alumnized_at": "2021-09-28T17:06:21.597Z",
                  "anonymize_date": null,
                  "correction_point": 3,
                  "created_at": "2016-07-19T15:43:15.282Z",
                  "data_erasure_date": null,
                  "displayname": "Charles Labourier",
                  "email": "clabouri@student.42.fr",
                  "first_name": "Charles",
                  "id": 20152,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/17dd9c4ee21baf1e2b259e8de08adee2/clabouri.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/d310252790c850b2fa3158ad4d97ac17/large_clabouri.jpg",
                      "medium": "https://cdn.intra.42.fr/users/07b3b6ef492df6ed2148b5c6f4fb5f7d/medium_clabouri.jpg",
                      "micro": "https://cdn.intra.42.fr/users/de2ebeba74c5ff018f47f124cb84568b/micro_clabouri.jpg",
                      "small": "https://cdn.intra.42.fr/users/a28d995d70d99b439cbcf38852b197a1/small_clabouri.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Labourier",
                  "location": null,
                  "login": "clabouri",
                  "phone": "hidden",
                  "pool_month": "august",
                  "pool_year": "2016",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:36:06.910Z",
                  "url": "https://api.intra.42.fr/v2/users/clabouri",
                  "usual_first_name": null,
                  "usual_full_name": "Charles Labourier",
                  "wallet": 525
                },
                {
                  "active?": false,
                  "alumni?": false,
                  "alumnized_at": null,
                  "anonymize_date": "2024-01-08T00:00:00.000+01:00",
                  "correction_point": 3,
                  "created_at": "2016-01-20T00:38:39.938Z",
                  "data_erasure_date": "2024-01-08T00:00:00.000+01:00",
                  "displayname": "Natalia Krouglov",
                  "email": "nkrouglo@student.42.fr",
                  "first_name": "Natalia",
                  "id": 14819,
                  "image": {
                    "link": "https://cdn.intra.42.fr/users/04fc6c399a81d114bd479dc3a5b90ea4/nkrouglo.jpg",
                    "versions": {
                      "large": "https://cdn.intra.42.fr/users/594b01edc55f87bf4918a861823cc448/large_nkrouglo.jpg",
                      "medium": "https://cdn.intra.42.fr/users/3b1dc67a9b58c7e8b8bd072fa9c4aa6e/medium_nkrouglo.jpg",
                      "micro": "https://cdn.intra.42.fr/users/7e52b8f556ada1e2cf23d5c6d6515094/micro_nkrouglo.jpg",
                      "small": "https://cdn.intra.42.fr/users/2a8263df5f95515917148068fa82eb3f/small_nkrouglo.jpg"
                    }
                  },
                  "kind": "student",
                  "last_name": "Krouglov",
                  "location": null,
                  "login": "nkrouglo",
                  "phone": "hidden",
                  "pool_month": "july",
                  "pool_year": "2015",
                  "staff?": false,
                  "updated_at": "2022-09-19T15:35:56.534Z",
                  "url": "https://api.intra.42.fr/v2/users/nkrouglo",
                  "usual_first_name": null,
                  "usual_full_name": "Natalia Krouglov",
                  "wallet": 240
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "active?": {
                    "type": "boolean"
                  },
                  "alumni?": {
                    "type": "boolean"
                  },
                  "alumnized_at": {
                    "type": "null"
                  },
                  "anonymize_date": {
                    "type": "string"
                  },
                  "correction_point": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "data_erasure_date": {
                    "type": "string"
                  },
                  "displayname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "first_name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "properties": {
                      "link": {
                        "type": "string"
                      },
                      "versions": {
                        "properties": {
                          "large": {
                            "type": "string"
                          },
                          "medium": {
                            "type": "string"
                          },
                          "micro": {
                            "type": "string"
                          },
                          "small": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "small",
                          "micro",
                          "large",
                          "medium"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "link",
                      "versions"
                    ],
                    "type": "object"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "location": {
                    "type": "null"
                  },
                  "login": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "pool_month": {
                    "type": "string"
                  },
                  "pool_year": {
                    "type": "string"
                  },
                  "staff?": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "usual_first_name": {
                    "type": "null"
                  },
                  "usual_full_name": {
                    "type": "string"
                  },
                  "wallet": {
                    "type": "number"
                  }
                },
                "required": [
                  "correction_point",
                  "wallet",
                  "anonymize_date",
                  "created_at",
                  "login",
                  "url",
                  "displayname",
                  "staff?",
                  "updated_at",
                  "first_name",
                  "location",
                  "alumni?",
                  "kind",
                  "data_erasure_date",
                  "email",
                  "last_name",
                  "usual_full_name",
                  "phone",
                  "pool_year",
                  "alumnized_at",
                  "active?",
                  "id",
                  "usual_first_name",
                  "image",
                  "pool_month"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "id": 127,
                "login": "anakisky",
                "url": "https://api.intra.42.fr/v2/users/anakisky"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "number"
                },
                "login": {
                  "type": "string"
                },
                "url": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "login",
                "url"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "\n<h2 id=\"this_is_the_main_call_for_user_creation_on_the_42_ecosystem\">This is the main call for user creation on the 42 ecosystem.</h2>\nThis call requires at least the <code>email</code>, <code>campus_id</code>, <code>first_name</code> and <code>last_name</code> fields. If the login isn’t specified, it will be generated from the supplied <code>first_name</code> and the <code>last_name</code>. <strong>If no cursus is supplied, the user will join the cursus <code>piscine-c</code> by default</strong>.If an endpoint is configured for the supplied campus, it will be triggered before save. You can read more about campus endpoints on <a href=\"/apidoc/2.0/endpoint.html\">the endpoint documentation</a>.This call also accept additional data, nested under <code>user_candidature_attributes</code>, wich can be added later with the <a href=\"/apidoc/2.0/user_candidature/create.html\">user candidature call</a> and is only visible for the user and at least the <code>basic_staff</code> role. The supplied email must be the personal email of the user. It will be moved to user_candidature after save, replacer by the given campus’s alias. Adding an image will generate an original, a medium and a small version of this one.The <code>meta</code> key allow a hash with <code>ldap_group</code>. The <code>ldap_group</code> has transmited to LDAP server if campus is",
        "operationId": "PostUsers",
        "summary": "create"
      }
    },
    "/users/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "achievements": [],
                "active?": true,
                "alumni?": false,
                "anonymize_date": "2021-02-20T00:00:00.000+03:00",
                "campus": [
                  {
                    "id": 1,
                    "language": {
                      "created_at": "2017-11-22T13:40:59.468Z",
                      "id": 3,
                      "identifier": "ro",
                      "name": "Romanian",
                      "updated_at": "2017-11-22T13:41:26.139Z"
                    },
                    "name": "Cluj",
                    "time_zone": "Europe/Bucharest",
                    "users_count": 28,
                    "vogsphere_id": 1
                  }
                ],
                "campus_users": [
                  {
                    "campus_id": 1,
                    "id": 2,
                    "is_primary": true,
                    "user_id": 2
                  }
                ],
                "correction_point": 4,
                "cursus_users": [
                  {
                    "begin_at": "2017-05-14T21:37:50.172Z",
                    "cursus": {
                      "created_at": "2017-11-22T13:41:00.750Z",
                      "id": 1,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    "cursus_id": 1,
                    "end_at": null,
                    "grade": null,
                    "has_coalition": true,
                    "id": 2,
                    "level": 0,
                    "skills": [],
                    "user": {
                      "id": 2,
                      "login": "andre",
                      "url": "https://api.intra.42.fr/v2/users/andre"
                    }
                  }
                ],
                "data_erasure_date": null,
                "displayname": "André Aubin",
                "email": "andre@42.fr",
                "expertises_users": [
                  {
                    "contact_me": false,
                    "created_at": "2017-11-22T13:41:22.504Z",
                    "expertise_id": 3,
                    "id": 2,
                    "interested": false,
                    "user_id": 2,
                    "value": 2
                  }
                ],
                "first_name": "André",
                "groups": [],
                "id": 2,
                "image": {
                  "link": "https://cdn.intra.42.fr/users/1234567890/andre.jpg",
                  "versions": {
                    "large": "https://cdn.intra.42.fr/users/1234567890/large_andre.jpg",
                    "medium": "https://cdn.intra.42.fr/users/1234567890/medium_andre.jpg",
                    "micro": "https://cdn.intra.42.fr/users/1234567890/micro_andre.jpgg",
                    "small": "https://cdn.intra.42.fr/users/1234567890/small_andre.jpg"
                  }
                },
                "kind": "admin",
                "languages_users": [
                  {
                    "created_at": "2017-11-22T13:41:03.638Z",
                    "id": 2,
                    "language_id": 3,
                    "position": 1,
                    "user_id": 2
                  }
                ],
                "last_name": "Aubin",
                "location": null,
                "login": "andre",
                "partnerships": [],
                "patroned": [
                  {
                    "created_at": "2017-11-22T13:42:11.565Z",
                    "godfather_id": 15,
                    "id": 4,
                    "ongoing": true,
                    "updated_at": "2017-11-22T13:42:11.572Z",
                    "user_id": 2
                  }
                ],
                "patroning": [],
                "phone": null,
                "pool_month": "july",
                "pool_year": "2016",
                "projects_users": [],
                "roles": [],
                "staff?": false,
                "titles": [],
                "titles_users": [],
                "url": "https://api.intra.42.fr/v2/users/andre",
                "usual_first_name": "Juliette",
                "usual_full_name": "Juliette Aubin",
                "wallet": 0
              }
            },
            "schema": {
              "properties": {
                "achievements": {
                  "type": "array"
                },
                "active?": {
                  "type": "boolean"
                },
                "alumni?": {
                  "type": "boolean"
                },
                "anonymize_date": {
                  "type": "string"
                },
                "campus": {
                  "items": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "identifier",
                          "created_at",
                          "updated_at"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "time_zone",
                      "language",
                      "users_count",
                      "vogsphere_id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "campus_users": {
                  "items": {
                    "properties": {
                      "campus_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_primary": {
                        "type": "boolean"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "user_id",
                      "campus_id",
                      "is_primary"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "correction_point": {
                  "type": "number"
                },
                "cursus_users": {
                  "items": {
                    "properties": {
                      "begin_at": {
                        "type": "string"
                      },
                      "cursus": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "created_at",
                          "name",
                          "slug"
                        ],
                        "type": "object"
                      },
                      "cursus_id": {
                        "type": "number"
                      },
                      "end_at": {
                        "type": "null"
                      },
                      "grade": {
                        "type": "null"
                      },
                      "has_coalition": {
                        "type": "boolean"
                      },
                      "id": {
                        "type": "number"
                      },
                      "level": {
                        "type": "number"
                      },
                      "skills": {
                        "type": "array"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "login": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "login",
                          "url"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "grade",
                      "level",
                      "cursus_id",
                      "has_coalition",
                      "user",
                      "cursus",
                      "end_at",
                      "begin_at",
                      "skills",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "data_erasure_date": {
                  "type": "null"
                },
                "displayname": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "expertises_users": {
                  "items": {
                    "properties": {
                      "contact_me": {
                        "type": "boolean"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "expertise_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "interested": {
                        "type": "boolean"
                      },
                      "user_id": {
                        "type": "number"
                      },
                      "value": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "expertise_id",
                      "interested",
                      "value",
                      "contact_me",
                      "created_at",
                      "user_id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "first_name": {
                  "type": "string"
                },
                "groups": {
                  "type": "array"
                },
                "id": {
                  "type": "number"
                },
                "image": {
                  "properties": {
                    "link": {
                      "type": "string"
                    },
                    "versions": {
                      "properties": {
                        "large": {
                          "type": "string"
                        },
                        "medium": {
                          "type": "string"
                        },
                        "micro": {
                          "type": "string"
                        },
                        "small": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "large",
                        "medium",
                        "small",
                        "micro"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "link",
                    "versions"
                  ],
                  "type": "object"
                },
                "kind": {
                  "type": "string"
                },
                "languages_users": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language_id": {
                        "type": "number"
                      },
                      "position": {
                        "type": "number"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "created_at",
                      "id",
                      "language_id",
                      "user_id",
                      "position"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "last_name": {
                  "type": "string"
                },
                "location": {
                  "type": "null"
                },
                "login": {
                  "type": "string"
                },
                "partnerships": {
                  "type": "array"
                },
                "patroned": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "godfather_id": {
                        "type": "number"
                      },
                      "id": {
                        "type": "number"
                      },
                      "ongoing": {
                        "type": "boolean"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "user_id",
                      "godfather_id",
                      "ongoing",
                      "created_at",
                      "updated_at",
                      "id"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "patroning": {
                  "type": "array"
                },
                "phone": {
                  "type": "null"
                },
                "pool_month": {
                  "type": "string"
                },
                "pool_year": {
                  "type": "string"
                },
                "projects_users": {
                  "type": "array"
                },
                "roles": {
                  "type": "array"
                },
                "staff?": {
                  "type": "boolean"
                },
                "titles": {
                  "type": "array"
                },
                "titles_users": {
                  "type": "array"
                },
                "url": {
                  "type": "string"
                },
                "usual_first_name": {
                  "type": "string"
                },
                "usual_full_name": {
                  "type": "string"
                },
                "wallet": {
                  "type": "number"
                }
              },
              "required": [
                "first_name",
                "staff?",
                "partnerships",
                "active?",
                "groups",
                "email",
                "login",
                "usual_full_name",
                "correction_point",
                "pool_year",
                "data_erasure_date",
                "titles_users",
                "url",
                "image",
                "pool_month",
                "alumni?",
                "last_name",
                "kind",
                "location",
                "cursus_users",
                "campus_users",
                "titles",
                "patroning",
                "phone",
                "expertises_users",
                "achievements",
                "usual_first_name",
                "displayname",
                "wallet",
                "anonymize_date",
                "projects_users",
                "languages_users",
                "id",
                "patroned",
                "roles",
                "campus"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "GetUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "PatchUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "PutUsersById",
        "summary": "update"
      }
    },
    "/users/:id/correction_points/add": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reason",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amount",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "PostUsersFromIdCorrectionPointsAdd",
        "summary": "add_correction_point"
      }
    },
    "/users/:id/correction_points/remove": {
      "delete": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reason",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amount",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "",
        "operationId": "DeleteUsersFromIdCorrectionPointsRemove",
        "summary": "remove_correction_point"
      }
    },
    "/users/:id/exam": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "\n<h1 id=\"warning\">Warning:</h1>\nThis route is deprecated and will be removed, tuesday 2 august 2023.",
        "operationId": "GetUsersFromIdExam",
        "summary": "exam"
      }
    },
    "/users/:id/locations_stats": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "begin_at",
            "type": "string"
          },
          {
            "in": "query",
            "name": "end_at",
            "type": "string"
          },
          {
            "in": "query",
            "name": "time_zone",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2021-01-20": "01:49:22.04",
                "2021-02-11": "02:58:40.99942",
                "2021-02-17": "04:28:59.221241",
                "2021-02-18": "03:20:40.099337",
                "2021-02-19": "06:44:53.740148",
                "2021-02-20": "04:12:54.190362",
                "2021-02-23": "05:58:58.220621",
                "2021-02-24": "04:49:50.382865",
                "2021-02-25": "04:36:29.373432",
                "2021-02-26": "05:16:55.007148",
                "2021-02-27": "03:05:36.994655",
                "2021-03-03": "00:21:53.590291",
                "2021-03-05": "06:05:59.372873",
                "2021-03-06": "04:51:22.499393",
                "2021-03-09": "04:40:36.89249",
                "2021-03-10": "03:23:36.453802",
                "2021-03-13": "02:20:35.738681",
                "2021-03-17": "02:56:21.097917"
              }
            },
            "schema": {
              "properties": {
                "2021-01-20": {
                  "type": "string"
                },
                "2021-02-11": {
                  "type": "string"
                },
                "2021-02-17": {
                  "type": "string"
                },
                "2021-02-18": {
                  "type": "string"
                },
                "2021-02-19": {
                  "type": "string"
                },
                "2021-02-20": {
                  "type": "string"
                },
                "2021-02-23": {
                  "type": "string"
                },
                "2021-02-24": {
                  "type": "string"
                },
                "2021-02-25": {
                  "type": "string"
                },
                "2021-02-26": {
                  "type": "string"
                },
                "2021-02-27": {
                  "type": "string"
                },
                "2021-03-03": {
                  "type": "string"
                },
                "2021-03-05": {
                  "type": "string"
                },
                "2021-03-06": {
                  "type": "string"
                },
                "2021-03-09": {
                  "type": "string"
                },
                "2021-03-10": {
                  "type": "string"
                },
                "2021-03-13": {
                  "type": "string"
                },
                "2021-03-17": {
                  "type": "string"
                }
              },
              "required": [
                "2021-03-03",
                "2021-02-25",
                "2021-02-19",
                "2021-02-11",
                "2021-03-10",
                "2021-03-09",
                "2021-03-05",
                "2021-01-20",
                "2021-02-26",
                "2021-02-20",
                "2021-02-18",
                "2021-02-17",
                "2021-03-06",
                "2021-02-27",
                "2021-02-24",
                "2021-02-23",
                "2021-03-17",
                "2021-03-13"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "This route returns the total amount of hours spent by the targeted user between the <code>begin_at</code> and <code>end_at</code>.By default, this will return the data from the last 4 months.",
        "operationId": "GetUsersFromIdLocationsStats",
        "summary": "locations_stats"
      }
    },
    "/users/:user_id/amendments": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "amendment",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Amendments"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdAmendments",
        "summary": "index"
      }
    },
    "/users/:user_id/anti_grav_units_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "anti_grav_units_user": {
                    "anti_grav_unit_id": 1,
                    "begin_date": "2019-12-09",
                    "close_id": 65822,
                    "created_at": "2019-12-09T14:17:15.986Z",
                    "expected_end_date": "2020-02-10",
                    "id": 64,
                    "is_free": true,
                    "reason": "I secured a job/internship",
                    "updated_at": "2019-12-09T14:17:15.986Z",
                    "user_id": 18763
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "anti_grav_units_user": {
                    "properties": {
                      "anti_grav_unit_id": {
                        "type": "number"
                      },
                      "begin_date": {
                        "type": "string"
                      },
                      "close_id": {
                        "type": "number"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "expected_end_date": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "is_free": {
                        "type": "boolean"
                      },
                      "reason": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "expected_end_date",
                      "created_at",
                      "updated_at",
                      "anti_grav_unit_id",
                      "close_id",
                      "id",
                      "begin_date",
                      "user_id",
                      "is_free",
                      "reason"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "anti_grav_units_user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Anti grav units users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdAntiGravUnitsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/apps": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:43:11.377Z",
                  "description": null,
                  "id": 7,
                  "image": null,
                  "name": "test intrateam staff oauth application",
                  "owner": {
                    "id": 74,
                    "login": "pamidala",
                    "url": "https://api.intra.42.fr/v2/users/pamidala"
                  },
                  "public": true,
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "description": "Approved application without rate limits",
                      "id": 16,
                      "name": "Official App"
                    },
                    {
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                      "id": 7,
                      "name": "Basic Staff"
                    },
                    {
                      "description": "Member of the staff, with higher privileges",
                      "id": 11,
                      "name": "Advanced Staff"
                    },
                    {
                      "description": "manage all",
                      "id": 1,
                      "name": "Intrateam"
                    }
                  ],
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.434Z",
                  "website": null
                },
                {
                  "created_at": "2017-11-22T13:43:11.315Z",
                  "description": null,
                  "id": 6,
                  "image": null,
                  "name": "test pedago oauth application",
                  "owner": {},
                  "public": true,
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "description": "Approved application without rate limits",
                      "id": 16,
                      "name": "Official App"
                    },
                    {
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                      "id": 7,
                      "name": "Basic Staff"
                    },
                    {
                      "description": "Member of the staff, with higher privileges",
                      "id": 11,
                      "name": "Advanced Staff"
                    },
                    {
                      "description": "Manage skills, cursus and all low level pedagogic data",
                      "id": 5,
                      "name": "Advanced Tutor"
                    }
                  ],
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.369Z",
                  "website": null
                },
                {
                  "created_at": "2017-11-22T13:43:11.261Z",
                  "description": null,
                  "id": 5,
                  "image": null,
                  "name": "test advanced staff oauth application",
                  "owner": {},
                  "public": true,
                  "rate_limit": 1800,
                  "roles": [
                    {
                      "description": "Approved application without rate limits",
                      "id": 16,
                      "name": "Official App"
                    },
                    {
                      "description": "Member of the staff, can manage community services, closes, exams and access advanced student data",
                      "id": 7,
                      "name": "Basic Staff"
                    },
                    {
                      "description": "Member of the staff, with higher privileges",
                      "id": 11,
                      "name": "Advanced Staff"
                    }
                  ],
                  "scopes": [],
                  "updated_at": "2017-11-22T13:43:11.307Z",
                  "website": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "description": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image": {
                    "type": "null"
                  },
                  "name": {
                    "type": "string"
                  },
                  "owner": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id"
                    ],
                    "type": "object"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "rate_limit": {
                    "type": "number"
                  },
                  "roles": {
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "description"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "scopes": {
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "website": {
                    "type": "null"
                  }
                },
                "required": [
                  "updated_at",
                  "owner",
                  "id",
                  "website",
                  "image",
                  "public",
                  "scopes",
                  "created_at",
                  "rate_limit",
                  "roles",
                  "name",
                  "description"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Apps"
        ],
        "description": "Return all the <strong>public</strong> created applications working with the APIv2.If there is a resource owner, also returns the resource owner applications, <strong>public or not</strong>.",
        "operationId": "GetUsersFromUserIdApps",
        "summary": "index"
      }
    },
    "/users/:user_id/campus_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Campus users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCampusUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "campus_id": 6,
                "id": 127,
                "is_primary": false,
                "user_id": 1
              }
            },
            "schema": {
              "properties": {
                "campus_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "is_primary": {
                  "type": "boolean"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "id",
                "user_id",
                "campus_id",
                "is_primary"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Campus users"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdCampusUsers",
        "summary": "create"
      }
    },
    "/users/:user_id/certificates_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "certificate_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "certificates_user",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Certificates users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCertificatesUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/closes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closer": {
                    "id": 2,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "community_services": [
                    {
                      "created_at": "2017-11-22T13:42:20.944Z",
                      "duration": 14400,
                      "id": 2,
                      "occupation": "West Virginia lions",
                      "schedule_at": "2017-11-28T06:00:00.000Z",
                      "state": "schedule",
                      "updated_at": "2017-11-22T13:42:21.007Z"
                    }
                  ],
                  "created_at": "2017-11-22T13:42:20.888Z",
                  "end_at": null,
                  "id": 3,
                  "reason": "Connecticut giants",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.987Z",
                  "user": {
                    "id": 82,
                    "login": "kyren",
                    "url": "https://api.intra.42.fr/v2/users/kyren"
                  }
                },
                {
                  "closer": {
                    "id": 3,
                    "login": "gargamel",
                    "url": "https://api.intra.42.fr/v2/users/gargamel"
                  },
                  "community_services": [
                    {
                      "created_at": "2017-11-22T13:42:20.806Z",
                      "duration": 14400,
                      "id": 1,
                      "occupation": "North Carolina spirits",
                      "schedule_at": "2017-11-27T11:00:00.000Z",
                      "state": "schedule",
                      "updated_at": "2017-11-22T13:42:20.876Z"
                    }
                  ],
                  "created_at": "2017-11-22T13:42:20.695Z",
                  "end_at": null,
                  "id": 2,
                  "reason": "Florida druids",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.857Z",
                  "user": {
                    "id": 114,
                    "login": "darmaul",
                    "url": "https://api.intra.42.fr/v2/users/darmaul"
                  }
                },
                {
                  "closer": {
                    "id": 3,
                    "login": "gargamel",
                    "url": "https://api.intra.42.fr/v2/users/gargamel"
                  },
                  "community_services": [],
                  "created_at": "2017-11-22T13:42:20.695Z",
                  "end_at": "2017-11-24T13:42:20.857Z",
                  "id": 1,
                  "reason": "Florida druids",
                  "state": "unclose",
                  "updated_at": "2017-11-22T13:42:20.857Z",
                  "user": {
                    "id": 114,
                    "login": "darmaul",
                    "url": "https://api.intra.42.fr/v2/users/darmaul"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closer": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "login",
                      "url",
                      "id"
                    ],
                    "type": "object"
                  },
                  "community_services": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "duration": {
                          "type": "number"
                        },
                        "id": {
                          "type": "number"
                        },
                        "occupation": {
                          "type": "string"
                        },
                        "schedule_at": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "duration",
                        "schedule_at",
                        "occupation",
                        "state",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "state",
                  "updated_at",
                  "community_services",
                  "user",
                  "id",
                  "created_at",
                  "end_at",
                  "closer",
                  "reason"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCloses",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "close",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "closer": {
                  "id": 2,
                  "login": "andre",
                  "url": "https://api.intra.42.fr/v2/users/andre"
                },
                "community_services": [],
                "created_at": "2017-11-22T13:43:29.676Z",
                "id": 3,
                "reason": "Mange des patates douces en cluster 🍠",
                "state": "close",
                "updated_at": "2017-11-22T13:43:29.676Z",
                "user": {
                  "id": 64,
                  "login": "shepalpa",
                  "url": "https://api.intra.42.fr/v2/users/shepalpa"
                }
              }
            },
            "schema": {
              "properties": {
                "closer": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "community_services": {
                  "type": "array"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "reason": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "updated_at",
                "community_services",
                "user",
                "closer",
                "id",
                "reason",
                "state",
                "created_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Closes"
        ],
        "description": "If you want to link a community service with this close, pass it trough the <code>community_services_attributes</code> array attribute. An email is automatically sent to the user when he is assigned to a community service.",
        "operationId": "PostUsersFromUserIdCloses",
        "summary": "create"
      }
    },
    "/users/:user_id/coalitions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "bloc_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalition",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "color": "#087262",
                  "id": 2,
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/2/logo.svg",
                  "name": "Kansas giants",
                  "score": 83,
                  "slug": "super-slug",
                  "user_id": 90
                },
                {
                  "color": "#1c7f08",
                  "id": 1,
                  "image_url": "https://admin.intra.42.fr/uploads/coalition/image/1/logo.svg",
                  "name": "Indiana goblins",
                  "score": 54,
                  "slug": "super-slug",
                  "user_id": 38
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "color": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "image_url": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "score": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "image_url",
                  "color",
                  "score",
                  "user_id",
                  "id",
                  "name",
                  "slug"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Coalitions"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCoalitions",
        "summary": "index"
      }
    },
    "/users/:user_id/coalitions_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "coalition_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          },
          {
            "in": "query",
            "name": "coalitions_user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "coalition_id": 1,
                  "created_at": "2017-11-22T13:42:09.775Z",
                  "id": 4,
                  "updated_at": "2017-11-22T13:42:09.775Z",
                  "user_id": 67
                },
                {
                  "coalition_id": 1,
                  "created_at": "2017-11-22T13:42:09.750Z",
                  "id": 3,
                  "updated_at": "2017-11-22T13:42:09.750Z",
                  "user_id": 25
                },
                {
                  "coalition_id": 2,
                  "created_at": "2017-11-22T13:42:09.723Z",
                  "id": 2,
                  "updated_at": "2017-11-22T13:42:09.723Z",
                  "user_id": 23
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "coalition_id": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "id",
                  "coalition_id",
                  "user_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Coalitions users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCoalitionsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/correction_point_historics": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Correction point historics"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCorrectionPointHistorics",
        "summary": "index"
      }
    },
    "/users/:user_id/cursus_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2016-12-16T07:41:39.516Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 126,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  }
                },
                {
                  "begin_at": "2017-11-10T21:38:19.158Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.750Z",
                    "id": 1,
                    "name": "Piscine C",
                    "slug": "piscine-c"
                  },
                  "cursus_id": 1,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 125,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  }
                },
                {
                  "begin_at": "2017-07-22T03:48:20.016Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "end_at": null,
                  "grade": "Cadet",
                  "has_coalition": true,
                  "id": 124,
                  "level": 0,
                  "skills": [],
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "grade": {
                    "type": "string"
                  },
                  "has_coalition": {
                    "type": "boolean"
                  },
                  "id": {
                    "type": "number"
                  },
                  "level": {
                    "type": "number"
                  },
                  "skills": {
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "end_at",
                  "skills",
                  "user",
                  "has_coalition",
                  "cursus",
                  "id",
                  "begin_at",
                  "grade",
                  "level",
                  "cursus_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdCursusUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "begin_at": "2017-07-22T13:43:10.000Z",
                "cursus": {
                  "created_at": "2017-11-22T13:41:00.825Z",
                  "id": 2,
                  "name": "42",
                  "slug": "42"
                },
                "cursus_id": 2,
                "end_at": "2018-03-22T13:43:10.000Z",
                "grade": null,
                "has_coalition": true,
                "id": 127,
                "level": 0,
                "skills": [],
                "user": {
                  "id": 1,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                }
              }
            },
            "schema": {
              "properties": {
                "begin_at": {
                  "type": "string"
                },
                "cursus": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "created_at",
                    "name",
                    "slug"
                  ],
                  "type": "object"
                },
                "cursus_id": {
                  "type": "number"
                },
                "end_at": {
                  "type": "string"
                },
                "grade": {
                  "type": "null"
                },
                "has_coalition": {
                  "type": "boolean"
                },
                "id": {
                  "type": "number"
                },
                "level": {
                  "type": "number"
                },
                "skills": {
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "login",
                    "url",
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "level",
                "skills",
                "cursus_id",
                "has_coalition",
                "user",
                "cursus",
                "id",
                "end_at",
                "grade",
                "begin_at"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Cursus users"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdCursusUsers",
        "summary": "create"
      }
    },
    "/users/:user_id/events": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-25T13:42:10.090Z",
                  "campus_ids": [
                    3
                  ],
                  "created_at": "2017-11-22T13:42:10.110Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et selfies beard williamsburg quisquam ramps. Molestiae craft beer consectetur asperiores dolor. Small batch placeat banjo vhs mollitia aut vero. Distinctio est readymade offal tote bag +1.",
                  "end_at": "2017-11-25T15:42:10.090Z",
                  "id": 4,
                  "kind": "rush",
                  "location": "West Wisozk",
                  "max_people": 112,
                  "name": "Oklahoma whales",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 15,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 36,
                      "name": "AI",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 37,
                      "name": "Entrepreneurship",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.127Z",
                  "waitlist": null
                },
                {
                  "begin_at": "2017-11-24T13:42:10.014Z",
                  "campus_ids": [
                    6
                  ],
                  "created_at": "2017-11-22T13:42:10.037Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Accusantium lumbersexual pug minima you probably haven't heard of them. Dolore officiis kitsch lumbersexual temporibus twee church-key. Ramps molestiae ut esse squid. Molestiae delectus est optio. Biodiesel roof maiores iphone nobis.",
                  "end_at": "2017-11-24T15:42:10.015Z",
                  "id": 3,
                  "kind": "other",
                  "location": "Southern Bauch",
                  "max_people": 39,
                  "name": "Wyoming cattle",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 2,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 10,
                      "name": "Meeting",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 15,
                      "name": "Association",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.082Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 392,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 3,
                    "waitlistable_type": "Event"
                  }
                },
                {
                  "begin_at": "2017-11-23T13:42:09.970Z",
                  "campus_ids": [
                    4
                  ],
                  "created_at": "2017-11-22T13:42:09.991Z",
                  "cursus_ids": [
                    1
                  ],
                  "description": "Et tousled small batch street voluptas +1. Nisi small batch shoreditch est bicycle rights similique sed. Pbr&b sit exercitationem etsy ea. Cumque et forage reprehenderit officia quas. Chartreuse ad tacos commodi.",
                  "end_at": "2017-11-23T15:42:09.970Z",
                  "id": 2,
                  "kind": "association",
                  "location": "South Wisconsin Academy",
                  "max_people": 94,
                  "name": "Nevada sheep",
                  "nbr_subscribers": 0,
                  "prohibition_of_cancellation": 10,
                  "themes": [
                    {
                      "created_at": "2019-01-09T17:18:54.779Z",
                      "id": 12,
                      "name": "Security",
                      "updated_at": "2019-01-09T17:18:54.779Z"
                    },
                    {
                      "created_at": "2019-01-09T17:18:54.819Z",
                      "id": 42,
                      "name": "Recrutement",
                      "updated_at": "2019-01-09T17:18:54.819Z"
                    }
                  ],
                  "updated_at": "2017-11-22T13:42:10.009Z",
                  "waitlist": {
                    "created_at": "2019-01-14T16:25:05.941Z",
                    "id": 33,
                    "updated_at": "2019-01-14T16:25:05.941Z",
                    "waitlistable_id": 2,
                    "waitlistable_type": "Event"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "description": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "prohibition_of_cancellation": {
                    "type": "number"
                  },
                  "themes": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "created_at",
                        "id",
                        "name",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "waitlist": {
                    "type": "null"
                  }
                },
                "required": [
                  "begin_at",
                  "updated_at",
                  "id",
                  "description",
                  "cursus_ids",
                  "waitlist",
                  "themes",
                  "kind",
                  "max_people",
                  "nbr_subscribers",
                  "end_at",
                  "campus_ids",
                  "prohibition_of_cancellation",
                  "name",
                  "location",
                  "created_at"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Events"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdEvents",
        "summary": "index"
      }
    },
    "/users/:user_id/events_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Events users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdEventsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/exams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2015-07-17T15:00:00.000Z",
                  "campus": {
                    "active": true,
                    "address": "96, boulevard Bessières",
                    "city": "Paris",
                    "country": "France",
                    "default_hidden_phone": false,
                    "email_extension": "42.fr",
                    "facebook": "https://facebook.com/42born2code",
                    "id": 1,
                    "language": {
                      "created_at": "2014-11-02T16:43:38.466Z",
                      "id": 1,
                      "identifier": "fr",
                      "name": "Français",
                      "updated_at": "2021-10-08T16:28:44.040Z"
                    },
                    "name": "Paris",
                    "time_zone": "Europe/Paris",
                    "twitter": "https://twitter.com/42born2code",
                    "users_count": 22319,
                    "vogsphere_id": 1,
                    "website": "http://www.42.fr/",
                    "zip": "75017"
                  },
                  "created_at": "2015-07-15T13:05:26.006Z",
                  "cursus": [
                    {
                      "created_at": "2015-05-01T17:46:08.433Z",
                      "id": 4,
                      "name": "Piscine C",
                      "slug": "piscine-c"
                    },
                    {
                      "created_at": "2015-09-21T12:36:09.128Z",
                      "id": 6,
                      "name": "Piscine C décloisonnée",
                      "slug": "piscine-c-decloisonnee"
                    },
                    {
                      "created_at": "2017-02-01T14:25:42.300Z",
                      "id": 13,
                      "name": "42 Labs",
                      "slug": "42-labs"
                    }
                  ],
                  "end_at": "2015-07-17T19:00:00.000Z",
                  "id": 42,
                  "ip_range": "10.11.0.0/16,10.12.0.0/16,10.13.0.0/16,10.42.0.0/16",
                  "location": "e1, e2, e3",
                  "max_people": 780,
                  "name": "Piscine C - Exam 01",
                  "nbr_subscribers": 594,
                  "projects": [
                    {
                      "attachments": [],
                      "children": [],
                      "created_at": "2015-06-29T13:14:31.702Z",
                      "exam": true,
                      "git_id": null,
                      "id": 405,
                      "name": "Exam01",
                      "parent": null,
                      "repository": null,
                      "slug": "piscine-c-exam01",
                      "updated_at": "2021-09-01T08:35:01.074Z"
                    }
                  ],
                  "updated_at": "2018-08-27T16:56:15.032Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "campus": {
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "address": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "default_hidden_phone": {
                        "type": "boolean"
                      },
                      "email_extension": {
                        "type": "string"
                      },
                      "facebook": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "language": {
                        "properties": {
                          "created_at": {
                            "type": "string"
                          },
                          "id": {
                            "type": "number"
                          },
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "identifier",
                          "created_at",
                          "updated_at",
                          "id",
                          "name"
                        ],
                        "type": "object"
                      },
                      "name": {
                        "type": "string"
                      },
                      "time_zone": {
                        "type": "string"
                      },
                      "twitter": {
                        "type": "string"
                      },
                      "users_count": {
                        "type": "number"
                      },
                      "vogsphere_id": {
                        "type": "number"
                      },
                      "website": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "address",
                      "zip",
                      "email_extension",
                      "time_zone",
                      "users_count",
                      "active",
                      "facebook",
                      "default_hidden_phone",
                      "id",
                      "vogsphere_id",
                      "website",
                      "twitter",
                      "language",
                      "country",
                      "city"
                    ],
                    "type": "object"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "slug",
                        "id",
                        "created_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ip_range": {
                    "type": "string"
                  },
                  "location": {
                    "type": "string"
                  },
                  "max_people": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nbr_subscribers": {
                    "type": "number"
                  },
                  "projects": {
                    "items": {
                      "properties": {
                        "attachments": {
                          "type": "array"
                        },
                        "children": {
                          "type": "array"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "exam": {
                          "type": "boolean"
                        },
                        "git_id": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "parent": {
                          "type": "null"
                        },
                        "repository": {
                          "type": "null"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "children",
                        "attachments",
                        "id",
                        "name",
                        "slug",
                        "parent",
                        "created_at",
                        "updated_at",
                        "exam",
                        "git_id",
                        "repository"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "campus",
                  "id",
                  "begin_at",
                  "location",
                  "nbr_subscribers",
                  "created_at",
                  "updated_at",
                  "cursus",
                  "projects",
                  "ip_range",
                  "end_at",
                  "max_people",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Exams"
        ],
        "description": "List all visibles exams. Invisibles exams need at least the <code>basic_staff</code> role.",
        "operationId": "GetUsersFromUserIdExams",
        "summary": "index"
      }
    },
    "/users/:user_id/experiences": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "skill_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "partnerships_user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Experiences"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdExperiences",
        "summary": "index"
      }
    },
    "/users/:user_id/expertises_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.630Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.803Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/angularjs/expertises_users",
                    "id": 6,
                    "kind": "frameworks",
                    "name": "AngularJS",
                    "slug": "angularjs",
                    "url": "https://api.intra.42.fr/v2/expertises/angularjs"
                  },
                  "expertise_id": 6,
                  "id": 126,
                  "interested": false,
                  "user": {
                    "id": 126,
                    "login": "darthcae",
                    "url": "https://api.intra.42.fr/v2/users/darthcae"
                  },
                  "user_id": 126,
                  "value": 2
                },
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.614Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.791Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/c/expertises_users",
                    "id": 4,
                    "kind": "languages",
                    "name": "C",
                    "slug": "c",
                    "url": "https://api.intra.42.fr/v2/expertises/c"
                  },
                  "expertise_id": 4,
                  "id": 125,
                  "interested": false,
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  },
                  "user_id": 125,
                  "value": 2
                },
                {
                  "contact_me": false,
                  "created_at": "2017-11-22T13:41:23.598Z",
                  "expertise": {
                    "created_at": "2017-11-22T13:41:01.773Z",
                    "expertises_users_url": "https://api.intra.42.fr/v2/expertises/net/expertises_users",
                    "id": 1,
                    "kind": "languages",
                    "name": ".NET",
                    "slug": "net",
                    "url": "https://api.intra.42.fr/v2/expertises/net"
                  },
                  "expertise_id": 1,
                  "id": 124,
                  "interested": false,
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  },
                  "user_id": 124,
                  "value": 2
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "contact_me": {
                    "type": "boolean"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "expertise": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "expertises_users_url": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "expertises_users_url",
                      "id",
                      "name",
                      "slug",
                      "url",
                      "kind",
                      "created_at"
                    ],
                    "type": "object"
                  },
                  "expertise_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "interested": {
                    "type": "boolean"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "expertise_id",
                  "expertise",
                  "user",
                  "id",
                  "interested",
                  "value",
                  "contact_me",
                  "created_at",
                  "user_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdExpertisesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "expertise_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "expertises_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "contact_me": false,
                "created_at": "2017-11-22T13:43:39.996Z",
                "expertise": {
                  "created_at": "2017-11-22T13:41:01.779Z",
                  "expertises_users_url": "https://api.intra.42.fr/v2/expertises/jquery/expertises_users",
                  "id": 2,
                  "kind": "other",
                  "name": "jQuery",
                  "slug": "jquery",
                  "url": "https://api.intra.42.fr/v2/expertises/jquery"
                },
                "expertise_id": 2,
                "id": 127,
                "interested": false,
                "user": {
                  "id": 106,
                  "login": "anaskywa",
                  "url": "https://api.intra.42.fr/v2/users/anaskywa"
                },
                "user_id": 106,
                "value": 1
              }
            },
            "schema": {
              "properties": {
                "contact_me": {
                  "type": "boolean"
                },
                "created_at": {
                  "type": "string"
                },
                "expertise": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "expertises_users_url": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "created_at",
                    "expertises_users_url",
                    "id",
                    "name",
                    "slug",
                    "url",
                    "kind"
                  ],
                  "type": "object"
                },
                "expertise_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "interested": {
                  "type": "boolean"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "value": {
                  "type": "number"
                }
              },
              "required": [
                "contact_me",
                "created_at",
                "user_id",
                "user",
                "id",
                "interested",
                "value",
                "expertise",
                "expertise_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Expertises users"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdExpertisesUsers",
        "summary": "create"
      }
    },
    "/users/:user_id/free_past_agu": {
      "post": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "duration",
            "type": "string"
          },
          {
            "in": "query",
            "name": "reason",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Add a free agu in the past for a user which implies to delay the blackhole, Please follow the rules about the free agu. (if you dont know the rules contact a 42network staff)",
        "operationId": "PostUsersFromUserIdFreePastAgu",
        "summary": "free_past_agu"
      }
    },
    "/users/:user_id/gitlab_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Gitlab users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdGitlabUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/groups": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "gnomes"
                },
                {
                  "id": 2,
                  "name": "vampires"
                },
                {
                  "id": 3,
                  "name": "sons"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Groups"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdGroups",
        "summary": "index"
      }
    },
    "/users/:user_id/groups_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "group_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:42:12.972Z",
                  "group_id": 1,
                  "id": 1,
                  "updated_at": "2017-11-22T13:42:12.972Z",
                  "user_id": 33
                },
                {
                  "created_at": "2017-11-22T13:42:12.992Z",
                  "group_id": 2,
                  "id": 2,
                  "updated_at": "2017-11-22T13:42:12.992Z",
                  "user_id": 119
                },
                {
                  "created_at": "2017-11-22T13:42:13.010Z",
                  "group_id": 3,
                  "id": 3,
                  "updated_at": "2017-11-22T13:42:13.010Z",
                  "user_id": 44
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "group_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "created_at",
                  "updated_at",
                  "id",
                  "user_id",
                  "group_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Groups users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdGroupsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/internships": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdInternships",
        "summary": "index"
      }
    },
    "/users/:user_id/internships/:id": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "administration_id": 1,
                "breach_at": null,
                "company_address": "96 Boulevard Bessières",
                "company_boss_user_email": "boss@42.fr",
                "company_boss_user_first_name": "FirstName",
                "company_boss_user_last_name": "LastName",
                "company_boss_user_phone": "0123456789",
                "company_city": "Paris",
                "company_country": "France",
                "company_name": "Association 42",
                "company_postal": "75017",
                "company_siret": "0",
                "company_user_email": "gargamel@42.fr",
                "company_user_first_name": "Quentin",
                "company_user_last_name": "Bollache",
                "company_user_phone": "0123456789",
                "company_user_post": "Responsable technique et pedagogique",
                "contract_type": "stage",
                "convention": {
                  "convention": {
                    "url": "/uploads/internship/convention/jgengo-9543c17018c04a7f99fd01bf62a478/2350/jgengo.zip"
                  }
                },
                "currency": "eur",
                "days": "[\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\"]",
                "duration": 6,
                "end_at": "2018-01-30T23:00:00.000Z",
                "id": 2350,
                "internship_address": "96 Boulevard Bessières",
                "internship_city": "Paris",
                "internship_country": "France",
                "internship_postal": "75017",
                "language_id": 1,
                "movement": null,
                "nb_days": 5,
                "nb_hours": 35,
                "offer_id": null,
                "salary": 50000,
                "start_at": "2017-07-31T22:00:00.000Z",
                "state": "uploaded",
                "subject": "Développement de tous les sites web reliés à 42",
                "user": {
                  "id": 19265,
                  "login": "jgengo",
                  "url": "http://localhost:13000/v2/users/jgengo"
                },
                "user_address": "5 rue de la paix",
                "user_city": "Paris",
                "user_country": "France",
                "user_postal": "75001"
              }
            },
            "schema": {
              "properties": {
                "administration_id": {
                  "type": "number"
                },
                "breach_at": {
                  "type": "null"
                },
                "company_address": {
                  "type": "string"
                },
                "company_boss_user_email": {
                  "type": "string"
                },
                "company_boss_user_first_name": {
                  "type": "string"
                },
                "company_boss_user_last_name": {
                  "type": "string"
                },
                "company_boss_user_phone": {
                  "type": "string"
                },
                "company_city": {
                  "type": "string"
                },
                "company_country": {
                  "type": "string"
                },
                "company_name": {
                  "type": "string"
                },
                "company_postal": {
                  "type": "string"
                },
                "company_siret": {
                  "type": "string"
                },
                "company_user_email": {
                  "type": "string"
                },
                "company_user_first_name": {
                  "type": "string"
                },
                "company_user_last_name": {
                  "type": "string"
                },
                "company_user_phone": {
                  "type": "string"
                },
                "company_user_post": {
                  "type": "string"
                },
                "contract_type": {
                  "type": "string"
                },
                "convention": {
                  "properties": {
                    "convention": {
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "convention"
                  ],
                  "type": "object"
                },
                "currency": {
                  "type": "string"
                },
                "days": {
                  "type": "string"
                },
                "duration": {
                  "type": "number"
                },
                "end_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "internship_address": {
                  "type": "string"
                },
                "internship_city": {
                  "type": "string"
                },
                "internship_country": {
                  "type": "string"
                },
                "internship_postal": {
                  "type": "string"
                },
                "language_id": {
                  "type": "number"
                },
                "movement": {
                  "type": "null"
                },
                "nb_days": {
                  "type": "number"
                },
                "nb_hours": {
                  "type": "number"
                },
                "offer_id": {
                  "type": "null"
                },
                "salary": {
                  "type": "number"
                },
                "start_at": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "subject": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "user_address": {
                  "type": "string"
                },
                "user_city": {
                  "type": "string"
                },
                "user_country": {
                  "type": "string"
                },
                "user_postal": {
                  "type": "string"
                }
              },
              "required": [
                "internship_city",
                "duration",
                "user",
                "offer_id",
                "company_boss_user_first_name",
                "company_boss_user_email",
                "company_boss_user_phone",
                "subject",
                "start_at",
                "administration_id",
                "company_user_post",
                "company_user_email",
                "user_city",
                "company_boss_user_last_name",
                "company_user_phone",
                "company_postal",
                "internship_postal",
                "nb_days",
                "user_country",
                "state",
                "user_postal",
                "company_name",
                "company_user_last_name",
                "internship_country",
                "contract_type",
                "id",
                "days",
                "company_user_first_name",
                "company_country",
                "company_siret",
                "nb_hours",
                "movement",
                "salary",
                "language_id",
                "convention",
                "currency",
                "internship_address",
                "user_address",
                "company_city",
                "end_at",
                "breach_at",
                "company_address"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdInternshipsById",
        "summary": "show"
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "PatchUsersFromUserIdInternshipsById",
        "summary": "update"
      },
      "put": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "internship",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Internships"
        ],
        "description": "",
        "operationId": "PutUsersFromUserIdInternshipsById",
        "summary": "update"
      }
    },
    "/users/:user_id/languages_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:20.168Z",
                  "id": 126,
                  "language_id": 3,
                  "position": 1,
                  "user_id": 126
                },
                {
                  "created_at": "2017-11-22T13:41:20.041Z",
                  "id": 125,
                  "language_id": 2,
                  "position": 1,
                  "user_id": 125
                },
                {
                  "created_at": "2017-11-22T13:41:19.915Z",
                  "id": 124,
                  "language_id": 3,
                  "position": 1,
                  "user_id": 124
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "language_id": {
                    "type": "number"
                  },
                  "position": {
                    "type": "number"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "position",
                  "created_at",
                  "id",
                  "language_id",
                  "user_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdLanguagesUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "languages_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:42.355Z",
                "id": 127,
                "language_id": 3,
                "position": 1,
                "user_id": 7
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language_id": {
                  "type": "number"
                },
                "position": {
                  "type": "number"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "position",
                "created_at",
                "id",
                "language_id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdLanguagesUsers",
        "summary": "create"
      }
    },
    "/users/:user_id/languages_users/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "DeleteUsersFromUserIdLanguagesUsersById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:41:12.367Z",
                "id": 70,
                "language_id": 2,
                "position": 1,
                "user_id": 70
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "language_id": {
                  "type": "number"
                },
                "position": {
                  "type": "number"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "language_id",
                "user_id",
                "position",
                "created_at",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdLanguagesUsersById",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "languages_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "PatchUsersFromUserIdLanguagesUsersById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "languages_user",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Languages users"
        ],
        "description": "",
        "operationId": "PutUsersFromUserIdLanguagesUsersById",
        "summary": "update"
      }
    },
    "/users/:user_id/locations": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "host": "ariel",
                  "begin_at": "2017-11-22T13:42:10.248Z",
                  "campus_id": 1,
                  "end_at": "2017-11-22T13:42:10.248Z",
                  "floor": null,
                  "id": 6,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 120,
                    "login": "obkenobi",
                    "url": "https://api.intra.42.fr/v2/users/obkenobi"
                  }
                },
                {
                  "host": "puck",
                  "begin_at": "2017-11-22T13:42:09.406Z",
                  "campus_id": 1,
                  "end_at": "2017-11-22T13:42:09.406Z",
                  "floor": null,
                  "id": 1,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 73,
                    "login": "padmamid",
                    "url": "https://api.intra.42.fr/v2/users/padmamid"
                  }
                },
                {
                  "host": "ganymede",
                  "begin_at": "2017-11-21T13:42:10.737Z",
                  "campus_id": 1,
                  "end_at": "2017-11-21T14:42:10.737Z",
                  "floor": null,
                  "id": 7,
                  "post": null,
                  "primary": true,
                  "row": null,
                  "user": {
                    "id": 53,
                    "login": "dvader",
                    "url": "https://api.intra.42.fr/v2/users/dvader"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "begin_at": {
                    "type": "string"
                  },
                  "campus_id": {
                    "type": "number"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "floor": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "post": {
                    "type": "null"
                  },
                  "primary": {
                    "type": "boolean"
                  },
                  "row": {
                    "type": "null"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "id",
                  "end_at",
                  "post",
                  "host",
                  "begin_at",
                  "primary",
                  "floor",
                  "row",
                  "campus_id",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdLocations",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "host": "burrito",
                "begin_at": "2017-11-22T11:43:10.000Z",
                "campus_id": 2,
                "end_at": null,
                "floor": null,
                "id": 16,
                "post": null,
                "primary": true,
                "row": null,
                "user": {
                  "id": 56,
                  "login": "pdameron",
                  "url": "https://api.intra.42.fr/v2/users/pdameron"
                }
              }
            },
            "schema": {
              "properties": {
                "host": {
                  "type": "string"
                },
                "begin_at": {
                  "type": "string"
                },
                "campus_id": {
                  "type": "number"
                },
                "end_at": {
                  "type": "null"
                },
                "floor": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "post": {
                  "type": "null"
                },
                "primary": {
                  "type": "boolean"
                },
                "row": {
                  "type": "null"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "post",
                "campus_id",
                "user",
                "id",
                "primary",
                "floor",
                "host",
                "begin_at",
                "end_at",
                "row"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdLocations",
        "summary": "create"
      }
    },
    "/users/:user_id/locations/:id": {
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "PatchUsersFromUserIdLocationsById",
        "summary": "update"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "location",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Locations"
        ],
        "description": "",
        "operationId": "PutUsersFromUserIdLocationsById",
        "summary": "update"
      }
    },
    "/users/:user_id/mailings": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "attachment": null,
                  "attachments": null,
                  "bcc": [],
                  "cc": [],
                  "content": "Hi,\nYou will review thifranc's code in 15 minutes!",
                  "created_at": "2016-04-28T12:30:10.116Z",
                  "from": "noreply@42.fr",
                  "html_content": "<p>Hi,\nYou will review thifranc&#39;s code in 15 minutes!",
                  "id": 1725549,
                  "identifier": "imminent_correction_correctors",
                  "meta": {
                    "date": "2016-04-28T14:45:00+02:00",
                    "id": 268129,
                    "name": "Defense for ft_ls",
                    "other_user": "thifranc",
                    "user": "Romain Baran"
                  },
                  "subject": "Evaluation imminent",
                  "subtitle": null,
                  "title": "Evaluation imminent",
                  "to": [
                    "rbaran@student.42.fr"
                  ],
                  "updated_at": "2016-04-28T12:30:10.116Z"
                },
                {
                  "attachment": null,
                  "attachments": null,
                  "bcc": [],
                  "cc": [],
                  "content": "Hi,\nYour code will be reviewed by pnoyelle in 15 minutes!",
                  "created_at": "2016-04-28T12:30:11.252Z",
                  "from": "noreply@42.fr",
                  "html_content": "<p>Hi,\nYour code will be reviewed by pnoyelle in 15 minutes!",
                  "id": 1725550,
                  "identifier": "imminent_correction_correcteds",
                  "meta": {
                    "date": "2016-04-28T14:45:00+02:00",
                    "id": 268140,
                    "name": "Defense for ft_traceroute",
                    "other_user": "pnoyelle",
                    "user": "Jean Alexandre Bert"
                  },
                  "subject": "Evaluation imminent",
                  "subtitle": null,
                  "title": "Evaluation imminent",
                  "to": [
                    "jbert@student.42.fr"
                  ],
                  "updated_at": "2016-04-28T12:30:11.252Z"
                },
                {
                  "attachment": null,
                  "attachments": null,
                  "bcc": [],
                  "cc": [],
                  "content": "Hi,\nYou will review jbert's code in 15 minutes!",
                  "created_at": "2016-04-28T12:30:11.292Z",
                  "from": "noreply@42.fr",
                  "html_content": "<p>Hi,\nYou will review jbert&#39;s code in 15 minutes!",
                  "id": 1725551,
                  "identifier": "imminent_correction_correctors",
                  "meta": {
                    "date": "2016-04-28T14:45:00+02:00",
                    "id": 268140,
                    "name": "Defense for ft_traceroute",
                    "other_user": "jbert",
                    "user": "Pierre Noyelle"
                  },
                  "subject": "Evaluation imminent",
                  "subtitle": null,
                  "title": "Evaluation imminent",
                  "to": [
                    "pnoyelle@student.42.fr"
                  ],
                  "updated_at": "2016-04-28T12:30:11.292Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "attachment": {
                    "type": "null"
                  },
                  "attachments": {
                    "type": "null"
                  },
                  "bcc": {
                    "type": "array"
                  },
                  "cc": {
                    "type": "array"
                  },
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "from": {
                    "type": "string"
                  },
                  "html_content": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "identifier": {
                    "type": "string"
                  },
                  "meta": {
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "other_user": {
                        "type": "string"
                      },
                      "user": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "user",
                      "other_user",
                      "id",
                      "date"
                    ],
                    "type": "object"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "subtitle": {
                    "type": "null"
                  },
                  "title": {
                    "type": "string"
                  },
                  "to": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "subject",
                  "attachment",
                  "cc",
                  "bcc",
                  "id",
                  "title",
                  "created_at",
                  "identifier",
                  "meta",
                  "html_content",
                  "updated_at",
                  "subtitle",
                  "from",
                  "to",
                  "content",
                  "attachments"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Mailings"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdMailings",
        "summary": "index"
      }
    },
    "/users/:user_id/notes": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "content": "Mathieu n'aime pas se faire appeler princesse ♥️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  },
                  "id": 1,
                  "subject": "Chevelure abondante",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  }
                },
                {
                  "content": "Est secretement amoureux de flav️",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "id": 2,
                  "subject": "Amour caché",
                  "user": {
                    "id": 74,
                    "login": "andre",
                    "url": "https://api.intra.42.fr/v2/users/andre"
                  }
                },
                {
                  "content": "Est secretement amoureux de andré",
                  "created_at": "2016-04-27T07:26:38.254Z",
                  "from_user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "id": 3,
                  "subject": "Amour caché (2)",
                  "user": {
                    "id": 10935,
                    "login": "fguilloc",
                    "url": "https://api.intra.42.fr/v2/users/fguilloc"
                  }
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "from_user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "id": {
                    "type": "number"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "from_user",
                  "subject",
                  "content",
                  "created_at",
                  "user",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Notes"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdNotes",
        "summary": "index"
      }
    },
    "/users/:user_id/offers_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offer_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Offers users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdOffersUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/patronages": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:42:12.790Z",
                  "godfather": {
                    "id": 39,
                    "login": "anskywal",
                    "url": "https://api.intra.42.fr/v2/users/anskywal"
                  },
                  "godfather_id": 39,
                  "id": 122,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.796Z",
                  "user": {
                    "id": 124,
                    "login": "hsolo2",
                    "url": "https://api.intra.42.fr/v2/users/hsolo2"
                  },
                  "user_id": 124
                },
                {
                  "created_at": "2017-11-22T13:42:12.779Z",
                  "godfather": {
                    "id": 15,
                    "login": "mwindu",
                    "url": "https://api.intra.42.fr/v2/users/mwindu"
                  },
                  "godfather_id": 15,
                  "id": 121,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.786Z",
                  "user": {
                    "id": 116,
                    "login": "mwindu2",
                    "url": "https://api.intra.42.fr/v2/users/mwindu2"
                  },
                  "user_id": 116
                },
                {
                  "created_at": "2017-11-22T13:42:12.769Z",
                  "godfather": {
                    "id": 96,
                    "login": "wattwatt",
                    "url": "https://api.intra.42.fr/v2/users/wattwatt"
                  },
                  "godfather_id": 96,
                  "id": 120,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:42:12.774Z",
                  "user": {
                    "id": 123,
                    "login": "chewbche",
                    "url": "https://api.intra.42.fr/v2/users/chewbche"
                  },
                  "user_id": 123
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "godfather": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "godfather_id": {
                    "type": "number"
                  },
                  "id": {
                    "type": "number"
                  },
                  "ongoing": {
                    "type": "boolean"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "id",
                      "login"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  }
                },
                "required": [
                  "ongoing",
                  "created_at",
                  "updated_at",
                  "user",
                  "godfather",
                  "id",
                  "user_id",
                  "godfather_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdPatronages",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2017-11-22T13:43:50.782Z",
                "godfather": {
                  "id": 4,
                  "login": "kpedro",
                  "url": "https://api.intra.42.fr/v2/users/kpedro"
                },
                "godfather_id": 4,
                "id": 123,
                "ongoing": true,
                "updated_at": "2017-11-22T13:43:50.794Z",
                "user": {
                  "id": 3,
                  "login": "gargamel",
                  "url": "https://api.intra.42.fr/v2/users/gargamel"
                },
                "user_id": 3
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "godfather": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "godfather_id": {
                  "type": "number"
                },
                "id": {
                  "type": "number"
                },
                "ongoing": {
                  "type": "boolean"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                }
              },
              "required": [
                "user_id",
                "godfather_id",
                "ongoing",
                "created_at",
                "updated_at",
                "user",
                "godfather",
                "id"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdPatronages",
        "summary": "create"
      }
    },
    "/users/:user_id/patronages_reports": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdPatronagesReports",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronage_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "report_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "patronages_report",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "answers": [],
                "begin_at": "2017-11-22T13:43:10.000Z",
                "created_at": "2017-11-22T13:43:51.496Z",
                "id": 127,
                "patronage": {
                  "created_at": "2017-11-22T13:42:12.541Z",
                  "godfather_id": 96,
                  "id": 98,
                  "ongoing": true,
                  "updated_at": "2017-11-22T13:43:51.499Z",
                  "user_id": 107
                },
                "patronage_id": 98,
                "report": {
                  "comment": "",
                  "created_at": "2017-11-22T13:42:11.309Z",
                  "delay_days": 210,
                  "disclaimer_md": "",
                  "guidelines_md": "Schlitz stumptown tacos locavore ennui chartreuse pork belly. Polaroid vice readymade everyday next level. Jean shorts venmo cold-pressed crucifix.\nRamps truffaut tousled biodiesel sriracha shoreditch ugh actually. Celiac street sartorial normcore gentrify chia fingerstache photo booth. Vinyl next level locavore stumptown truffaut vice.\nEveryday keffiyeh pinterest flannel. Five dollar toast yr listicle trust fund franzen salvia. Humblebrag umami aesthetic pour-over blog before they sold out. Humblebrag occupy deep v.",
                  "id": 0,
                  "introduction_md": "",
                  "name": "Final Debriefing",
                  "slug": "final-debriefing",
                  "updated_at": "2017-11-22T13:42:11.416Z"
                },
                "report_id": 0,
                "updated_at": "2017-11-22T13:43:51.496Z",
                "user": {
                  "id": 27,
                  "login": "dcaedus",
                  "url": "https://api.intra.42.fr/v2/users/dcaedus"
                },
                "user_id": 27,
                "validated_at": null
              }
            },
            "schema": {
              "properties": {
                "answers": {
                  "type": "array"
                },
                "begin_at": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "patronage": {
                  "properties": {
                    "created_at": {
                      "type": "string"
                    },
                    "godfather_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "number"
                    },
                    "ongoing": {
                      "type": "boolean"
                    },
                    "updated_at": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "created_at",
                    "updated_at",
                    "id",
                    "user_id",
                    "godfather_id",
                    "ongoing"
                  ],
                  "type": "object"
                },
                "patronage_id": {
                  "type": "number"
                },
                "report": {
                  "properties": {
                    "comment": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string"
                    },
                    "delay_days": {
                      "type": "number"
                    },
                    "disclaimer_md": {
                      "type": "string"
                    },
                    "guidelines_md": {
                      "type": "string"
                    },
                    "id": {
                      "type": "number"
                    },
                    "introduction_md": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "disclaimer_md",
                    "guidelines_md",
                    "updated_at",
                    "name",
                    "comment",
                    "created_at",
                    "slug",
                    "delay_days",
                    "id",
                    "introduction_md"
                  ],
                  "type": "object"
                },
                "report_id": {
                  "type": "number"
                },
                "updated_at": {
                  "type": "string"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "login",
                    "url"
                  ],
                  "type": "object"
                },
                "user_id": {
                  "type": "number"
                },
                "validated_at": {
                  "type": "null"
                }
              },
              "required": [
                "id",
                "begin_at",
                "report_id",
                "patronage",
                "user_id",
                "created_at",
                "updated_at",
                "patronage_id",
                "validated_at",
                "report",
                "user",
                "answers"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Patronages reports"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdPatronagesReports",
        "summary": "create"
      }
    },
    "/users/:user_id/projects/:project_id/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "login",
                        "url",
                        "leader",
                        "occurrence",
                        "validated",
                        "projects_user_id",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "repo_uuid",
                  "closed_at",
                  "status",
                  "users",
                  "updated_at",
                  "terminating_at",
                  "locked_at",
                  "id",
                  "url",
                  "repo_url",
                  "scale_teams",
                  "created_at",
                  "locked?",
                  "project_id",
                  "validated?",
                  "closed?",
                  "project_session_id",
                  "teams_uploads",
                  "name",
                  "final_mark"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdProjectsFromProjectIdTeams",
        "summary": "index"
      }
    },
    "/users/:user_id/projects/:project_id/teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetUsersFromUserIdProjectsFromProjectIdTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/users/:user_id/projects_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "current_team_id": 1,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 1,
                  "occurrence": 0,
                  "project": {
                    "id": 2,
                    "name": "Ordinary Wizarding Levels",
                    "parent_id": null,
                    "slug": "ordinary-wizarding-levels"
                  },
                  "status": "in_progress",
                  "teams": [
                    {
                      "closed?": false,
                      "closed_at": null,
                      "created_at": "2017-11-22T13:41:28.447Z",
                      "final_mark": null,
                      "id": 1,
                      "locked?": true,
                      "locked_at": "2017-11-22T13:41:28.487Z",
                      "name": "jabinks2's group",
                      "project_id": 2,
                      "project_session_id": 2,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                      "status": "in_progress",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.519Z",
                      "url": "https://api.intra.42.fr/v2/teams/1",
                      "users": [
                        {
                          "id": 111,
                          "leader": true,
                          "login": "coundook",
                          "occurrence": 0,
                          "projects_user_id": 1,
                          "url": "https://api.intra.42.fr/v2/users/coundook",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 111,
                    "login": "jabinks2",
                    "url": "https://api.intra.42.fr/v2/users/jabinks2"
                  },
                  "validated?": null
                },
                {
                  "current_team_id": 2,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 2,
                  "occurrence": 0,
                  "project": {
                    "id": 4,
                    "name": "Hogwarts Quidditch Cup",
                    "parent_id": null,
                    "slug": "hogwarts-quidditch-cup"
                  },
                  "status": "in_progress",
                  "teams": [
                    {
                      "closed?": true,
                      "closed_at": "2017-11-22T13:41:28.578Z",
                      "created_at": "2017-11-22T13:41:28.554Z",
                      "final_mark": null,
                      "id": 2,
                      "locked?": false,
                      "locked_at": null,
                      "name": "podamer2's group",
                      "project_id": 4,
                      "project_session_id": 4,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                      "status": "in_progress",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.608Z",
                      "url": "https://api.intra.42.fr/v2/teams/2",
                      "users": [
                        {
                          "id": 108,
                          "leader": true,
                          "login": "podamer2",
                          "occurrence": 0,
                          "projects_user_id": 2,
                          "url": "https://api.intra.42.fr/v2/users/podamer2",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  },
                  "validated?": null
                },
                {
                  "current_team_id": 3,
                  "cursus_ids": [
                    1
                  ],
                  "final_mark": null,
                  "id": 3,
                  "occurrence": 0,
                  "project": {
                    "id": 5,
                    "name": "Quarter Finals",
                    "parent_id": 4,
                    "slug": "hogwarts-quidditch-cup-quarter-finals"
                  },
                  "status": "creating_group",
                  "teams": [
                    {
                      "closed?": false,
                      "closed_at": null,
                      "created_at": "2017-11-22T13:41:28.661Z",
                      "final_mark": null,
                      "id": 3,
                      "locked?": false,
                      "locked_at": null,
                      "name": "podamer2's group",
                      "project_id": 5,
                      "project_session_id": 5,
                      "repo_url": null,
                      "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                      "status": "creating_group",
                      "terminating_at": null,
                      "updated_at": "2017-11-22T13:41:28.704Z",
                      "url": "https://api.intra.42.fr/v2/teams/3",
                      "users": [
                        {
                          "id": 108,
                          "leader": true,
                          "login": "podamer2",
                          "occurrence": 0,
                          "projects_user_id": 3,
                          "url": "https://api.intra.42.fr/v2/users/podamer2",
                          "validated": true
                        }
                      ],
                      "validated?": null
                    }
                  ],
                  "user": {
                    "id": 108,
                    "login": "podamer2",
                    "url": "https://api.intra.42.fr/v2/users/podamer2"
                  },
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "current_team_id": {
                    "type": "number"
                  },
                  "cursus_ids": {
                    "items": {
                      "type": "number"
                    },
                    "type": "array"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "occurrence": {
                    "type": "number"
                  },
                  "project": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "parent_id": {
                        "type": "null"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "slug",
                      "parent_id"
                    ],
                    "type": "object"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams": {
                    "items": {
                      "properties": {
                        "closed?": {
                          "type": "boolean"
                        },
                        "closed_at": {
                          "type": "null"
                        },
                        "created_at": {
                          "type": "string"
                        },
                        "final_mark": {
                          "type": "null"
                        },
                        "id": {
                          "type": "number"
                        },
                        "locked?": {
                          "type": "boolean"
                        },
                        "locked_at": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "project_id": {
                          "type": "number"
                        },
                        "project_session_id": {
                          "type": "number"
                        },
                        "repo_url": {
                          "type": "null"
                        },
                        "repo_uuid": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "terminating_at": {
                          "type": "null"
                        },
                        "updated_at": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        },
                        "users": {
                          "items": {
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "leader": {
                                "type": "boolean"
                              },
                              "login": {
                                "type": "string"
                              },
                              "occurrence": {
                                "type": "number"
                              },
                              "projects_user_id": {
                                "type": "number"
                              },
                              "url": {
                                "type": "string"
                              },
                              "validated": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "login",
                              "url",
                              "leader",
                              "occurrence",
                              "validated",
                              "projects_user_id",
                              "id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "validated?": {
                          "type": "null"
                        }
                      },
                      "required": [
                        "users",
                        "locked?",
                        "validated?",
                        "locked_at",
                        "closed_at",
                        "url",
                        "terminating_at",
                        "id",
                        "name",
                        "project_session_id",
                        "updated_at",
                        "repo_url",
                        "created_at",
                        "status",
                        "closed?",
                        "repo_uuid",
                        "final_mark",
                        "project_id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "id",
                  "occurrence",
                  "status",
                  "current_team_id",
                  "cursus_ids",
                  "user",
                  "teams",
                  "final_mark",
                  "validated?",
                  "project"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdProjectsUsers",
        "summary": "index"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "projects_user",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "current_team_id": 69,
                "cursus_ids": [
                  1
                ],
                "final_mark": null,
                "id": 69,
                "occurrence": 0,
                "project": {
                  "id": 1,
                  "name": "Libft",
                  "parent_id": null,
                  "slug": "libft"
                },
                "status": "in_progress",
                "teams": [
                  {
                    "closed?": false,
                    "closed_at": null,
                    "created_at": "2017-11-22T13:43:56.555Z",
                    "final_mark": null,
                    "id": 69,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:43:56.581Z",
                    "name": "jeanne's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-d9a02ebd-ecdb-46fd-8ce8-ecdc4ef9352c-69",
                    "status": "in_progress",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:43:56.625Z",
                    "url": "https://api.intra.42.fr/v2/teams/69",
                    "users": [
                      {
                        "id": 1,
                        "leader": true,
                        "login": "jeanne",
                        "occurrence": 0,
                        "projects_user_id": 69,
                        "url": "https://api.intra.42.fr/v2/users/jeanne",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  }
                ],
                "user": {
                  "id": 1,
                  "login": "jeanne",
                  "url": "https://api.intra.42.fr/v2/users/jeanne"
                },
                "validated?": null
              }
            },
            "schema": {
              "properties": {
                "current_team_id": {
                  "type": "number"
                },
                "cursus_ids": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "final_mark": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "occurrence": {
                  "type": "number"
                },
                "project": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "parent_id": {
                      "type": "null"
                    },
                    "slug": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "slug",
                    "parent_id"
                  ],
                  "type": "object"
                },
                "status": {
                  "type": "string"
                },
                "teams": {
                  "items": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "occurrence",
                            "validated",
                            "projects_user_id",
                            "id",
                            "login",
                            "url",
                            "leader"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "terminating_at",
                      "closed?",
                      "repo_uuid",
                      "locked_at",
                      "id",
                      "url",
                      "updated_at",
                      "repo_url",
                      "project_session_id",
                      "name",
                      "users",
                      "locked?",
                      "project_id",
                      "validated?",
                      "closed_at",
                      "final_mark",
                      "created_at",
                      "status"
                    ],
                    "type": "object"
                  },
                  "type": "array"
                },
                "user": {
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "login": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "url",
                    "id",
                    "login"
                  ],
                  "type": "object"
                },
                "validated?": {
                  "type": "null"
                }
              },
              "required": [
                "user",
                "teams",
                "final_mark",
                "status",
                "cursus_ids",
                "current_team_id",
                "project",
                "id",
                "occurrence",
                "validated?"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdProjectsUsers",
        "summary": "create"
      }
    },
    "/users/:user_id/projects_users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Projects users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetUsersFromUserIdProjectsUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/users/:user_id/quests": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "campus": null,
                  "campus_id": null,
                  "created_at": "2017-11-22T13:42:11.464Z",
                  "cursus": {
                    "created_at": "2017-11-22T13:41:00.825Z",
                    "id": 2,
                    "name": "42",
                    "slug": "42"
                  },
                  "cursus_id": 2,
                  "description": "Reach the level 14.",
                  "grade": null,
                  "grade_id": null,
                  "id": 1,
                  "internal_name": null,
                  "kind": "main",
                  "name": "Level 14",
                  "position": 1,
                  "slug": "level-14",
                  "updated_at": "2017-11-22T13:42:11.464Z"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "campus": {
                    "type": "null"
                  },
                  "campus_id": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "cursus": {
                    "properties": {
                      "created_at": {
                        "type": "string"
                      },
                      "id": {
                        "type": "number"
                      },
                      "name": {
                        "type": "string"
                      },
                      "slug": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "created_at",
                      "name",
                      "slug"
                    ],
                    "type": "object"
                  },
                  "cursus_id": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "grade": {
                    "type": "null"
                  },
                  "grade_id": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "internal_name": {
                    "type": "null"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "position": {
                    "type": "number"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "updated_at": {
                    "type": "string"
                  }
                },
                "required": [
                  "grade_id",
                  "position",
                  "grade",
                  "cursus",
                  "slug",
                  "cursus_id",
                  "campus_id",
                  "kind",
                  "internal_name",
                  "description",
                  "id",
                  "created_at",
                  "name",
                  "updated_at",
                  "campus"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdQuests",
        "summary": "index"
      }
    },
    "/users/:user_id/quests_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "quest_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.488Z",
                  "end_at": null,
                  "id": 5,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.488Z",
                  "user": {
                    "id": 113,
                    "login": "bhutt3",
                    "url": "https://api.intra.42.fr/v2/users/bhutt3"
                  },
                  "validated_at": null
                },
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.484Z",
                  "end_at": null,
                  "id": 4,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.484Z",
                  "user": {
                    "id": 53,
                    "login": "dvader",
                    "url": "https://api.intra.42.fr/v2/users/dvader"
                  },
                  "validated_at": null
                },
                {
                  "advancement": null,
                  "created_at": "2017-11-22T13:42:11.480Z",
                  "end_at": null,
                  "id": 3,
                  "prct": null,
                  "quest": {
                    "campus_id": null,
                    "created_at": "2017-11-22T13:42:11.464Z",
                    "cursus_id": 2,
                    "description": "Reach the level 14.",
                    "grade_id": null,
                    "id": 1,
                    "internal_name": null,
                    "kind": "main",
                    "name": "Level 14",
                    "position": 1,
                    "slug": "level-14",
                    "updated_at": "2017-11-22T13:42:11.464Z"
                  },
                  "quest_id": 1,
                  "updated_at": "2017-11-22T13:42:11.480Z",
                  "user": {
                    "id": 15,
                    "login": "mwindu",
                    "url": "https://api.intra.42.fr/v2/users/mwindu"
                  },
                  "validated_at": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "advancement": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "prct": {
                    "type": "null"
                  },
                  "quest": {
                    "properties": {
                      "campus_id": {
                        "type": "null"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "cursus_id": {
                        "type": "number"
                      },
                      "description": {
                        "type": "string"
                      },
                      "grade_id": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "internal_name": {
                        "type": "null"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "position": {
                        "type": "number"
                      },
                      "slug": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "slug",
                      "kind",
                      "updated_at",
                      "grade_id",
                      "id",
                      "name",
                      "internal_name",
                      "description",
                      "cursus_id",
                      "campus_id",
                      "created_at",
                      "position"
                    ],
                    "type": "object"
                  },
                  "quest_id": {
                    "type": "number"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "validated_at": {
                    "type": "null"
                  }
                },
                "required": [
                  "advancement",
                  "updated_at",
                  "user",
                  "quest",
                  "prct",
                  "end_at",
                  "quest_id",
                  "validated_at",
                  "created_at",
                  "id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Quests users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdQuestsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/roles": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "description": "Manage companies",
                  "id": 17,
                  "name": "Companies Manager"
                },
                {
                  "description": "Approved application without rate limits",
                  "id": 16,
                  "name": "Official App"
                },
                {
                  "description": "Manage users achievements and titles",
                  "id": 15,
                  "name": "Achievements Manager"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "description",
                  "id",
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Roles"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdRoles",
        "summary": "index"
      }
    },
    "/users/:user_id/scale_teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdScaleTeams",
        "summary": "index"
      }
    },
    "/users/:user_id/scale_teams/as_corrected": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdScaleTeamsAsCorrected",
        "summary": "index"
      }
    },
    "/users/:user_id/scale_teams/as_corrector": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": []
            },
            "schema": {
              "type": "array"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdScaleTeamsAsCorrector",
        "summary": "index"
      }
    },
    "/users/:user_id/scale_teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 1
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Scale teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetUsersFromUserIdScaleTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/users/:user_id/scales": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "comment": "Banh mi dreamcatcher ad natus. Aut blog sunt nostrum est repellendus. Fingerstache hammock echo sed.",
                  "correction_number": 3,
                  "created_at": "2016-05-04T10:45:05.519Z",
                  "disclaimer_md": "Adipisci iusto qui laborum tote bag letterpress brooklyn. Voluptatibus fanny pack ea wayfarers.",
                  "duration": 1800,
                  "evaluation": {
                    "id": 168,
                    "kind": "scale"
                  },
                  "evaluation_id": 168,
                  "guidelines_md": "Chartreuse sequi repellendus squid franzen qui. Voluptatum sint cornhole mustache single-origin coffee typewriter. Qui omnis ramps vitae gluten-free corrupti 8-bit nam.",
                  "id": 531,
                  "introduction_md": "Chambray mumblecore non harum mustache wayfarers eius. Sartorial lumbersexual street tenetur keffiyeh. Dolorum pbr&b eveniet nihil neque dolores non. Banh mi atque officia eaque cumque.",
                  "is_primary": true,
                  "languages": [
                    {
                      "created_at": "2015-04-14T16:07:38.122Z",
                      "id": 2,
                      "identifier": "en",
                      "name": "English",
                      "updated_at": "2015-04-14T16:07:38.122Z"
                    }
                  ],
                  "manual_subscription": true,
                  "name": "Unicooooorn !",
                  "sections": [
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1975,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:05.785Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5854,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1976,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.131Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5855,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1977,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:06.457Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5856,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    },
                    {
                      "description": "Rem butcher blue bottle ex cum. Knausgaard plaid quis chambray wayfarers. Vegan laboriosam occaecati chicharrones sed selfies neque.",
                      "id": 1978,
                      "name": "Nebraska druids",
                      "questions": [
                        {
                          "created_at": "2016-05-04T10:45:07.035Z",
                          "guidelines": "Sriracha occupy farm-to-table venmo. Semiotics quinoa drinking. Craft beer viral kinfolk. Portland mumblecore diy butcher knausgaard flexitarian tacos cold-pressed. Food truck before they sold out park biodiesel.",
                          "id": 5857,
                          "kind": "standard",
                          "name": "Florida buffalo",
                          "rating": "bool"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "correction_number": {
                    "type": "number"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "disclaimer_md": {
                    "type": "string"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "evaluation": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "kind": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "kind"
                    ],
                    "type": "object"
                  },
                  "evaluation_id": {
                    "type": "number"
                  },
                  "guidelines_md": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "introduction_md": {
                    "type": "string"
                  },
                  "is_primary": {
                    "type": "boolean"
                  },
                  "languages": {
                    "items": {
                      "properties": {
                        "created_at": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "identifier": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "identifier",
                        "created_at",
                        "updated_at"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "manual_subscription": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "sections": {
                    "items": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "questions": {
                          "items": {
                            "properties": {
                              "created_at": {
                                "type": "string"
                              },
                              "guidelines": {
                                "type": "string"
                              },
                              "id": {
                                "type": "number"
                              },
                              "kind": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "rating": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "created_at",
                              "id",
                              "name",
                              "guidelines",
                              "rating",
                              "kind"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "description",
                        "questions",
                        "id",
                        "name"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "comment",
                  "created_at",
                  "name",
                  "evaluation_id",
                  "guidelines_md",
                  "manual_subscription",
                  "id",
                  "correction_number",
                  "duration",
                  "sections",
                  "evaluation",
                  "is_primary",
                  "disclaimer_md",
                  "languages",
                  "introduction_md"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Scales"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdScales",
        "summary": "index"
      }
    },
    "/users/:user_id/slots": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 27,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 76,
                  "scale_team": null,
                  "user": "invisible"
                },
                {
                  "begin_at": "2017-11-24T20:15:00.000Z",
                  "end_at": "2017-11-24T20:30:00.000Z",
                  "id": 110,
                  "scale_team": null,
                  "user": "invisible"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "begin_at": {
                    "type": "string"
                  },
                  "end_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "scale_team": {
                    "type": "null"
                  },
                  "user": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "begin_at",
                  "end_at",
                  "scale_team",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "\n<blockquote>A Slot is a time interval when a user desclares himself available to evaluate other users. Actually, a slot must be at least 1800 minutes by default (with a granularity of 15 minutes). Campus can manage and edit the minimum slot duration. A slot can be set every day between 30 minutes and 2 weeks in advance.</blockquote>\nThis call obviously lists all slots.An user without the <code>advanced tutor</code> role can’t set the <code>user_id</code> or the <code>scale_team_id</code> parameter.\n<ul>\n<li><strong>if there is a resource owner</strong> (an user uses this api trough your app, with the <a href=\"http://api.intra.42.fr/apidoc/guides/web_application_flow\">web application flow</a>):\n<ul>\n<li>The <code>/me/slots</code> endpoint will list all the slots set by the current user.</li>\n\n<li>The <code>/projects/:project_id/slots</code> endpoint will list all the available slots for the given project. Theses slots can be booked by the current user in order to make a defense.</li>\n</ul>\n</li>\n\n<li><strong>if there isn’t a resource owner</strong>\n<ul>\n<li>The <code>/projects/:project_id/slots</code> endpoint lists all the slots scheduled (with a <code>scale_team</code>) on this project, including all the past ones.</li>\n\n<li>The <code>/users/:user_id/slots</code> endpoint lists all the slots for the requested user, as evaluator and as evaluated. This call is restricted.</li>\n</ul>\n</li>\n</ul>\nIn all the cases, the <code>/slots</code> endpoint lists all the slots, booked or not, including all the past ones.",
        "operationId": "GetUsersFromUserIdSlots",
        "summary": "index"
      }
    },
    "/users/:user_id/slots/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-20": 123,
                "2017-11-21": 0,
                "2017-11-22": 0,
                "2017-11-23": 0,
                "2017-11-24": 1266
              }
            },
            "schema": {
              "properties": {
                "2017-11-20": {
                  "type": "number"
                },
                "2017-11-21": {
                  "type": "number"
                },
                "2017-11-22": {
                  "type": "number"
                },
                "2017-11-23": {
                  "type": "number"
                },
                "2017-11-24": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-21",
                "2017-11-22",
                "2017-11-23",
                "2017-11-24",
                "2017-11-20"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Slots"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetUsersFromUserIdSlotsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/users/:user_id/tags": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "issue_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "notion_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 11,
                  "kind": "archived",
                  "name": "Archived",
                  "subnotions": [],
                  "users": []
                },
                {
                  "id": 7,
                  "kind": "general",
                  "name": "Bocal",
                  "subnotions": [
                    {
                      "created_at": "2017-11-22T13:41:24.154Z",
                      "id": 1,
                      "name": "Emacs",
                      "notepad": null,
                      "slug": "piscine-c-text-editors-emacs"
                    }
                  ],
                  "users": []
                },
                {
                  "id": 4,
                  "kind": "project",
                  "name": "Colle 08",
                  "subnotions": [],
                  "users": []
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "subnotions": {
                    "type": "array"
                  },
                  "users": {
                    "type": "array"
                  }
                },
                "required": [
                  "subnotions",
                  "id",
                  "name",
                  "kind",
                  "users"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Tags"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTags",
        "summary": "index"
      }
    },
    "/users/:user_id/tags_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "campus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "tag_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Tags users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTagsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/teams": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "cursus_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "project_session_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.447Z",
                  "final_mark": null,
                  "id": 1,
                  "locked?": true,
                  "locked_at": "2017-11-22T13:41:28.487Z",
                  "name": "jabinks2's group",
                  "project_id": 2,
                  "project_session_id": 2,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-e8f23ddc-8e52-47a8-87e9-9bd490621cfd-1",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.519Z",
                  "url": "https://api.intra.42.fr/v2/teams/1",
                  "users": [
                    {
                      "id": 111,
                      "leader": true,
                      "login": "coundook",
                      "occurrence": 0,
                      "projects_user_id": 1,
                      "url": "https://api.intra.42.fr/v2/users/coundook",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": true,
                  "closed_at": "2017-11-22T13:41:28.578Z",
                  "created_at": "2017-11-22T13:41:28.554Z",
                  "final_mark": null,
                  "id": 2,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 4,
                  "project_session_id": 4,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-ae9bdbbc-9c16-4c27-8f18-eccee5a31020-2",
                  "scale_teams": [],
                  "status": "in_progress",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.608Z",
                  "url": "https://api.intra.42.fr/v2/teams/2",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 2,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                },
                {
                  "closed?": false,
                  "closed_at": null,
                  "created_at": "2017-11-22T13:41:28.661Z",
                  "final_mark": null,
                  "id": 3,
                  "locked?": false,
                  "locked_at": null,
                  "name": "podamer2's group",
                  "project_id": 5,
                  "project_session_id": 5,
                  "repo_url": null,
                  "repo_uuid": "intra-uuid-d6aded82-d02e-4597-a33a-acd2544ec015-3",
                  "scale_teams": [],
                  "status": "creating_group",
                  "teams_uploads": [],
                  "terminating_at": null,
                  "updated_at": "2017-11-22T13:41:28.704Z",
                  "url": "https://api.intra.42.fr/v2/teams/3",
                  "users": [
                    {
                      "id": 108,
                      "leader": true,
                      "login": "podamer2",
                      "occurrence": 0,
                      "projects_user_id": 3,
                      "url": "https://api.intra.42.fr/v2/users/podamer2",
                      "validated": true
                    }
                  ],
                  "validated?": null
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "closed?": {
                    "type": "boolean"
                  },
                  "closed_at": {
                    "type": "null"
                  },
                  "created_at": {
                    "type": "string"
                  },
                  "final_mark": {
                    "type": "null"
                  },
                  "id": {
                    "type": "number"
                  },
                  "locked?": {
                    "type": "boolean"
                  },
                  "locked_at": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "number"
                  },
                  "project_session_id": {
                    "type": "number"
                  },
                  "repo_url": {
                    "type": "null"
                  },
                  "repo_uuid": {
                    "type": "string"
                  },
                  "scale_teams": {
                    "type": "array"
                  },
                  "status": {
                    "type": "string"
                  },
                  "teams_uploads": {
                    "type": "array"
                  },
                  "terminating_at": {
                    "type": "null"
                  },
                  "updated_at": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  },
                  "users": {
                    "items": {
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "leader": {
                          "type": "boolean"
                        },
                        "login": {
                          "type": "string"
                        },
                        "occurrence": {
                          "type": "number"
                        },
                        "projects_user_id": {
                          "type": "number"
                        },
                        "url": {
                          "type": "string"
                        },
                        "validated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "login",
                        "url",
                        "leader",
                        "occurrence",
                        "validated",
                        "projects_user_id",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "validated?": {
                    "type": "null"
                  }
                },
                "required": [
                  "project_session_id",
                  "teams_uploads",
                  "name",
                  "final_mark",
                  "project_id",
                  "validated?",
                  "closed?",
                  "status",
                  "users",
                  "repo_uuid",
                  "closed_at",
                  "id",
                  "url",
                  "updated_at",
                  "terminating_at",
                  "locked_at",
                  "created_at",
                  "locked?",
                  "repo_url",
                  "scale_teams"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTeams",
        "summary": "index"
      }
    },
    "/users/:user_id/teams/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 68
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Teams"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetUsersFromUserIdTeamsGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/users/:user_id/teams_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "team_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2017-11-22T13:41:37.430Z",
                  "id": 68,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.496Z",
                    "created_at": "2017-11-22T13:41:37.418Z",
                    "final_mark": null,
                    "id": 68,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.471Z",
                    "name": "sebulseb's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5af5ca8d-e0dc-4791-9cfc-ed657e1984e0-68",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:42:09.246Z",
                    "url": "https://api.intra.42.fr/v2/teams/68",
                    "users": [
                      {
                        "id": 125,
                        "leader": true,
                        "login": "sebulseb",
                        "occurrence": 0,
                        "projects_user_id": 68,
                        "url": "https://api.intra.42.fr/v2/users/sebulseb",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 68,
                  "user": {
                    "id": 125,
                    "login": "sebulseb",
                    "url": "https://api.intra.42.fr/v2/users/sebulseb"
                  },
                  "user_id": 125,
                  "validated": true
                },
                {
                  "created_at": "2017-11-22T13:41:37.310Z",
                  "id": 67,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.385Z",
                    "created_at": "2017-11-22T13:41:37.298Z",
                    "final_mark": null,
                    "id": 67,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.358Z",
                    "name": "hasolo's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-4c9b8f90-9b63-4b8a-b919-4e0d664544c2-67",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:37.386Z",
                    "url": "https://api.intra.42.fr/v2/teams/67",
                    "users": [
                      {
                        "id": 119,
                        "leader": true,
                        "login": "hasolo",
                        "occurrence": 0,
                        "projects_user_id": 67,
                        "url": "https://api.intra.42.fr/v2/users/hasolo",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 67,
                  "user": {
                    "id": 119,
                    "login": "hasolo",
                    "url": "https://api.intra.42.fr/v2/users/hasolo"
                  },
                  "user_id": 119,
                  "validated": true
                },
                {
                  "created_at": "2017-11-22T13:41:37.187Z",
                  "id": 66,
                  "leader": true,
                  "occurrence": 0,
                  "team": {
                    "closed?": true,
                    "closed_at": "2017-11-22T13:41:37.262Z",
                    "created_at": "2017-11-22T13:41:37.174Z",
                    "final_mark": null,
                    "id": 66,
                    "locked?": true,
                    "locked_at": "2017-11-22T13:41:37.238Z",
                    "name": "jarbink2's group",
                    "project_id": 1,
                    "project_session_id": 1,
                    "repo_url": null,
                    "repo_uuid": "intra-uuid-5f077c0e-351b-4d77-8334-dac656e42798-66",
                    "status": "waiting_for_correction",
                    "terminating_at": null,
                    "updated_at": "2017-11-22T13:41:37.263Z",
                    "url": "https://api.intra.42.fr/v2/teams/66",
                    "users": [
                      {
                        "id": 118,
                        "leader": true,
                        "login": "padamida",
                        "occurrence": 0,
                        "projects_user_id": 66,
                        "url": "https://api.intra.42.fr/v2/users/padamida",
                        "validated": true
                      }
                    ],
                    "validated?": null
                  },
                  "team_id": 66,
                  "user": {
                    "id": 118,
                    "login": "jarbink2",
                    "url": "https://api.intra.42.fr/v2/users/jarbink2"
                  },
                  "user_id": 118,
                  "validated": true
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "leader": {
                    "type": "boolean"
                  },
                  "occurrence": {
                    "type": "number"
                  },
                  "team": {
                    "properties": {
                      "closed?": {
                        "type": "boolean"
                      },
                      "closed_at": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      },
                      "final_mark": {
                        "type": "null"
                      },
                      "id": {
                        "type": "number"
                      },
                      "locked?": {
                        "type": "boolean"
                      },
                      "locked_at": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "project_id": {
                        "type": "number"
                      },
                      "project_session_id": {
                        "type": "number"
                      },
                      "repo_url": {
                        "type": "null"
                      },
                      "repo_uuid": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "terminating_at": {
                        "type": "null"
                      },
                      "updated_at": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      },
                      "users": {
                        "items": {
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "leader": {
                              "type": "boolean"
                            },
                            "login": {
                              "type": "string"
                            },
                            "occurrence": {
                              "type": "number"
                            },
                            "projects_user_id": {
                              "type": "number"
                            },
                            "url": {
                              "type": "string"
                            },
                            "validated": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "id",
                            "login",
                            "url",
                            "leader",
                            "occurrence",
                            "validated",
                            "projects_user_id"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "validated?": {
                        "type": "null"
                      }
                    },
                    "required": [
                      "users",
                      "closed_at",
                      "id",
                      "final_mark",
                      "repo_url",
                      "validated?",
                      "locked_at",
                      "url",
                      "updated_at",
                      "created_at",
                      "status",
                      "terminating_at",
                      "locked?",
                      "closed?",
                      "repo_uuid",
                      "name",
                      "project_id",
                      "project_session_id"
                    ],
                    "type": "object"
                  },
                  "team_id": {
                    "type": "number"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "login",
                      "url"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "validated": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "team",
                  "id",
                  "user_id",
                  "created_at",
                  "validated",
                  "leader",
                  "team_id",
                  "occurrence",
                  "user"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Teams users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTeamsUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/titles": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTitles",
        "summary": "index"
      }
    },
    "/users/:user_id/titles_users": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Titles users"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTitlesUsers",
        "summary": "index"
      }
    },
    "/users/:user_id/transactions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "reason": "Mathieu c'est le plus fort ♥️",
                  "transactable_id": 81,
                  "transactable_type": "Achievement",
                  "user": {
                    "id": 22,
                    "login": "mathieu",
                    "url": "https://api.intra.42.fr/v2/users/mathieu"
                  },
                  "user_id": 22,
                  "value": 150
                },
                {
                  "id": 2,
                  "reason": "Réunion entre démons.",
                  "transactable_id": 186,
                  "transactable_type": "Event",
                  "user": {
                    "id": 123,
                    "login": "jeanne",
                    "url": "https://api.intra.42.fr/v2/users/jeanne"
                  },
                  "user_id": 123,
                  "value": 666
                },
                {
                  "id": 2,
                  "reason": "Exam C 24 janvier",
                  "transactable_id": null,
                  "transactable_type": "Tuteur api",
                  "user": {
                    "id": 12837,
                    "login": "jbailhac",
                    "url": "https://api.intra.42.fr/v2/users/jbailhac"
                  },
                  "user_id": 12837,
                  "value": 1
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "reason": {
                    "type": "string"
                  },
                  "transactable_id": {
                    "type": "number"
                  },
                  "transactable_type": {
                    "type": "string"
                  },
                  "user": {
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "login": {
                        "type": "string"
                      },
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url",
                      "id",
                      "login"
                    ],
                    "type": "object"
                  },
                  "user_id": {
                    "type": "number"
                  },
                  "value": {
                    "type": "number"
                  }
                },
                "required": [
                  "transactable_id",
                  "transactable_type",
                  "reason",
                  "user",
                  "id",
                  "value",
                  "user_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Transactions"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdTransactions",
        "summary": "index"
      }
    },
    "/users/:user_id/unfreeze": {
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "default": {
            "description": "Default response",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "End all agus",
        "operationId": "PostUsersFromUserIdUnfreeze",
        "summary": "unfreeze"
      }
    },
    "/users/:user_id/user_candidature": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "birth_city": "East Rosieland",
                "birth_country": "Kamino",
                "birth_date": "1993-05-04",
                "contact_affiliation": null,
                "contact_first_name": null,
                "contact_last_name": null,
                "contact_phone1": null,
                "contact_phone2": null,
                "country": "Kashyyyk",
                "created_at": "2017-11-22T13:41:06.408Z",
                "email": "chewbacca@braunleuschke.biz",
                "gender": "male",
                "hidden_phone": null,
                "id": 23,
                "language": null,
                "max_level_logic": null,
                "max_level_memory": null,
                "meeting_date": null,
                "other_information": null,
                "phone": null,
                "phone_country_code": null,
                "pin": null,
                "piscine_date": null,
                "postal_city": "Keagantown",
                "postal_complement": null,
                "postal_country": null,
                "postal_street": "11747 Jerod Drives",
                "postal_zip_code": null,
                "updated_at": "2017-11-22T13:41:06.408Z",
                "user_id": 23,
                "zip_code": "71800-2563"
              }
            },
            "schema": {
              "properties": {
                "birth_city": {
                  "type": "string"
                },
                "birth_country": {
                  "type": "string"
                },
                "birth_date": {
                  "type": "string"
                },
                "contact_affiliation": {
                  "type": "null"
                },
                "contact_first_name": {
                  "type": "null"
                },
                "contact_last_name": {
                  "type": "null"
                },
                "contact_phone1": {
                  "type": "null"
                },
                "contact_phone2": {
                  "type": "null"
                },
                "country": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "gender": {
                  "type": "string"
                },
                "hidden_phone": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "type": "null"
                },
                "max_level_logic": {
                  "type": "null"
                },
                "max_level_memory": {
                  "type": "null"
                },
                "meeting_date": {
                  "type": "null"
                },
                "other_information": {
                  "type": "null"
                },
                "phone": {
                  "type": "null"
                },
                "phone_country_code": {
                  "type": "null"
                },
                "pin": {
                  "type": "null"
                },
                "piscine_date": {
                  "type": "null"
                },
                "postal_city": {
                  "type": "string"
                },
                "postal_complement": {
                  "type": "null"
                },
                "postal_country": {
                  "type": "null"
                },
                "postal_street": {
                  "type": "string"
                },
                "postal_zip_code": {
                  "type": "null"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "piscine_date",
                "updated_at",
                "id",
                "birth_city",
                "birth_country",
                "contact_last_name",
                "other_information",
                "created_at",
                "postal_country",
                "contact_affiliation",
                "phone",
                "postal_city",
                "contact_phone2",
                "pin",
                "language",
                "phone_country_code",
                "postal_complement",
                "contact_phone1",
                "max_level_memory",
                "meeting_date",
                "email",
                "hidden_phone",
                "birth_date",
                "postal_zip_code",
                "max_level_logic",
                "user_id",
                "zip_code",
                "country",
                "gender",
                "postal_street",
                "contact_first_name"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "GetUsersFromUserIdUserCandidature",
        "summary": "show"
      },
      "patch": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_candidature",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "PatchUsersFromUserIdUserCandidature",
        "summary": "update"
      },
      "post": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_candidature",
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "examples": {
              "application/json": {
                "birth_city": "West Stefanieburgh",
                "birth_country": "Burkina Faso",
                "birth_date": "1989-01-30",
                "contact_affiliation": "other",
                "contact_first_name": "Barton",
                "contact_last_name": "Mertz",
                "contact_phone1": "0695847362",
                "contact_phone2": "0491314200",
                "country": "Honduras",
                "created_at": "2017-11-22T13:44:17.725Z",
                "email": null,
                "gender": "female",
                "hidden_phone": null,
                "id": 127,
                "language": "",
                "max_level_logic": 2,
                "max_level_memory": 1,
                "meeting_date": "2017-07-11T00:00:00.000Z",
                "other_information": "3",
                "phone": null,
                "phone_country_code": null,
                "pin": "4242",
                "piscine_date": "2017-11-15",
                "postal_city": "Tillmanton",
                "postal_complement": "",
                "postal_country": "Georgia",
                "postal_street": "5030 Serenity Plaza",
                "postal_zip_code": "65440",
                "updated_at": "2017-11-22T13:44:17.725Z",
                "user_id": 9,
                "zip_code": "37528-3874"
              }
            },
            "schema": {
              "properties": {
                "birth_city": {
                  "type": "string"
                },
                "birth_country": {
                  "type": "string"
                },
                "birth_date": {
                  "type": "string"
                },
                "contact_affiliation": {
                  "type": "string"
                },
                "contact_first_name": {
                  "type": "string"
                },
                "contact_last_name": {
                  "type": "string"
                },
                "contact_phone1": {
                  "type": "string"
                },
                "contact_phone2": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string"
                },
                "email": {
                  "type": "null"
                },
                "gender": {
                  "type": "string"
                },
                "hidden_phone": {
                  "type": "null"
                },
                "id": {
                  "type": "number"
                },
                "language": {
                  "type": "string"
                },
                "max_level_logic": {
                  "type": "number"
                },
                "max_level_memory": {
                  "type": "number"
                },
                "meeting_date": {
                  "type": "string"
                },
                "other_information": {
                  "type": "string"
                },
                "phone": {
                  "type": "null"
                },
                "phone_country_code": {
                  "type": "null"
                },
                "pin": {
                  "type": "string"
                },
                "piscine_date": {
                  "type": "string"
                },
                "postal_city": {
                  "type": "string"
                },
                "postal_complement": {
                  "type": "string"
                },
                "postal_country": {
                  "type": "string"
                },
                "postal_street": {
                  "type": "string"
                },
                "postal_zip_code": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string"
                },
                "user_id": {
                  "type": "number"
                },
                "zip_code": {
                  "type": "string"
                }
              },
              "required": [
                "country",
                "user_id",
                "postal_complement",
                "postal_country",
                "contact_last_name",
                "phone",
                "zip_code",
                "max_level_logic",
                "pin",
                "birth_city",
                "birth_country",
                "language",
                "piscine_date",
                "birth_date",
                "gender",
                "contact_first_name",
                "contact_phone1",
                "max_level_memory",
                "meeting_date",
                "created_at",
                "email",
                "id",
                "other_information",
                "postal_zip_code",
                "contact_affiliation",
                "contact_phone2",
                "updated_at",
                "phone_country_code",
                "hidden_phone",
                "postal_city",
                "postal_street"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "PostUsersFromUserIdUserCandidature",
        "summary": "create"
      },
      "put": {
        "parameters": [
          {
            "in": "query",
            "name": "user_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "user_candidature",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "User candidatures"
        ],
        "description": "",
        "operationId": "PutUsersFromUserIdUserCandidature",
        "summary": "update"
      }
    },
    "/users/graph(/on/:field(/by/:interval))": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "type": "string"
          },
          {
            "in": "query",
            "name": "interval",
            "type": "string"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "range",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "2017-11-22": 126
              }
            },
            "schema": {
              "properties": {
                "2017-11-22": {
                  "type": "number"
                }
              },
              "required": [
                "2017-11-22"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Users"
        ],
        "description": "Count all occurences on a particular field (default on <code>created_at</code>) by a particular period, starting from the first occurence to now.",
        "operationId": "GetUsersGraphOnFromFieldByByInterval",
        "summary": "graph"
      }
    },
    "/waitlists": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sort",
            "type": "string"
          },
          {
            "in": "query",
            "name": "filter",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": [
                {
                  "created_at": "2018-09-13T18:55:37.552Z",
                  "id": 1,
                  "waitlistable_id": 1669,
                  "waitlistable_type": "Exam"
                },
                {
                  "created_at": "2018-09-13T18:56:36.902Z",
                  "id": 2,
                  "waitlistable_id": 1670,
                  "waitlistable_type": "Exam"
                },
                {
                  "created_at": "2018-09-13T18:57:13.021Z",
                  "id": 3,
                  "waitlistable_id": 1671,
                  "waitlistable_type": "Exam"
                },
                {
                  "created_at": "2018-09-13T18:58:01.760Z",
                  "id": 4,
                  "waitlistable_id": 1672,
                  "waitlistable_type": "Exam"
                },
                {
                  "created_at": "2018-09-14T08:16:14.076Z",
                  "id": 5,
                  "waitlistable_id": 1673,
                  "waitlistable_type": "Exam"
                },
                {
                  "created_at": "2018-09-14T10:01:19.094Z",
                  "id": 8,
                  "waitlistable_id": 1676,
                  "waitlistable_type": "Exam"
                }
              ]
            },
            "schema": {
              "items": {
                "properties": {
                  "created_at": {
                    "type": "string"
                  },
                  "id": {
                    "type": "number"
                  },
                  "waitlistable_id": {
                    "type": "number"
                  },
                  "waitlistable_type": {
                    "type": "string"
                  }
                },
                "required": [
                  "waitlistable_type",
                  "created_at",
                  "id",
                  "waitlistable_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "Waitlists"
        ],
        "description": "",
        "operationId": "GetWaitlists",
        "summary": "index"
      }
    },
    "/waitlists/:id": {
      "delete": {
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Waitlists"
        ],
        "description": "",
        "operationId": "DeleteWaitlistsById",
        "summary": "destroy"
      },
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "event_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "exam_id",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "created_at": "2018-09-19T15:15:33.124Z",
                "id": 32,
                "waitlistable_id": 2530,
                "waitlistable_type": "Event"
              }
            },
            "schema": {
              "properties": {
                "created_at": {
                  "type": "string"
                },
                "id": {
                  "type": "number"
                },
                "waitlistable_id": {
                  "type": "number"
                },
                "waitlistable_type": {
                  "type": "string"
                }
              },
              "required": [
                "created_at",
                "id",
                "waitlistable_id",
                "waitlistable_type"
              ],
              "type": "object"
            }
          }
        },
        "tags": [
          "Waitlists"
        ],
        "description": "",
        "operationId": "GetWaitlistsById",
        "summary": "show"
      }
    }
  },
  "definitions": {
    "Response": {
      "properties": {
        "data": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "x-components": {}
}
